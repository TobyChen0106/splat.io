{"version":3,"sources":["components/ColorSets.js","images/player/p-02-01.svg","images/player/p-02-02.svg","images/player/p-02-03.svg","images/player/p-03.svg","images/player/p-02-04.svg","sounds/inkHit/inkHit06.wav","images/ink/n-01.svg","images/ink/n-02.svg","images/ink/n-03.svg","sounds/shoot/HitEffectiveCommon02.wav","sounds/shoot/BulletHitNoDamage.wav","images/inkBar.svg","images/temp.gif","images/logo.png","images/rock1.svg","enum/gameState.js","enum/playerStatus.js","draw/drawPlayer.js","field/field.js","draw/drawField.js","draw/drawSplat.js","draw/drawAimPoint.js","draw/drawBullet.js","draw/drawAllPlayers.js","components/ColorAssets.js","weapons/weapons.js","utils/getKeyDownState.js","utils/getKeyUpState.js","utils/mousePos.js","utils/updatePlayerPosition.js","utils/getSplats.js","utils/getPlayerStatus.js","utils/getPlayerSpeed.js","utils/getInkAmount.js","utils/getLineIntersection.js","utils/checkCollision.js","components/inkBar.jsx","components/Game.js","components/JumpoutWindow.jsx","containers/Home.js","components/UserBlock.jsx","containers/Wait.js","containers/Result.js","containers/Index.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","main","glow","shadow","this","__webpack_require__","p","GAME_STATE","WAITING","GAMING","FREEZE","FINISH","PLAYER_STATUS","STANDING_OWN","WALKING_OWN","DIVING_OWN","SWIMMING_OWN","ATTACKING_OWN","STANDING_SPACE","WALKING_SPACE","DIVING_SPACE","SWIMMING_SPACE","ATTACKING_SPACE","STANDING_ENEMY","WALKING_ENEMY","DIVING_ENEMY","SWIMMING_ENEMY","ATTACKING_ENEMY","body","Image","leftHand","rightHand","gun","dive","ripple","lastRipplePosition","x","y","drawPlayer","c","a","state","context","getContext","playerStatus","drawPlayerNormal","drawPlayerDive","r_context","Math","abs","playerPosition","push","clearRect","width","height","r","length","drawRipple","drawRipple2","drawRipple3","splice","playerName","playerColor","playerAngle","save","translate","font","playerNameLen","measureText","strokeStyle","lineWidth","strokeText","fillStyle","fillText","restore","src","playerSVG","LeftHandSVG","RightHandSVG","gunSVG","rotate","PI","drawImage","playerWidth","playerHeight","diveSVG","graph","centerX","centerY","radius","sides","theta","beginPath","i","sin","cos","lineTo","closePath","max","stroke","battleField_1","fieldRange","xMin","xMax","yMin","yMax","rectObjects","polyObjects","drawField","field","objects","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","path","drawRectUsingArc","offset","obj_path","fill","drawPolyUsingArc","Path2D","moveTo","arc","polyObject","n","ink","ink01","ink02","ink03","audio","Audio","inkHit06","volume","drawSplat","splat","aimX","aimY","angle","ink_size","img","onload","currentTime","play","drawAimPoint","mousePosition","aimPoints","maindrawAimCircle","drawRealAimCircle","drawBullet","bullets","drawCircle","drawCircleOutLine","drawAllPlayers","splatRef","bulletRef","playerRef","splatAnimationRef","players","splats","COLOR_ASSET","Colors","weapons","splatterShot_v1","type","maxShootDistance","bulletSpeed","fireSpeed","fireInkCost","maxError","gunLength","splatSize","splatDamage","splatShapeId","sub","price","getKeyDownState","e","key","playerMoveDirection","keyStrokeState","up","down","left","right","space","getKeyUpState","getMousePos","event","mouseClient","clientX","clientY","calculatePlayerAngle","x1","y1","x2","y2","comp","quotient","radiansToDegrees","atan","radians","updatePlayerPosition","playerData","localPlayerData","gameState","p_x","p_y","speed","playerMoveSpeed","d_x","d_y","new_x","new_y","min","temp_new_x","temp_new_y","fireAudio","shootSound","noInkAudio","noInkSound","lines","timeLog","getSplats","otherPlayers","m_x","m_y","inkConsumption","playerWeapon","c_x_a","c_y_a","mouseLength","pow","shootDistance","fieldCheckPos_a","checkFieldCollision","playerCheckPos_a","checkPlayerCollision","random","c_x","c_y","g_x","g_y","fieldCheckPos","playerCheckPos","bullet_length","mouseDownState","timeStamp","inkAmount","l","splat_angle","floor","getPlayerStatus","ownColor","hex","result","exec","parseInt","hexToRgb","getImageData","data","own_color_count","empty_color_count","j","field_property","getPlayerSpeed","getInkAmount","new_inkAmount","restoreInk","getLineIntersection","x3","y3","x4","y4","denominator","ua","ub","tempShootDistance","realShootDistance","o_x1","o_y1","o_x2","o_y2","interSections","interSection","InkBar","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inkColor","inkBarPosition","window","innerWidth","innerHeight","inkBarStyle","react_default","createElement","className","style","href","inkBarSVG","React","Component","GAME_INTERVAL","Game","onKeyDown","onKeyUp","trackMouse","mouseDown","mouseUp","updateGame","otherPlayerData","playerData_2","playerData_3","windowHeight","windowWidth","mouseScale","cameraSize","rect","groundRef","getBoundingClientRect","top","new_playerPosition","filedWidth","gameBoardWidth","filedHeight","gameBoardHeight","setState","otherPlayerPosition","_getSplats","_getSplats2","slicedToArray","aimPointRef","t","Date","now","initTime","gameRemainTime","timeColor","componentDidMount","addEventListener","setInterval","fieldRef","name","playerUid","uid","playerTeam","team","playerHealth","roomId","g","_this2","id","preserveAspectRatio","viewBox","ref","el","itemRef","components_inkBar","react_router","to","JumpOutWindow","closeJumpOut","console","log","show","display","prevProps","onClick","title","form","map","myForm","submit","Home","handlePlay","socket","emit","on","setRoomId","setUid","setTeam","history","concat","login_display","signup_display","handleDisplay","JumpoutWindow","logo","autoComplete","spellCheck","setName","temp","UserBlock","userName","Wait","handleBack","disconnect","open","teamA","teamB","src_components_UserBlock","react_router_dom","Result","Index","target","value","io","exact","render","src_containers_Home","assign","src_containers_Wait","src_components_Game","src_containers_Result","App","containers_Index","Boolean","location","hostname","match","ReactDOM","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f379eee9.chunk.js","sourcesContent":["function Colors(main, glow, shadow) {\n    this.main = main;\n    this.glow = glow;\n    this.shadow = shadow\n}\n\nmodule.exports = Colors","module.exports = __webpack_public_path__ + \"static/media/p-02-01.b5ec01fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-02-02.f330f628.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-02-03.79be4eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-03.9aeccb4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-02-04.202b81c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/inkHit06.06b2c837.wav\";","module.exports = __webpack_public_path__ + \"static/media/n-01.82115044.svg\";","module.exports = __webpack_public_path__ + \"static/media/n-02.c2046824.svg\";","module.exports = __webpack_public_path__ + \"static/media/n-03.9254177c.svg\";","module.exports = __webpack_public_path__ + \"static/media/HitEffectiveCommon02.bb9ea272.wav\";","module.exports = __webpack_public_path__ + \"static/media/BulletHitNoDamage.6e0d3ed4.wav\";","module.exports = __webpack_public_path__ + \"static/media/inkBar.4467d4bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/temp.2b31b498.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.2c0aea0e.png\";","module.exports = __webpack_public_path__ + \"static/media/rock1.93f6c61e.svg\";","export const GAME_STATE = {\n    WAITING: 1,\n    GAMING: 2,\n    FREEZE: 3,\n    FINISH: 4\n  };","export const PLAYER_STATUS = {\n  STANDING_OWN: 0,\n  WALKING_OWN: 1,\n  DIVING_OWN: 2,\n  SWIMMING_OWN: 3,\n  ATTACKING_OWN: 4,\n\n  STANDING_SPACE: 5,\n  WALKING_SPACE: 6,\n  DIVING_SPACE: 7,\n  SWIMMING_SPACE: 8,\n  ATTACKING_SPACE: 9,\n\n  STANDING_ENEMY: 10,\n  WALKING_ENEMY: 11,\n  DIVING_ENEMY: 12,\n  SWIMMING_ENEMY: 13,\n  ATTACKING_ENEMY: 14,\n};","\nimport { GAME_STATE, PLAYER_STATUS } from '../enum'\nimport playerSVG from '../images/player/p-02-01.svg'\nimport LeftHandSVG from '../images/player/p-02-02.svg'\nimport RightHandSVG from '../images/player/p-02-03.svg'\nimport gunSVG from '../images/player/p-03.svg'\nimport diveSVG from '../images/player/p-02-04.svg'\n\nexport const playerWidth = 50;\nexport const playerHeight = 50;\n\nconst handOffset = 23\nvar body = new Image()\nvar leftHand = new Image()\nvar rightHand = new Image()\nvar gun = new Image()\nvar dive = new Image()\n\nvar ripple = [];\nvar lastRippleTimeStamp = 0;\nvar lastRipplePosition= {x:-1000, y: -1000};\n\nexport const drawPlayer = (c, a, state) => {\n\n    var context = c.getContext(\"2d\");\n    // attach the context to the canvas for easy access and to reduce complexity.\n    // context.clearRect(0, 0, c.width, c.height);\n    // drawPlayerNormal(context, state)\n\n    switch (state.playerStatus) {\n        case PLAYER_STATUS.STANDING_OWN:\n            drawPlayerNormal(context, state);\n            break;\n        case PLAYER_STATUS.WALKING_OWN:\n            drawPlayerNormal(context, state);\n            break;\n        case PLAYER_STATUS.DIVING_OWN:\n            drawPlayerDive(context, state);\n            break;\n        case PLAYER_STATUS.SWIMMING_OWN:\n            drawPlayerDive(context, state);\n\n            break;\n        case PLAYER_STATUS.ATTACKING_OWN:\n            drawPlayerNormal(context, state);\n            break;\n\n        case PLAYER_STATUS.STANDING_SPACE:\n            drawPlayerNormal(context, state);\n\n            break;\n        case PLAYER_STATUS.WALKING_SPACE:\n            drawPlayerNormal(context, state);\n\n            break;\n        case PLAYER_STATUS.DIVING_SPACE:\n            drawPlayerNormal(context, state);\n\n            break;\n        case PLAYER_STATUS.SWIMMING_SPACE:\n            drawPlayerNormal(context, state);\n\n            break;\n        case PLAYER_STATUS.ATTACKING_SPACE:\n            drawPlayerNormal(context, state);\n\n            break;\n\n        case PLAYER_STATUS.STANDING_ENEMY:\n            drawPlayerNormal(context, state);\n\n            break;\n        case PLAYER_STATUS.WALKING_ENEMY:\n            drawPlayerNormal(context, state);\n\n            break;\n        case PLAYER_STATUS.DIVING_ENEMY:\n            break;\n        case PLAYER_STATUS.SWIMMING_ENEMY:\n            break;\n        case PLAYER_STATUS.ATTACKING_ENEMY:\n            drawPlayerNormal(context, state);\n\n            break;\n        default: break;\n    }\n\n    // ripples\n    var r_context = a.getContext(\"2d\");\n    if ((Math.abs(state.playerPosition.x - lastRipplePosition.x) > 50 || Math.abs(state.playerPosition.y - lastRipplePosition.y) > 50) &&\n        (state.playerStatus === PLAYER_STATUS.WALKING_OWN || state.playerStatus === PLAYER_STATUS.SWIMMING_OWN\n            || state.playerStatus === PLAYER_STATUS.WALKING_ENEMY || state.playerStatus === PLAYER_STATUS.SWIMMING_ENEMY)) {\n        ripple.push([state.playerPosition.x, state.playerPosition.y, 20, 300]);\n        lastRipplePosition.x = state.playerPosition.x ;\n        lastRipplePosition.y = state.playerPosition.y ;\n    }\n\n    r_context.clearRect(0, 0, a.width, a.height);\n    for (var r = 0; r < ripple.length; ++r) {\n        ripple[r][2] += 0.5;\n        drawRipple(r_context, ripple[r][0], ripple[r][1], ripple[r][2], 20);\n        if (ripple[r][2] - 10 > 0) {\n            drawRipple2(r_context, ripple[r][0], ripple[r][1], ripple[r][2] - 10, 20);\n        }\n        if (ripple[r][2] - 20 > 0) {\n            drawRipple3(r_context, ripple[r][0], ripple[r][1], ripple[r][2] - 20, 20);\n        }\n        if (ripple[r][2] >= ripple[r][3]) {\n            ripple.splice(r, 1);;\n            --r;\n            continue;\n        }\n    }\n}\n\n\nconst drawPlayerNormal = (context, state) => {\n    const playerName = state.playerName\n    const playerColor = state.playerColor\n    const playerPosition = state.playerPosition\n    const playerAngle = state.playerAngle\n    const playerStatus = state.playerStatus\n    /*\n    context.save();\n    context.translate(playerPosition.x, playerPosition.y)\n\n    context.save();\n    context.rotate(Math.PI / 180 * playerAngle);\n    */\n    context.save()\n\n    context.translate(playerPosition.x, playerPosition.y)\n\n    context.font = \"bold 12pt Freckle Face\";\n    const playerNameLen = context.measureText(playerName).width;\n\n    context.strokeStyle = \"#FFFFFF\";\n    context.lineWidth = 3;\n    context.strokeText(playerName, -playerNameLen / 2, 50)\n\n    context.fillStyle = playerColor;\n    context.font = \"bold 12pt Freckle Face\";\n\n    context.fillText(playerName, -playerNameLen / 2, 50);\n    //end of player drawing\n    context.restore();\n\n\n    body.src = playerSVG;\n    leftHand.src = LeftHandSVG;\n    rightHand.src = RightHandSVG;\n    gun.src = gunSVG;\n\n    context.translate(playerPosition.x, playerPosition.y)\n    context.rotate(Math.PI / 180 * (playerAngle + 180));\n    context.drawImage(body, -playerWidth / 2-10, -playerHeight / 2-12, playerWidth+15, playerHeight+15)\n    context.drawImage(leftHand, -playerWidth / 2 - 10, -playerHeight / 2  + handOffset, playerWidth, playerHeight)\n    context.drawImage(gun, -playerWidth / 2, -playerHeight / 2 + 28, playerWidth, playerHeight)\n    context.drawImage(rightHand, -playerWidth / 2 + 10, -playerHeight / 2 + handOffset, playerWidth, playerHeight)\n\n    context.rotate(- Math.PI / 180 * (playerAngle + 180))\n    context.translate(-playerPosition.x, -playerPosition.y)\n\n\n\n\n    //draw the player part moving with mouse \n\n\n    /*context.fillStyle = 'rgba(' + playerColor + ')';\n    context.fillRect(-playerWidth / 2, -playerHeight / 2, playerWidth, playerHeight);\n    context.strokeStyle = \"#33333344\";\n    context.lineWidth = 5;\n    context.strokeRect(-playerWidth / 2, -playerHeight / 2, playerWidth, playerHeight);\n\n    context.fillStyle = \"#33cc59\";\n    context.fillRect(-playerWidth / 2, -playerHeight / 2, 15, 15);\n    context.fillStyle = \"#33a6cc\";\n    context.fillRect(playerWidth / 2 - 15, -playerHeight / 2, 15, 15);\n    */\n\n    //context.restore();\n    //draw the player part NOT moving with mouse \n\n    \n}\n\nconst drawPlayerDive = (context, state) => {\n    const playerName = state.playerName\n    const playerColor = state.playerColor\n    const playerPosition = state.playerPosition\n    const playerAngle = state.playerAngle\n    const playerStatus = state.playerStatus\n\n    context.save()\n\n    context.translate(playerPosition.x, playerPosition.y)\n\n    context.font = \"bold 10pt Freckle Face\";\n    const playerNameLen = context.measureText(playerName).width;\n\n    context.strokeStyle = \"#FFFFFF\";\n    context.lineWidth = 3;\n    context.strokeText(playerName, -playerNameLen / 2, 50)\n\n    context.fillStyle = playerColor;\n    context.font = \"bold 10pt Freckle Face\";\n\n    context.fillText(playerName, -playerNameLen / 2, 50);\n    //end of player drawing\n    context.restore();\n\n    dive.src = diveSVG;\n\n    context.translate(playerPosition.x, playerPosition.y)\n    context.drawImage(dive, -playerWidth / 2-10, -playerHeight / 2+12, playerWidth+15, playerHeight+15)\n    context.translate(-playerPosition.x, -playerPosition.y)\n}\n\n\nconst drawPlayerName = (context, state) => {\n    const playerName = state.playerName\n    const playerColor = state.playerColor\n    const playerPosition = state.playerPosition\n    const playerAngle = state.playerAngle\n    const playerStatus = state.playerStatus\n\n    context.save()\n\n    context.translate(playerPosition.x, playerPosition.y)\n\n    context.font = \"bold 10pt Freckle Face\";\n    const playerNameLen = context.measureText(playerName).width;\n\n    context.strokeStyle = \"#FFFFFF\";\n    context.lineWidth = 3;\n    context.strokeText(playerName, -playerNameLen / 2, 50)\n\n    context.fillStyle = playerColor;\n    context.font = \"bold 10pt Freckle Face\";\n\n    context.fillText(playerName, -playerNameLen / 2, 50);\n    //end of player drawing\n    context.restore();\n\n    /*context.save();\n    context.translate(playerPosition.x, playerPosition.y)\n\n    context.save();\n    context.rotate(Math.PI / 180 * playerAngle);\n\n\n\n    context.restore();\n    //draw the player part NOT moving with mouse \n\n    context.font = \"bold 20pt Arial\";\n    const playerNameLen = context.measureText(playerName).width;\n\n    context.strokeStyle = \"#dddddd\";\n    context.lineWidth = 3;\n    context.strokeText(playerName, -playerNameLen / 2, 50)\n\n    context.fillStyle = \"#111111\";\n    context.font = \"bold 20pt Arial\";\n\n    context.fillText(playerName, -playerNameLen / 2, 50);\n    //end of player drawing\n    context.restore();\n    */\n}\n\nconst drawRipple = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 3;\n    graph.strokeStyle = 'rgba(230,230,230,' + (Math.max(0, 40 - radius) / 100) + ')';\n    graph.stroke();\n    graph.restore();\n}\n\nconst drawRipple2 = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 2;\n    graph.strokeStyle = 'rgba(220,220,220,' + (Math.max(0, 26 - radius) / 100) + ')';\n    graph.stroke();\n    graph.restore();\n}\n\nconst drawRipple3 = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 1;\n    graph.strokeStyle = 'rgba(200,200,200,' + (Math.max(0, 22 - radius) / 100) + ')';\n\n    graph.stroke();\n    graph.restore();\n}","export const getRegularPolyObject = (type, c_x, c_y, radius, sides, angle=0) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n    var polygon = [type];\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI + angle/180*Math.PI;\n        x = c_x + radius * Math.sin(theta);\n        y = c_y + radius * Math.cos(theta);\n        polygon.push([x, y]);\n    }\n    return polygon;\n}\n\n\nexport const battleField_1 = {\n    fieldRange: { xMin: 50, xMax: 1550, yMin: 50, yMax: 850 },\n\n    //(xPos, yPos, width, height)\n    rectObjects: [\n        [\"rock\", 500, 500, 100, 200],\n        [\"rock\", 1000, 500, 100, 200],\n        [\"rock\", 500, 50, 100, 200],\n        [\"rock\", 1000, 50, 100, 200],\n        [\"rock\", 650, 400, 300, 100],\n        [\"rock\", 750, 300, 100, 300],\n\n        [\"rock\", 500, 500, 100, 200],\n        [\"rock\", 1000, 500, 100, 200],\n        [\"rock\", 500, 50, 100, 200],\n        [\"rock\", 1000, 50, 100, 200],\n        [\"rock\", 650, 400, 300, 100],\n        [\"rock\", 750, 300, 100, 300],\n\n        [\"rock\", 500, 500, 100, 200],\n        [\"rock\", 1000, 500, 100, 200],\n        [\"rock\", 500, 50, 100, 200],\n        [\"rock\", 1000, 50, 100, 200],\n        [\"rock\", 650, 400, 300, 100],\n        [\"rock\", 750, 300, 100, 300],\n\n        [\"rock\", 500, 500, 100, 200],\n        [\"rock\", 1000, 500, 100, 200],\n        [\"rock\", 500, 50, 100, 200],\n        [\"rock\", 1000, 50, 100, 200],\n        [\"rock\", 650, 400, 300, 100],\n        [\"rock\", 750, 300, 100, 300],\n\n        [\"rock\", 500, 500, 100, 200],\n        [\"rock\", 1000, 500, 100, 200],\n        [\"rock\", 500, 50, 100, 200],\n        [\"rock\", 1000, 50, 100, 200],\n        [\"rock\", 650, 400, 300, 100],\n        [\"rock\", 750, 300, 100, 300],\n    ],\n    polyObjects: [\n        // getRegularPolyObject(\"rock\", 500, 500, 100, 8, 22.5),\n    ],\n    \n}\n","import { battleField_1 } from '../field'\nimport rock from '../images/rock1.svg'\n\nconst outerColor = \"#525C63\"\nconst middleColor = \"#3B4349\"\nconst innerColor = \"#21292D\"\n\n\n\nexport const drawField = (c) => {\n    const field = battleField_1;\n    var objects = field.rectObjects;\n    var xMin = field.fieldRange.xMin\n    var yMin = field.fieldRange.yMin\n    var xMax = field.fieldRange.xMax\n    var yMax = field.fieldRange.yMax\n\n    var context = c.getContext(\"2d\");\n\n    context.save();\n    context.shadowBlur = 3;\n    context.shadowColor = \"rgba(63, 255, 239, 0.555)\";\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    //context.filter = 'drop-shadow(0px 0px 1px #e81)';\n    // console.log(field.fieldRange)\n    //draw the ground\n    //context.fillStyle = \"#aaaaaa\";\n    //context.fillRect(field.fieldRange.xMin, field.fieldRange.yMin, field.fieldRange.xMax-field.fieldRange.xMin, field.fieldRange.yMax-field.fieldRange.yMin);\n\n    var path = drawRectUsingArc(xMin, yMin, xMax - xMin, yMax - yMin, 30);\n    context.strokeStyle = outerColor;\n    context.lineWidth = 8;\n    context.stroke(path)\n    var offset = 12\n    var path = drawRectUsingArc(xMin - offset / 2, yMin - offset / 2, xMax - xMin + offset, yMax - yMin + offset, 30);\n    context.strokeStyle = middleColor;\n    context.lineWidth = 8;\n    context.stroke(path)\n\n\n    //context.strokeRect(field.fieldRange.xMin, field.fieldRange.yMin, \n    //field.fieldRange.xMax-field.fieldRange.xMin, field.fieldRange.yMax-field.fieldRange.yMin);\n    // draw the objects\n    for (var i = 0; i < objects.length; ++i) {\n        var obj = { x: objects[i][1], y: objects[i][2], w: objects[i][3], h: objects[i][4] }\n\n        switch (objects[i][0]) {\n            case \"rock\":\n\n                //最外圈\n                context.fillStyle = outerColor;\n                var obj_path = drawRectUsingArc(objects[i][1], objects[i][2], objects[i][3], objects[i][4], 5)\n                context.fill(obj_path)\n\n                //中間\n                context.fillStyle = middleColor;\n                obj_path = drawRectUsingArc(objects[i][1] + 8, objects[i][2] + 8, objects[i][3] - 16, objects[i][4] - 16, 5)\n                context.fill(obj_path)\n\n                //最內圈\n                context.fillStyle = innerColor;\n                obj_path = drawRectUsingArc(objects[i][1] + 20, objects[i][2] + 20, objects[i][3] - 40, objects[i][4] - 40, 5)\n                context.fill(obj_path)\n\n                break;\n            default: break;\n        }\n\n        /*\n        var img = new Image();\n        img.src = rock;\n        img.onload = function() {\n            context.drawImage(img, obj.x, obj.y, obj.w, obj.h)\n        }\n        \n        var obj_path = drawUsingArc(objects[i][1], objects[i][2], objects[i][3], objects[i][4], 10)\n        context.fill(obj_path)\n        */\n        //var obj_path = drawUsingArc(objects[i][1]+5, objects[i][2]+5, objects[i][3]-10, objects[i][4]-10, 10)\n        //context.fill(obj_path)\n        //context.fillRect(objects[i][1], objects[i][2], objects[i][3], objects[i][4]);\n    }\n\n    //draw polygon objects\n    objects = field.polyObjects;\n    for (var i = 0; i < objects.length; ++i) {\n        switch (objects[i][0]) {\n            case \"rock\":\n\n\n                //最外圈\n                context.fillStyle = outerColor;\n                var obj_path = drawPolyUsingArc(objects[i])\n                context.fill(obj_path)\n\n                // //中間\n                // context.fillStyle = middleColor;\n                // var obj_path = drawPolyUsingArc(objects[i])\n                // context.fill(obj_path)\n\n                // //最內圈\n                // context.fillStyle = innerColor;\n                // var obj_path = drawPolyUsingArc(objects[i])                \n                // context.fill(obj_path)\n\n                break;\n            default: break;\n        }\n    }\n    context.restore();\n}\n\n\nfunction drawRectUsingArc(x, y, width, height, r) {\n    var path = new Path2D();\n\n    path.moveTo(x + r, y);\n    path.lineTo(x + width - r, y);\n    path.arc(x + width - r, y + r, r, Math.PI / 180 * 270, 0, false);\n    path.lineTo(x + width, y + height - r);\n    path.arc(x + width - r, y + height - r, r, 0, Math.PI / 180 * 90, 0, false);\n    path.lineTo(x + r, y + height);\n    path.arc(x + r, y + height - r, r, Math.PI / 180 * 90, Math.PI / 180 * 180, false);\n    path.lineTo(x, y + r);\n    path.arc(x + r, y + r, r, Math.PI / 180 * 180, Math.PI / 180 * 270, false);\n\n    return path;\n}\n\nfunction drawPolyUsingArc(polyObject) {\n    var path = new Path2D();\n    const n = polyObject.length;\n    path.moveTo(polyObject[n - 1][0], polyObject[n - 1][1]);\n    \n    for (var i = 1; i < n; i++) {\n        path.lineTo(polyObject[i][0], polyObject[i][1]);\n    }\n\n    return path;\n}","import inkHit06 from '../sounds/inkHit/inkHit06.wav';\n\nimport ink01 from '../images/ink/n-01.svg'\nimport ink02 from '../images/ink/n-02.svg'\nimport ink03 from '../images/ink/n-03.svg'\n\nconst ink = [ink01, ink02, ink03];\nvar ripple = [];\nvar audio = new Audio(inkHit06);\naudio.volume = 0.5;\n\nfunction random_ink() {\n    var l = ink.length;\n    var r = Math.floor(Math.random() * l)\n    return ink[r]\n}\n\nexport const drawSplat = (c, a, splat, playerColor, playerAngle, playerPosition) => {\n\n    var context = c.getContext(\"2d\");\n    var r_context = a.getContext(\"2d\");\n\n    context.save();\n\n    //context.filter = 'drop-shadow(0px 0px 5px #FF1493)';\n    // context.drawImage(image, 0,0,1600,900);\n\n    // splat [splatShapeId, pos_x, pos_y, splatAngle, splatSize, splatDamage]\n    for (var i = 0; i < splat.length; ++i) {\n\n        //context.fillStyle =  'rgba(' + playerColor +')';\n        var aimX = splat[i][1];\n        var aimY = splat[i][2];\n        var playerX = playerPosition.x;\n        var playerY = playerPosition.y;\n        var angle = splat[i][3];\n        // playerAngle< 0 ? playerAngle + 270 : playerAngle - 90;\n        var ink_size = splat[i][4] * 3; //因為我圖畫得比較小所以先乘3\n\n        var img = new Image;\n        img.src = ink[splat[i][0]];\n        //\"data:image/svg+xml;base64,\"+btoa(trysvg);\n        //img.style = \"fill:#B0E0E6;\"\n        //console.log(img.style)\n        img.onload = function () {\n            // console.log(angle)\n            // context.shadowBlur = 5;\n            // context.shadowColor = \"#FF00FF\";\n            context.translate(aimX, aimY)\n            context.rotate(angle / 180 * Math.PI);\n            context.drawImage(img, -ink_size / 2, -ink_size / 2, ink_size, ink_size);\n            context.rotate(-angle / 180 * Math.PI);\n            context.translate(-aimX, -aimY)\n        }\n\n        //drawCircle(context, aimX, aimY, splat[i][2], 20);\n        audio.currentTime = 0;\n        audio.play();\n\n        // ripple\n        ripple.push([aimX, aimY, 1, ink_size]);\n    }\n\n    // image.src = context.canvas.toDataURL();\n    context.restore();\n    // context.clearRect(0, 0, c.width, c.height);\n    // r_context.clearRect(0, 0, a.width, a.height);\n    for (var r = 0; r < ripple.length; ++r) {\n        ripple[r][2] += 2;\n        drawRipple(r_context, ripple[r][0], ripple[r][1], ripple[r][2], 20);\n        if (ripple[r][2] - 10 > 0) {\n            drawRipple2(r_context, ripple[r][0], ripple[r][1], ripple[r][2] - 10, 20);\n        }\n        if (ripple[r][2] - 20 > 0) {\n            drawRipple3(r_context, ripple[r][0], ripple[r][1], ripple[r][2] - 20, 20);\n        }\n        if (ripple[r][2] >= ripple[r][3]) {\n            ripple.splice(r, 1);;\n            --r;\n            continue;\n        }\n    }\n}\n\nexport const drawCircle = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.fill();\n}\n\n\nconst drawRipple = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 3;\n    graph.strokeStyle = 'rgba(230,230,230,' + (Math.max(0, 30 - radius) / 100) + ')';\n    graph.stroke();\n    graph.restore();\n}\n\nconst drawRipple2 = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 2;\n    graph.strokeStyle = 'rgba(220,220,220,' + (Math.max(0, 20 - radius) / 100) + ')';\n    graph.stroke();\n    graph.restore();\n}\n\nconst drawRipple3 = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 1;\n    graph.strokeStyle = 'rgba(200,200,200,' + (Math.max(0, 10 - radius) / 100) + ')';\n\n    graph.stroke();\n    graph.restore();\n}","\nexport const drawAimPoint = (c, playerPosition, mousePosition, playerAngle, aimPoints) => {\n\n    var context = c.getContext(\"2d\");\n    context.clearRect(0, 0, c.width, c.height);\n    context.save();\n\n    maindrawAimCircle(context, mousePosition.x, mousePosition.y, playerAngle);\n    drawRealAimCircle(context, aimPoints);\n\n    context.restore();\n}\n\nconst drawRealAimCircle = (graph, aimPoints) => {\n    // aimPoints = [[100,100], [100,130]];\n    const radius = 10;\n    const sides = 20;\n\n    graph.save();\n    for (var a = 0; a < aimPoints.length; ++a) {\n        var theta = 0;\n        var x = 0;\n        var y = 0;\n\n        graph.beginPath();\n        for (var i = 0; i < sides; i++) {\n            theta = (i / sides) * 2 * Math.PI;\n            x = aimPoints[a][0] + radius * Math.sin(theta);\n            y = aimPoints[a][1] + radius * Math.cos(theta);\n            graph.lineTo(x, y);\n        }\n        graph.closePath();\n        graph.strokeStyle = \"#b3198c88\";\n        graph.lineWidth = 3;\n        graph.stroke();\n\n        graph.beginPath();\n        for ( i = 0; i < sides; i++) {\n            theta = (i / sides) * 2 * Math.PI;\n            x = aimPoints[a][0] + (radius - 3) * Math.sin(theta);\n            y = aimPoints[a][1] + (radius - 3) * Math.cos(theta);\n            graph.lineTo(x, y);\n        }\n        graph.closePath();\n        graph.strokeStyle = \"#77777755\";\n        graph.lineWidth = 2;\n        graph.stroke();\n    }\n    graph.restore();\n}\n\nconst maindrawAimCircle = (graph, centerX, centerY, angle) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n    const radius = 15;\n    const sides = 20;\n\n    graph.save();\n    graph.translate(centerX, centerY);\n\n    graph.save();\n    graph.rotate(-Math.PI / 180 * angle);\n\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = radius * Math.sin(theta);\n        y = radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n\n    graph.strokeStyle = \"#77777755\";\n    graph.lineWidth = 3;\n    graph.stroke();\n\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = (radius-6) * Math.sin(theta);\n        y = (radius-6) * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n\n    graph.strokeStyle = \"#77777755\";\n    graph.lineWidth = 1.5;\n    graph.stroke();\n\n    graph.beginPath();\n    graph.moveTo(0, -9);\n    graph.lineTo(0, -22);\n    graph.moveTo(0, 9);\n    graph.lineTo(0, 22);\n    graph.moveTo(-9, 0);\n    graph.lineTo(-22, 0);\n    graph.moveTo(9, 0);\n    graph.lineTo(22, 0);\n\n    graph.closePath();\n\n    // graph.strokeStyle = \"#666666\";\n    graph.lineWidth = 3;\n    graph.stroke();\n\n    graph.restore();\n    graph.restore();\n\n}","\nexport const drawBullet = (c, bullets, playerColor) => {\n\n    var context = c.getContext(\"2d\");\n    // context.clearRect(0, 0, c.width, c.height);\n\n    context.save();\n    // context.drawImage(image, 0,0,1600,900);\n    \n    for (var i = 0; i < bullets.length; ++i) {\n        context.fillStyle =  playerColor.main;\n        drawCircle(context, bullets[i][1], bullets[i][2], 8, 10);\n        drawCircleOutLine(context, bullets[i][1], bullets[i][2], 8, 10);\n    }\n\n    context.restore();\n\n}\n\nconst drawCircle = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.fill();\n}\n\nconst drawCircleOutLine = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 3;\n    graph.strokeStyle = \"#55555533\"\n    graph.stroke();\n}\n","import { drawPlayer, drawSplat, drawBullet, } from '../draw'\n\nexport const drawAllPlayers = (splatRef, bulletRef, playerRef, splatAnimationRef, players) => {\n    // var splatRefContext = splatRef.getContext(\"2d\");\n    // splatRefContext.clearRect(0, 0, splatRef.width, splatRef.height);\n\n    var bulletRefContext = bulletRef.getContext(\"2d\");\n    bulletRefContext.clearRect(0, 0, bulletRef.width, bulletRef.height);\n\n    var playerRefContext = playerRef.getContext(\"2d\");\n    playerRefContext.clearRect(0, 0, playerRef.width, playerRef.height);\n\n    var splatAnimationRefContext = splatAnimationRef.getContext(\"2d\");\n    splatAnimationRefContext.clearRect(0, 0, splatAnimationRef.width, splatAnimationRef.height);\n\n    // context.clearRect(0, 0, c.width, c.height);\n    for (var p = 0; p < players.length; ++p) {\n\n\n        drawPlayer(playerRef, splatAnimationRef, players[p]);\n        // drawSplat(this.splatRef, this.splatAnimationRef, this.playerData.splats, this.playerData.playerColor, this.playerData.playerAngle, this.playerData.playerPosition);\n        drawSplat(splatRef, splatAnimationRef, players[p].splats, players[p].playerColor,  players[p].playerAngle,  players[p].playerPosition);\n\n        // drawBullet(this.bulletRef, this.playerData.bullets, this.playerData.playerColor);\n        drawBullet(bulletRef,  players[p].bullets, players[p].playerColor);\n    }\n}  \n","import Colors from './ColorSets'\n\nvar PINK = new Colors(\"#ff1493\", \"#e72dc2\", \"#d467a5\");\nvar BLUE = new Colors(\"#02fffc\", \"#44afec\", \"#84d1e4\");\nvar GREEN = new Colors(\"#25ff5d\", \"#44ec6b\", \"#82db8a\");\nvar PURPLE = new Colors(\"#866aff\", \"#8744ec\", \"#c793e5\");\n\n// var PINK = new Colors([255,20,147,1],[231,45,194,1],[212,103,165,1]);\n\nexport const COLOR_ASSET = [PINK, BLUE, GREEN, PURPLE];\n\n","export const weapons = {\n    splatterShot_v1: {\n        main: {\n            type: 0, // 0 for one line gun\n            maxShootDistance: 400,\n            bulletSpeed: 30,\n            fireSpeed: 200, //cd time(ms) for one shot\n            fireInkCost: 5,\n            maxError: 20,\n            gunLength: 25,\n            splatSize: 50,\n            splatDamage: 30,\n            splatShapeId: [0, 1, 2],\n        },\n        sub: {},\n        price: 1000,\n    }\n}","export const getKeyDownState = (e, state) => {\n    switch (e.key) {\n        case 'w':\n        case 'W':\n        case 'ArrowUp':\n\n            state.playerMoveDirection.y = -1;\n            state.keyStrokeState.up = 1;\n            break;\n\n        case 's':\n        case 'S':\n        case 'ArrowDown':\n\n            state.playerMoveDirection.y = 1;\n            state.keyStrokeState.down = 1;\n            break;\n\n\n        case 'a':\n        case 'A':\n        case 'ArrowLeft':\n\n            state.playerMoveDirection.x = -1;\n            state.keyStrokeState.left = 1;\n\n            break;\n\n        case 'd':\n        case 'D':\n        case 'ArrowRight':\n\n            state.playerMoveDirection.x = 1;\n            state.keyStrokeState.right = 1;\n\n            break;\n        case ' ':\n            state.keyStrokeState.space = 1;\n            break;\n        default:\n            break;\n    }\n}","export const getKeyUpState = (e, state) => {\n    switch (e.key) {\n        case 'w':\n        case 'W':\n        case 'ArrowUp':\n\n            if (state.keyStrokeState.down === 1) state.playerMoveDirection.y = 1;\n            else state.playerMoveDirection.y = 0;\n\n            state.keyStrokeState.up = 0;\n            break;\n\n        case 's':\n        case 'S':\n        case 'ArrowDown':\n\n            if (state.keyStrokeState.up === 1) state.playerMoveDirection.y = -1;\n            else state.playerMoveDirection.y = 0;\n\n            state.keyStrokeState.down = 0;\n            break;\n\n        case 'a':\n        case 'A':\n        case 'ArrowLeft':\n\n            if (state.keyStrokeState.right === 1) state.playerMoveDirection.x = 1;\n            else state.playerMoveDirection.x = 0;\n\n            state.keyStrokeState.left = 0;\n            break;\n\n        case 'd':\n        case 'D':\n        case 'ArrowRight':\n            if (state.keyStrokeState.left === 1) state.playerMoveDirection.x = -1;\n            else state.playerMoveDirection.x = 0;\n\n            state.keyStrokeState.right = 0;\n            break;\n\n        case ' ':\n            state.keyStrokeState.space = 0;\n            break;\n        default:\n            break;\n    }\n}","export const getMousePos = (event, state) => {\n  state.mouseClient.x = event.clientX;\n  state.mouseClient.y = event.clientY;\n}\n\nexport const calculatePlayerAngle = (x1, y1, x2, y2) => {\n  var comp = 0;\n  if ( y2-y1 >= 0) {\n      comp = 180;\n  }\n  const dividend = x2 - x1;\n  const divisor = y2 - y1;\n  const quotient = dividend / divisor;\n  return radiansToDegrees(Math.atan(quotient)) * -1 + comp;\n};\n\nexport const radiansToDegrees = radians => ((radians * 180) / Math.PI);","import { GAME_STATE } from '../enum'\nimport { battleField_1 } from '../field'\nimport { playerWidth, playerHeight } from '../draw'\n\nexport const updatePlayerPosition = (playerData, localPlayerData) => {\n  const field = battleField_1;\n  const objects = field.rectObjects;\n\n  if (localPlayerData.gameState === GAME_STATE.GAMING) {\n    const p_x = playerData.playerPosition.x;\n    const p_y = playerData.playerPosition.y;\n\n    var speed = localPlayerData.playerMoveSpeed;\n\n\n    const d_x = localPlayerData.playerMoveDirection.x;\n    const d_y = localPlayerData.playerMoveDirection.y;\n    if (d_x !== 0 && d_y !== 0) {\n      speed = speed / 1.414;\n    }\n\n    var new_x = p_x + d_x * speed;\n    var new_y = p_y + d_y * speed;\n\n    // check field range\n    new_x = Math.min(Math.max(new_x, field.fieldRange.xMin + playerWidth / 2), field.fieldRange.xMax - playerWidth / 2)\n    new_y = Math.min(Math.max(new_y, field.fieldRange.yMin + playerHeight / 2), field.fieldRange.yMax - playerHeight / 2)\n\n    // check objects\n    for (var i = 0; i < objects.length; ++i) {\n      const centerX = objects[i][1] + objects[i][3] / 2;\n      const centerY = objects[i][2] + objects[i][4] / 2;\n\n      if (Math.abs(new_x - centerX) < (objects[i][3] + playerWidth) / 2 && Math.abs(new_y - centerY) < (objects[i][4] + playerHeight) / 2) {\n        // collision occured\n        const temp_new_x = p_x < centerX ? centerX - (objects[i][3] + playerWidth) / 2 : centerX + (objects[i][3] + playerWidth) / 2;\n        const temp_new_y = p_y < centerY ? centerY - (objects[i][4] + playerHeight) / 2 : centerY + (objects[i][4] + playerHeight) / 2;\n\n        if (Math.abs(temp_new_x - p_x) < Math.abs(temp_new_y - p_y)) {\n          new_x = temp_new_x;\n        } else if (Math.abs(temp_new_x - p_x) > Math.abs(temp_new_y - p_y)) {\n          new_y = temp_new_y;\n        } else {\n          new_x = temp_new_x;\n          new_y = temp_new_y;\n        }\n\n      }\n    }\n\n    playerData.playerPosition.x = new_x;\n    playerData.playerPosition.y = new_y;\n    return playerData.playerPosition;\n  }\n}","\nimport shootSound from '../sounds/shoot/HitEffectiveCommon02.wav';\nimport noInkSound from '../sounds/shoot/BulletHitNoDamage.wav';\n\nimport { GAME_STATE, PLAYER_STATUS } from '../enum'\n\nimport { checkFieldCollision, checkPlayerCollision } from './index';\n\nvar fireAudio = new Audio(shootSound);\nfireAudio.volume = 0.5;\n\nvar noInkAudio = new Audio(noInkSound);\nnoInkAudio.volume = 0.5;\n\n// line = []\nvar lines = [];\nvar timeLog = 0;\nexport const getSplats = (playerData, localPlayerData, otherPlayers) => {\n    const angle = playerData.playerAngle;\n    const p_x = playerData.playerPosition.x;\n    const p_y = playerData.playerPosition.y;\n    const m_x = localPlayerData.mousePosition.x;\n    const m_y = localPlayerData.mousePosition.y;\n\n    var splats = [];\n    var aimPoints = [];\n    var bullets = [];\n    var inkConsumption = 0;\n\n    if (localPlayerData.gameState === GAME_STATE.GAMING) {\n        // find shoot line\n        switch (playerData.playerWeapon.main.type) {\n            case 0:\n                var maxShootDistance = playerData.playerWeapon.main.maxShootDistance;\n                var bulletSpeed = playerData.playerWeapon.main.bulletSpeed;\n                var fireSpeed = playerData.playerWeapon.main.fireSpeed;\n                var fireInkCost = playerData.playerWeapon.main.fireInkCost;\n                var maxError = playerData.playerWeapon.main.maxError;\n                var gunLength = playerData.playerWeapon.main.gunLength;\n                var mouseLength = Math.pow(Math.pow(m_x - p_x, 2) + Math.pow(m_y - p_y, 2), 0.5);\n                var shootDistance = Math.min(mouseLength, maxShootDistance);\n\n                var d_x = p_x + Math.sin(angle / 180 * Math.PI) * shootDistance;\n                var d_y = p_y - Math.cos(angle / 180 * Math.PI) * shootDistance;\n\n                var c_x_a;\n                var c_y_a;\n                var fieldCheckPos_a = checkFieldCollision(p_x, p_y, d_x, d_y);\n                var playerCheckPos_a = checkPlayerCollision(p_x, p_y, fieldCheckPos_a[0], fieldCheckPos_a[1], otherPlayers); \n                c_x_a = playerCheckPos_a[0];\n                c_y_a = playerCheckPos_a[1];\n\n                aimPoints.push([c_x_a, c_y_a]);\n\n                d_x = p_x + Math.sin(angle / 180 * Math.PI) * shootDistance + (Math.random() - 0.5) * 2 * maxError;\n                d_y = p_y - Math.cos(angle / 180 * Math.PI) * shootDistance + (Math.random() - 0.5) * 2 * maxError;\n\n                var g_x = p_x + Math.sin(angle / 180 * Math.PI) * gunLength;\n                var g_y = p_y - Math.cos(angle / 180 * Math.PI) * gunLength;\n\n                var c_x;\n                var c_y;\n\n                var fieldCheckPos = checkFieldCollision(g_x, g_y, d_x, d_y);\n                var playerCheckPos = checkPlayerCollision(g_x, g_y, fieldCheckPos[0], fieldCheckPos[1], otherPlayers); \n                c_x = playerCheckPos[0];\n                c_y = playerCheckPos[1];\n\n                var bullet_length = Math.pow(Math.pow(c_x - g_x, 2) + Math.pow(c_y - g_y, 2), 0.5);\n\n                // line (type, current_point_x, current_point_y, end_point_x, end_point_y, d_x, d_y)\n                if (localPlayerData.keyStrokeState.space === 0 && localPlayerData.mouseDownState === 1 && localPlayerData.timeStamp - timeLog > fireSpeed) {\n                    timeLog = localPlayerData.timeStamp;\n                    if (localPlayerData.inkAmount - fireInkCost >= 0) {\n                        inkConsumption = fireInkCost;\n                        lines.push([0, g_x, g_y, c_x, c_y,\n                            (c_x - g_x) / bullet_length * bulletSpeed, (c_y - g_y) / bullet_length * bulletSpeed]);\n                        fireAudio.currentTime = 0;\n                        fireAudio.play();\n                    } else {\n                        noInkAudio.currentTime = 0;\n                        noInkAudio.play();\n                    }\n                }\n                break;\n            case 1:\n\n                break;\n            default:\n                break;\n        }\n    }\n    // update line and get bullet\n    for (var l = 0; l < lines.length; ++l) {\n        lines[l][1] += lines[l][5];\n        lines[l][2] += lines[l][6];\n\n        // bullet = [type, x, y]\n        bullets.push([0, lines[l][1], lines[l][2]]);\n\n        // check if create splat\n        if (Math.abs(lines[l][1] - lines[l][3]) < Math.abs(lines[l][5]) || Math.abs(lines[l][2] - lines[l][4]) < Math.abs(lines[l][6])) {\n            var splat_angle = (Math.random() - 0.5) * 2 * Math.PI; // -Pi to Pi\n            var splatSize = playerData.playerWeapon.main.splatSize;\n            var splatDamage = playerData.playerWeapon.main.splatDamage;\n            var splatShapeId = playerData.playerWeapon.main.splatShapeId[Math.floor(Math.random() * playerData.playerWeapon.main.splatShapeId.length)];\n\n            // splat [splatShapeId, pos_x, pos_y, splatAngle, splatSize, splatDamage]\n            splats.push([splatShapeId, lines[l][3], lines[l][4], splat_angle, splatSize, splatDamage]);\n            lines.splice(l, 1);\n            --l;\n            continue;\n        }\n    }\n\n    playerData.bullets = bullets;\n    playerData.splats = splats;\n    return [aimPoints, inkConsumption];\n}","import { GAME_STATE, PLAYER_STATUS } from '../enum'\nvar dive_counter = 0;\n\nfunction hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n    ] : null;\n}\n\nexport const getPlayerStatus = (c, playerData, localPlayerData) => {\n    const ownColor = hexToRgb(playerData.playerColor.main);\n    \n    var context = c.getContext('2d');\n    var p = context.getImageData(playerData.playerPosition.x - 25, playerData.playerPosition.y - 25, 51, 51).data;\n\n    var own_color_count = 0;\n    var empty_color_count = 0;\n\n    for (var i = 0; i < 11; ++i) {\n        for (var j = 0; j < 11; ++j) {\n            if (p[(51 * i * 5 + j * 5) * 4 + 3] !== 0) {\n                // not empty\n                if (p[(51 * i * 5 + j * 5) * 4] === ownColor[0] && p[(51 * i * 5 + j * 5) * 4 + 1] === ownColor[1] && p[(51 * i * 5 + j * 5) * 4 + 2] === ownColor[2]) {\n                    own_color_count += 1;\n                }\n            } else {\n                empty_color_count += 1;\n            }\n        }\n    }\n\n    var field_property = 0;// 0 for in space, 1 for in enemy, 2 for in own\n    if (empty_color_count / 121 < 0.5) {\n        field_property = own_color_count < (121 - own_color_count - empty_color_count) ? 1 : 2;\n    }\n\n    switch (field_property) {\n        case 0:\n            if (localPlayerData.mouseDownState === 1) {\n                playerData.playerStatus = PLAYER_STATUS.ATTACKING_SPACE;\n            }\n            else if (localPlayerData.keyStrokeState.space === 0) {\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\n                    playerData.playerStatus = PLAYER_STATUS.STANDING_SPACE;\n                } else {\n                    playerData.playerStatus = PLAYER_STATUS.WALKING_SPACE;\n                }\n            } else {\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\n                    playerData.playerStatus = PLAYER_STATUS.DIVING_SPACE;\n                } else {\n                    playerData.playerStatus = PLAYER_STATUS.SWIMMING_SPACE;\n                }\n            }\n            break;\n        case 1:\n            if (localPlayerData.mouseDownState === 1) {\n                playerData.playerStatus = PLAYER_STATUS.ATTACKING_ENEMY;\n            }\n            else if (localPlayerData.keyStrokeState.space === 0) {\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\n                    playerData.playerStatus = PLAYER_STATUS.STANDING_ENEMY;\n                } else {\n                    playerData.playerStatus = PLAYER_STATUS.WALKING_ENEMY;\n                }\n            } else {\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\n                    playerData.playerStatus = PLAYER_STATUS.DIVING_ENEMY;\n                } else {\n                    playerData.playerStatus = PLAYER_STATUS.SWIMMING_ENEMY;\n                }\n            }\n            break;\n\n        case 2:\n            if (localPlayerData.mouseDownState === 1) {\n                playerData.playerStatus = PLAYER_STATUS.ATTACKING_OWN;\n            }\n            else if (localPlayerData.keyStrokeState.space === 0) {\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\n                    playerData.playerStatus = PLAYER_STATUS.STANDING_OWN;\n                } else {\n                    playerData.playerStatus = PLAYER_STATUS.WALKING_OWN;\n                }\n            } else {\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\n                    playerData.playerStatus = PLAYER_STATUS.DIVING_OWN;\n                } else {\n                    playerData.playerStatus = PLAYER_STATUS.SWIMMING_OWN;\n                }\n            }\n            break;\n        default:\n            break;\n    }\n}\n\n// export const PLAYER_STATUS = {\n//     STANDING_OWN: 0,\n//     WALKING_OWN: 1,\n//     DIVING_OWN: 2,\n//     SWIMMING_OWN: 3,\n//     ATTACKING_OWN: 4,\n\n//     STANDING_SPACE: 5,\n//     WALKING_SPACE: 6,\n//     DIVING_SPACE: 7,\n//     SWIMMING_SPACE: 8,\n//     ATTACKING_SPACE: 9,\n\n//     STANDING_ENEMY: 10,\n//     WALKING_ENEMY: 11,\n//     DIVING_ENEMY: 12,\n//     SWIMMING_ENEMY: 13,\n//     ATTACKING_ENEMY: 14,\n//   };","import { GAME_STATE, PLAYER_STATUS } from '../enum'\nexport const getPlayerSpeed = (playerData, localPlayerData) => {\n    switch (playerData.playerStatus) {\n        case PLAYER_STATUS.STANDING_OWN: localPlayerData.playerMoveSpeed = 4; break;\n        case PLAYER_STATUS.WALKING_OWN: localPlayerData.playerMoveSpeed = 4; break;\n        case PLAYER_STATUS.DIVING_OWN: localPlayerData.playerMoveSpeed = 6; break;\n        case PLAYER_STATUS.SWIMMING_OWN: localPlayerData.playerMoveSpeed = 6; break;\n        case PLAYER_STATUS.ATTACKING_OWN: localPlayerData.playerMoveSpeed = 2.5; break;\n\n        case PLAYER_STATUS.STANDING_SPACE: localPlayerData.playerMoveSpeed = 3; break;\n        case PLAYER_STATUS.WALKING_SPACE: localPlayerData.playerMoveSpeed = 3; break;\n        case PLAYER_STATUS.DIVING_SPACE: localPlayerData.playerMoveSpeed = 1; break;\n        case PLAYER_STATUS.SWIMMING_SPACE: localPlayerData.playerMoveSpeed = 1; break;\n        case PLAYER_STATUS.ATTACKING_SPACE: localPlayerData.playerMoveSpeed = 1; break;\n\n        case PLAYER_STATUS.STANDING_ENEMY: localPlayerData.playerMoveSpeed = 1.5; break;\n        case PLAYER_STATUS.WALKING_ENEMY: localPlayerData.playerMoveSpeed = 1.5; break;\n        case PLAYER_STATUS.DIVING_ENEMY: localPlayerData.playerMoveSpeed = 1.5; break;\n        case PLAYER_STATUS.SWIMMING_ENEMY: localPlayerData.playerMoveSpeed = 1.5; break;\n        case PLAYER_STATUS.ATTACKING_ENEMY: localPlayerData.playerMoveSpeed = 0.5; break;\n        default: localPlayerData.playerMoveSpeed = 4; break;\n    }\n    switch (playerData.gameState) {\n        case GAME_STATE.FREEZE: localPlayerData.playerMoveSpeed = 0; break;\n        case GAME_STATE.FINISH: localPlayerData.playerMoveSpeed = 0; break;\n        default: break;\n    }\n}","import { GAME_STATE, PLAYER_STATUS } from '../enum'\nexport const getInkAmount = (inkConsumption, playerData, localPlayerData)=>{\n    var new_inkAmount = localPlayerData.inkAmount;\n    new_inkAmount = new_inkAmount-inkConsumption;\n    \n    var restoreInk = 0;\n\n    switch(playerData.playerStatus){\n        case PLAYER_STATUS.STANDING_OWN: restoreInk = 0.1; break;\n        case PLAYER_STATUS.WALKING_OWN: restoreInk = 0.1; break;\n        case PLAYER_STATUS.DIVING_OWN: restoreInk = 0.5; break;\n        case PLAYER_STATUS.SWIMMING_OWN: restoreInk = 1; break;\n        case PLAYER_STATUS.ATTACKING_OWN: restoreInk = 0.1; break;\n\n        case PLAYER_STATUS.STANDING_SPACE: restoreInk = 0.1; break;\n        case PLAYER_STATUS.WALKING_SPACE: restoreInk = 0.1; break;\n        case PLAYER_STATUS.DIVING_SPACE: restoreInk = 0.1; break;\n        case PLAYER_STATUS.SWIMMING_SPACE: restoreInk = 0.1; break;\n        case PLAYER_STATUS.ATTACKING_SPACE: restoreInk = 0.1; break;\n\n        case PLAYER_STATUS.STANDING_ENEMY: restoreInk = 0.1; break;\n        case PLAYER_STATUS.WALKING_ENEMY: restoreInk = 0.1; break;\n        case PLAYER_STATUS.DIVING_ENEMY: restoreInk = 0.1; break;\n        case PLAYER_STATUS.SWIMMING_ENEMY: restoreInk = 0.1; break;\n        case PLAYER_STATUS.ATTACKING_ENEMY: restoreInk = 0.1; break;\n        default: restoreInk = 0; break;\n    }\n\n    new_inkAmount = new_inkAmount+restoreInk;\n    new_inkAmount = Math.max(Math.min(new_inkAmount,100),0);\n\n    localPlayerData.inkAmount = new_inkAmount;\n    return new_inkAmount;\n}","// export const getLineIntersection = (l1_x1, l1_y1, l1_x2, l1_y2, l2_x1, l2_y1, l2_x2, l2_y2) => {\n//     var l1_m = (l1_y2 - l1_y1) / (l1_x2 - l1_x1);\n//     var l2_m = (l2_y2 - l2_y1) / (l2_x2 - l2_x1);\n//     if (Number.isFinite(l1_m)) l1_m = 1e10;\n//     if (Number.isFinite(l2_m)) l2_m = 1e10;\n//     const cal_x = (l1_m * l1_x1 - l2_m * l2_x1 + l2_y1 - l1_y1) / (l1_m - l2_m);\n//     const cal_y = (l1_y1 / l1_m - l2_y1 / l2_m + l2_x1 - l1_x1) / (1 / l1_m - 1 / l2_m);\n\n//     // var cal_y = l1_m * (x - l1_x1) + l1_y1;\n//     // var cal_x = (y - l1_y1) / l1_m + l1_x1;\n\n//     // console.log(\"x:\", x);\n//     // console.log(\"y:\", y);\n\n//     // var cal_y = 0;\n//     // var cal_x = 0;\n\n//     var com_1_max = l1_x1 > l1_x2 ? l1_x1 : l1_x2;\n//     var com_1_min = l1_x1 < l1_x2 ? l1_x1 : l1_x2;\n//     var com_2_max = l1_y1 > l1_y2 ? l1_y1 : l1_y2;\n//     var com_2_min = l1_y1 < l1_y2 ? l1_y1 : l1_y2;\n//     if (cal_x <= com_1_max && cal_x >= com_1_min && cal_y <= com_2_max && cal_y >= com_2_min) {\n//         // in line 1\n//         com_1_max = l2_x1 > l2_x2 ? l2_x1 : l2_x2;\n//         com_1_min = l2_x1 < l2_x2 ? l2_x1 : l2_x2;\n//         com_2_max = l2_y1 > l2_y2 ? l2_y1 : l2_y2;\n//         com_2_min = l2_y1 < l2_y2 ? l2_y1 : l2_y2;\n//         if (cal_x <= com_1_max && cal_x >= com_1_min && cal_y <= com_2_max && cal_y >= com_2_min) {\n//             // in line 2\n//             return [cal_x, cal_y];\n//         }\n//     }\n//     // return [null, null];\n//     return [cal_x, cal_y];\n// }\n\nexport const getLineIntersection = (x1, y1, x2, y2, x3, y3, x4, y4) =>  {\n\n    // Check if none of the lines are of length 0\n      if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\n          return false;\n      }\n  \n      var denominator = ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n  \n    // Lines are parallel\n      if (denominator === 0) {\n          return false;\n      }\n  \n      let ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\n      let ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator;\n  \n    // is the intersection along the segments\n      if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n          return false;\n      }\n  \n    // Return a object with the x and y coordinates of the intersection\n      let x = x1 + ua * (x2 - x1);\n      let y = y1 + ua * (y2 - y1);\n  \n      return {x:x, y:y};\n  }","import { playerWidth, playerHeight } from '../draw'\nimport { getLineIntersection } from './getLineIntersection'\nimport { battleField_1 } from '../field'\n\nexport const checkFieldCollision = (p_x, p_y, d_x, d_y) => {\n    const field = battleField_1;\n\n\n    var c_x = d_x;\n    var c_y = d_y;\n\n    var realShootDistance = Math.pow(Math.pow(c_x - p_x, 2) + Math.pow(c_y - p_y, 2), 0.5);\n    var tempShootDistance;\n    // check rectobjects\n    var objects = field.rectObjects;\n    for (var j = 0; j < objects.length; ++j) {\n        const o_x1 = objects[j][1];\n        const o_y1 = objects[j][2];\n        const o_x2 = objects[j][1] + objects[j][3];\n        const o_y2 = objects[j][2] + objects[j][4];\n\n        var interSections = [];\n\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x1, o_y2));\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x2, o_y1));\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x2, o_y1, o_x2, o_y2));\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y2, o_x2, o_y2));\n\n        for (var i = 0; i < interSections.length; ++i) {\n            if (interSections[i] !== false) {\n                tempShootDistance = Math.pow(Math.pow(interSections[i].x - p_x, 2) + Math.pow(interSections[i].y - p_y, 2), 0.5);\n                if (tempShootDistance < realShootDistance) {\n                    realShootDistance = tempShootDistance;\n                    c_x = interSections[i].x;\n                    c_y = interSections[i].y;\n                }\n            }\n        }\n    }\n\n    // check polyobjects\n    objects = field.polyObjects;\n    for (var j = 0; j < objects.length; ++j) {\n        const n = objects[j].length;\n        var interSection;\n\n        for (var i = 1; i < n; ++i) {\n            if (i === n - 1) {\n                interSection = getLineIntersection(p_x, p_y, c_x, c_y, objects[j][i][0], objects[j][i][1], objects[j][1][0], objects[j][1][1]);\n                if (interSection !== false) {\n                    tempShootDistance = Math.pow(Math.pow(interSection.x - p_x, 2) + Math.pow(interSection.y - p_y, 2), 0.5);\n                    if (tempShootDistance < realShootDistance) {\n                        realShootDistance = tempShootDistance;\n                        c_x = interSection.x;\n                        c_y = interSection.y;\n                    }\n                }\n            } else {\n                interSection = getLineIntersection(p_x, p_y, c_x, c_y, objects[j][i][0], objects[j][i][1], objects[j][i + 1][0], objects[j][i + 1][1]);\n                // console.log(interSection);\n\n                if (interSection !== false) {\n                    tempShootDistance = Math.pow(Math.pow(interSection.x - p_x, 2) + Math.pow(interSection.y - p_y, 2), 0.5);\n                    if (tempShootDistance < realShootDistance) {\n                        realShootDistance = tempShootDistance;\n                        c_x = interSection.x;\n                        c_y = interSection.y;\n                    }\n                }\n            }\n        }\n    }\n\n    // check fieldRange\n    const o_x1 = field.fieldRange.xMin;\n    const o_y1 = field.fieldRange.yMin;\n    const o_x2 = field.fieldRange.xMax;\n    const o_y2 = field.fieldRange.yMax;\n\n    var interSections = [];\n\n    interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x1, o_y2));\n    interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x2, o_y1));\n    interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x2, o_y1, o_x2, o_y2));\n    interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y2, o_x2, o_y2));\n\n    for (var i = 0; i < interSections.length; ++i) {\n        if (interSections[i] !== false) {\n            const tempShootDistance = Math.pow(Math.pow(interSections[i].x - p_x, 2) + Math.pow(interSections[i].y - p_y, 2), 0.5);\n            if (tempShootDistance < realShootDistance) {\n                realShootDistance = tempShootDistance;\n                c_x = interSections[i].x;\n                c_y = interSections[i].y;\n            }\n        }\n    }\n\n    return [c_x, c_y];\n}\n\n// players = [..., [pos_x, pos_y], ...]\nexport const checkPlayerCollision = (p_x, p_y, c_x, c_y, players) => {\n    for (var j = 0; j < players.length; ++j) {\n        const o_x1 = players[j].x - playerWidth / 2;\n        const o_y1 = players[j].x - playerHeight / 2;\n        const o_x2 = players[j].y + playerWidth / 2;\n        const o_y2 = players[j].y + playerHeight / 2;\n\n        var interSections = [];\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x1, o_y2));\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x2, o_y1));\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x2, o_y1, o_x2, o_y2));\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y2, o_x2, o_y2));\n\n        var realShootDistance = 10000;\n        for (var i = 0; i < interSections.length; ++i) {\n            if (interSections[i] !== false) {\n                var tempShootDistance = Math.pow(Math.pow(interSections[i].x - p_x, 2) + Math.pow(interSections[i].y - p_y, 2), 0.5);\n                if (tempShootDistance < realShootDistance) {\n                    realShootDistance = tempShootDistance;\n                    c_x = interSections[i].x;\n                    c_y = interSections[i].y;\n                }\n            }\n        }\n    }\n    return [c_x, c_y];\n}","import React from 'react';\nimport './inkBar.css';\nimport inkBarSVG from '../images/inkBar.svg'\nimport ReactSVG from 'react-svg'\n\n\nclass InkBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inkColor: this.hexToRgb(this.props.inkColor.main),\n            inkAmount: this.props.inkAmount,\n            inkBarPosition: { x: window.innerWidth-80, y: window.innerHeight - 400 },\n        }\n    }\n    hexToRgb(hex) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? [\n            parseInt(result[1], 16),\n            parseInt(result[2], 16),\n            parseInt(result[3], 16)\n        ] : null;\n    }\n    render() {\n        const inkBarStyle = {\n            fill: 'rgba(' + this.state.inkColor + ')',\n            stroke: 'none',\n        };\n        const inkBarBaseStyle = {\n            fill: 'rgba(50,50,50,0.3)',\n            'stroke-width': 5,\n            stroke: '#888888',\n        };\n        return (\n            <g>\n                {/* <text className=\"inkBarNum\" x={this.state.inkBarPosition.x} y={this.state.inkBarPosition.y}>\n                    {this.props.inkAmount}\n                </text> */}\n                {/*<rect className=\"inkBarBase\" x={this.state.inkBarPosition.x} y={this.state.inkBarPosition.y}\n                    width=\"400\" height=\"50\" style={inkBarBaseStyle} />\n                */}\n                <rect className=\"inkBar\" x={this.state.inkBarPosition.x } y={this.state.inkBarPosition.y + 3.4*(100-this.props.inkAmount)}\n                    width=\"50\" height={3.4 * this.props.inkAmount} style={inkBarStyle} />\n                <svg width=\"1000\" height=\"1000\" style={inkBarStyle} x={this.state.inkBarPosition.x - 10} y={this.state.inkBarPosition.y-330}>\n                <image href={inkBarSVG} width=\"70\" height=\"1000\" style={inkBarStyle}/>\n                </svg>\n            </g>\n\n        );\n    }\n}\n\nexport default InkBar;","import React from 'react';\nimport './Game.css';\nimport { drawPlayer, drawField, drawSplat, drawAimPoint, drawBullet, drawAllPlayers, } from '../draw'\nimport { COLOR_ASSET } from './ColorAssets'\nimport { weapons } from '../weapons'\nimport { Redirect } from 'react-router'\nimport { battleField_1 } from '../field'\n\nimport { GAME_STATE, PLAYER_STATUS } from '../enum'\nimport {\n    getKeyUpState,\n    getKeyDownState,\n    getMousePos,\n    calculatePlayerAngle,\n    updatePlayerPosition,\n    getSplats,\n    getPlayerStatus,\n    getPlayerSpeed,\n    getInkAmount,\n} from '../utils'\n\nimport InkBar from './inkBar';\n\nconst GAME_INTERVAL = 180;\n// function Player(props) {\n//     this.playerName = props.name;\n//         this.playerUid = props.uid;\n//         this.playerTeam = props.team;\n\n//         this.playerColor = COLOR_ASSET[0];\n//         this.playerHealth = 100;\n//         this.playerPosition = { x: 100, y: 100 };\n//         this.playerAngle = 0;\n//         this.playerStatus = PLAYER_STATUS.STANDING_SPACE;\n//         this.playerWeapon = weapons.splatterShot_v1;\n\n//         this.bullets = [];\n//         this.splats = [];\n// }\n\nclass Game extends React.Component {\n    constructor(props) {\n\n        super(props);\n        // data that most emit to server\n        this.playerData = {\n            playerName: this.props.name,\n            playerUid: this.props.uid,\n            playerTeam: this.props.team,\n\n            playerColor: COLOR_ASSET[0],\n            playerHealth: 100,\n            playerPosition: { x: 100, y: 100 },\n            playerAngle: 0,\n            playerStatus: PLAYER_STATUS.STANDING_SPACE,\n            playerWeapon: weapons.splatterShot_v1,\n\n            bullets: [],\n            splats: [],\n        };\n\n        this.playerData_2 = {\n            playerName: this.props.name,\n            playerUid: this.props.uid,\n            playerTeam: this.props.team,\n\n            playerColor: COLOR_ASSET[0],\n            playerHealth: 100,\n            playerPosition: { x: 200, y: 200 },\n            playerAngle: 0,\n            playerStatus: PLAYER_STATUS.STANDING_SPACE,\n            playerWeapon: weapons.splatterShot_v1,\n\n            bullets: [],\n            splats: [],\n        };\n\n        this.playerData_3 = {\n            playerName: this.props.name,\n            playerUid: this.props.uid,\n            playerTeam: this.props.team,\n\n            playerColor: COLOR_ASSET[0],\n            playerHealth: 100,\n            playerPosition: { x: 300, y: 300 },\n            playerAngle: 0,\n            playerStatus: PLAYER_STATUS.STANDING_SPACE,\n            playerWeapon: weapons.splatterShot_v1,\n\n            bullets: [],\n            splats: [],\n        };\n\n        // data that only holded by local front end\n        this.localPlayerData = {\n            gameState: GAME_STATE.GAMING,\n            roomId: this.props.roomId,\n\n            playerMoveSpeed: 5,\n            playerMoveDirection: { x: 0, y: 0 },\n            inkAmount: 100,\n            keyStrokeState: { left: 0, right: 0, up: 0, down: 0, space: 0, g: 0 },\n            mousePosition: { x: 0, y: 0 },\n            mouseClient: { x: 0, y: 0 },\n            mouseDownState: 0,\n\n            timeStamp: Date.now(), // Date.now()\n            initTime: Date.now(), // game start time\n            gameRemainTime: Date.now(), // remaining time for the game\n            timeColor: \"#FFFFFF\"\n        }\n\n        //data that recieved from the server\n        this.otherPlayerData = [];\n\n        this.mouseScale = 1;\n        this.state = {\n            gameBoardWidth: 1600,\n            gameBoardHeight: 900,\n            cameraSize: 1000,\n\n            playerPosition: { x: 100, y: 100 }, // to update camera position \n            inkAmount: 100, // to update inkbar \n        }\n\n        // this.props.socket.emit('enterGame', {\n        //     ...this.playerData,\n        // });\n\n        // this.props.socket.on('updateGame', (data) => {\n        //     this.otherPlayerData = data;\n        // })\n\n        setInterval(() => {\n            // this.props.socket.emit('updateGame', { ...this.playerData });\n        }, 100);\n    }\n\n    onKeyDown = e => {\n        getKeyDownState(e, this.localPlayerData);\n    }\n\n    onKeyUp = e => {\n        getKeyUpState(e, this.localPlayerData);\n    }\n\n    trackMouse = e => {\n        getMousePos(e, this.localPlayerData);\n    }\n\n    mouseDown = e => {\n        this.localPlayerData.mouseDownState = 1;\n    }\n    mouseUp = e => {\n        this.localPlayerData.mouseDownState = 0;\n    }\n\n    updateGame = () => {\n        if (this.localPlayerData.gameState === GAME_STATE.GAMING || this.localPlayerData.gameState === GAME_STATE.FREEZE) {\n            this.otherPlayerData = [this.playerData_2, this.playerData_3];\n            // drawOtherPlayers(this.splatRef, this.bulletRef, this.playerRef, this.splatAnimationRef, this.otherPlayerData);\n\n            // measure and update screen scale\n            const windowHeight = window.innerHeight;\n            const windowWidth = window.innerWidth;\n            this.mouseScale = windowWidth > windowHeight ? this.state.cameraSize / windowWidth : this.state.cameraSize / windowHeight;\n\n            // get and update mouse position\n            var canvas = this.groundRef;\n            var rect = canvas.getBoundingClientRect();\n            this.localPlayerData.mousePosition = {\n                x: (this.localPlayerData.mouseClient.x - rect.left) * this.mouseScale,\n                y: (this.localPlayerData.mouseClient.y - rect.top) * this.mouseScale\n            };\n\n            // get and update player angle\n            this.playerData.playerAngle = calculatePlayerAngle(\n                this.playerData.playerPosition.x, this.playerData.playerPosition.y,\n                this.localPlayerData.mousePosition.x, this.localPlayerData.mousePosition.y\n            );\n\n            // get and update new player status according field property\n            getPlayerStatus(this.splatRef, this.playerData, this.localPlayerData);\n\n            // update player speed \n            getPlayerSpeed(this.playerData, this.localPlayerData);\n\n            // get player position\n            const new_playerPosition = updatePlayerPosition(this.playerData, this.localPlayerData);\n            \n            if (this.localPlayerData.gameState === GAME_STATE.FREEZE) {\n                var filedWidth = this.state.gameBoardWidth;\n                var filedHeight = this.state.gameBoardHeight;\n\n                this.setState({ cameraSize: filedWidth > filedHeight ? filedWidth : filedHeight });\n                this.setState({ playerPosition: { x: filedWidth / 2, y: filedHeight / 2 } });\n            } else {\n                this.setState({ playerPosition: new_playerPosition });\n            }\n\n            // concate other player positions\n            var otherPlayerPosition = [];\n            for (var p=0 ; p < this.otherPlayerData.length ; ++p){\n                otherPlayerPosition.push(this.otherPlayerData[p].playerPosition);\n            }\n            \n            // get splat (include draw bullet)\n            var [aimPoints, inkConsumption] = getSplats(this.playerData, this.localPlayerData, otherPlayerPosition);\n\n            //get and update ink amount\n            const new_inkAmount = getInkAmount(inkConsumption, this.playerData, this.localPlayerData);\n            this.setState({ inkAmount: new_inkAmount });\n\n            this.otherPlayerData.push(this.playerData);\n\n            // console.log(this.otherPlayerData);\n            drawAllPlayers(this.splatRef, this.bulletRef, this.playerRef, this.splatAnimationRef, this.otherPlayerData);\n\n            /*  \n                    // draw splat\n                    drawSplat(this.splatRef, this.splatAnimationRef, this.playerData.splats, this.playerData.playerColor, this.playerData.playerAngle, this.playerData.playerPosition);\n            \n                    // draw bullet \n                    drawBullet(this.bulletRef, this.playerData.bullets, this.playerData.playerColor);\n            \n                    //draw player\n                    drawPlayer(this.playerRef, this.splatAnimationRef, this.playerData);\n            */\n            // draw aim point\n            drawAimPoint(this.aimPointRef, this.playerData.playerPosition, this.localPlayerData.mousePosition, this.playerData.playerAngle, aimPoints);\n        }\n        else {\n            this.setState({ cameraSize: 2000 });\n        }\n        // update time\n        var t = GAME_INTERVAL - parseInt((Date.now() - this.localPlayerData.initTime) / 1000);\n        this.localPlayerData.timeStamp = Date.now();\n        this.localPlayerData.gameRemainTime = t;\n        if (t < 10) this.localPlayerData.timeColor = \"#ff1493\";\n        if (t <= -1) {\n            this.localPlayerData.gameState = GAME_STATE.FREEZE;\n            // console.log(\"GAME FREEZE!!\");\n\n            if (t <= -5) {\n                this.localPlayerData.gameState = GAME_STATE.FINISH;\n                // console.log(\"GAME FINISH!!\");\n            }\n        }\n        // console.log(t);\n\n    }\n\n    componentDidMount = () => {\n        window.addEventListener(\"keyup\", this.onKeyUp);\n        window.addEventListener(\"keydown\", this.onKeyDown);\n        window.addEventListener(\"mousemove\", this.trackMouse);\n        window.addEventListener(\"mousedown\", this.mouseDown);\n        window.addEventListener(\"mouseup\", this.mouseUp);\n        setInterval(() => {\n            this.updateGame();\n        }, 20);\n        drawField(this.fieldRef);\n    }\n\n    render() {\n\n        if (this.localPlayerData.gameState === GAME_STATE.GAMING || this.localPlayerData.gameState === GAME_STATE.FREEZE) {\n            return (\n                <div id=\"game-container\">\n                    <svg id=\"svg-container\"\n                        width={Math.max(window.innerWidth, window.innerHeight)}\n                        height={Math.max(window.innerWidth, window.innerHeight)}\n                        preserveAspectRatio=\"xMidYMid slice\"\n                        viewBox={\n                            [this.state.cameraSize / -2 + this.state.playerPosition.x,\n                            this.state.cameraSize / -4 + this.state.playerPosition.y,\n                            this.state.cameraSize,\n                            this.state.cameraSize]}>\n                        <foreignObject x=\"0\" y=\"0\" width=\"10000\" height=\"10000\">\n                            <canvas id=\"groundLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.groundRef = el} />\n                            <canvas id=\"splatLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.splatRef = el} />\n                            <canvas id=\"splatAnimationLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.splatAnimationRef = el} />\n                            <canvas id=\"fieldLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.fieldRef = el} />\n                            <canvas id=\"playerLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.playerRef = el} />\n                            <canvas id=\"itemLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.itemRef = el} />\n                            <canvas id=\"bulletLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.bulletRef = el} />\n                            <canvas id=\"aimPointLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.aimPointRef = el} />\n                        </foreignObject>\n                    </svg>\n                    <svg id=\"info-container\"\n                        x=\"0\" y=\"0\"\n                        width={window.innerWidth}\n                        height={window.innerHeight} >\n                        <InkBar inkColor={this.playerData.playerColor} inkAmount={this.localPlayerData.inkAmount} />\n                        <text id=\"timer\" x=\"600\" y=\"80\" width=\"300\" height=\"100\" style={{ fill: this.localPlayerData.timeColor }}>{this.localPlayerData.gameRemainTime}</text>\n                    </svg>\n                </div>\n            )\n        }\n        else {\n            return (<Redirect to='/result' />);\n        }\n    }\n}\n\nexport default Game;\n\n","import React, {Component} from 'react'\nimport './JumpOutWindow.css'\n\n\nfunction myForm(e){\n    return(\n        <div className='Jump-component'>\n            <h3>{e}</h3>\n            <input></input>\n        </div>\n    )\n}\n\n\n\nclass JumpOutWindow extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            show: this.props.display\n        }\n        console.log(\"constr\", this.state.show)\n    }\n/*\n    componentWillMount() {\n        console.log(\"mount\", this.state.show)\n        this.setState({show: this.props.display})\n    }\n*/\n    componentDidUpdate(prevProps) {\n        //console.log(this.props, prevProps)\n        if (this.props.display !== prevProps.display) {\n          //this.fetchData(this.props.userID);\n          this.setState({show: this.props.display})\n        }\n    }\n\n    closeJumpOut = () => {\n        console.log(this.state.show)\n        this.setState({show: {display: \"none\"}})\n    }\n\n    render() {\n        return(\n            <div style={this.state.show} className='Jump-bg'>\n                <div className=\"Jump-container\">\n                    <button onClick={this.closeJumpOut} className='Jump-closeButton'>\n                        X\n                    </button>\n                    <h2>{this.props.title}</h2>\n                    {this.props.form.map( e => {\n                        //console.log(e)\n                        return myForm(e) \n                    })}\n                    <button className='App_button'>{this.props.submit}</button>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default JumpOutWindow","import React, {Component} from 'react'\nimport {NavLink} from 'react-router-dom'\nimport temp from '../images/temp.gif'\nimport logo from '../images/logo.png'\nimport JumpOutWindow from '../components/JumpoutWindow'\nimport './Home.css'\n\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            login_display : {display: \"none\"},\n            signup_display: {display: \"none\"}\n        }\n    }\n    \n    handlePlay = () => {\n        this.props.socket.emit('newPlayer', {\n            name: this.props.name\n        })\n        this.props.socket.on('getPlayerBasicInfo', (data) => {\n            this.props.setRoomId(data.roomId);\n            this.props.setUid(data.uid);\n            this.props.setTeam(data.team);\n            this.props.history.push(`/wait/${this.props.roomId}`);\n        })\n    }\n\n    handleDisplay(id) {\n        if(id === 'login'){\n            this.setState({login_display: {display: \"block\"}})\n            //console.log(\"login\")\n        }\n        else if(id === 'signup') {\n            this.setState({signup_display: {display: \"block\"}})\n            //console.log('signup')\n        } \n    }\n\n    render() {\n        return(\n            <div className='Home_container'>\n                <button className='App_button top-button' onClick={() => this.handleDisplay('signup')}>\n                    Sign up\n                </button>\n                <button className='App_button top-button' onClick={() => this.handleDisplay('login')}>\n                    Log in\n                </button>\n                \n                <JumpOutWindow display={this.state.login_display} title=\"Log in\" form={[\"id\", \"pw\"]} submit=\"Log in!\" />\n                <JumpOutWindow display={this.state.signup_display} title='Sign up' form={[\"email\",\"id\", \"pw\", \"pw again\"]} submit=\"Sign up!\" />\n                <div className='Home_main'>\n                    <img src={logo}></img>\n                    <input \n                        id=\"Name\"\n                        autoComplete=\"off\"\n                        spellCheck=\"false\"\n                        onKeyUp={this.props.setName}\n                    />\n                    {/* <NavLink to={`/wait/${this.props.roomId}`} style={{\"text-decoration\": \"none\"}}> */}\n                        <button className='App_button' onClick={this.handlePlay}>\n                            Play!\n                        </button>\n                    {/* </NavLink> */}\n                </div>\n                <div className='Home_mask'></div>\n                <div id='bg_wrapper'>\n                    <img src={temp} id='bg_img'></img>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home","import React from 'react'\nimport temp from '../images/player/p-02-01.svg'\nimport './UserBlock.css'\n\nclass UserBlock extends React.Component {\n    render() {\n        return(\n            <div className='UserBlock-container'>\n                <img src={temp} />\n                <h3>{this.props.userName}</h3>\n                <h4>STATUS</h4>\n            </div>\n        )\n    }\n}\n\nexport default UserBlock","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Wait.css'\nimport UserBlock from '../components/UserBlock'\n\nclass Wait extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            teamA: [],\n            teamB: []\n        }\n        this.props.socket.emit('getRoomPlayers', {\n            roomId: this.props.roomId\n        });\n        this.props.socket.on('getRoomPlayers', (data) => {\n            this.setState({\n                teamA: data.teamA.map(p => p.name),\n                teamB: data.teamB.map(p => p.name)\n            })\n        })\n    }\n\n    handleBack = () => {\n        // this.props.socket.emit('disconnect');\n        this.props.socket.disconnect();\n        this.props.socket.open()\n        this.props.history.push('/home');\n        this.props.setName();\n    }\n\n    render() {\n        let teamA = this.state.teamA.map(name =>\n            <li key={name}>\n                <UserBlock userName={name} />\n            </li>\n        );\n        let teamB = this.state.teamB.map(name =>\n            <li key={name}>\n                <UserBlock userName={name} />\n            </li>\n        );\n\n        return (\n            <div className='Wait_container'>\n                <h1>Game Lobby</h1>\n                <h3 id='Wait_message'>waiting for teammates...</h3>\n                <div id='Wait_wrapper'>\n                    <div className='Wait_group'>\n                        <h3 className='Wait_grouptitle'>TEAM A</h3>\n                        <ul>\n                            {teamA}\n                        </ul>\n                    </div>\n                    <div className='Wait_group'>\n                        <h3>TEAM B</h3>\n                        <ul>\n                            {teamB}\n                        </ul>\n                    </div>\n                </div>\n                <div id='Wait_button'>\n                    <NavLink to={`/game/${this.props.roomId}`}>\n                        <button className='App_button'>\n                            Start!\n                        </button>\n                    </NavLink>\n                    {/* <NavLink to='/home'> */}\n                        <button className='App_button' onClick={this.handleBack}>\n                            Back\n                        </button>\n                    {/* </NavLink> */}\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default Wait","import React, {Component} from 'react'\nimport {NavLink} from 'react-router-dom'\nimport './Result.css'\n\n\nclass Result extends Component {\n    render() {\n        console.log('result')\n        return(\n            <div className='Result-container'>\n                <h1>Result</h1>\n                {/*<h1>Splat.io</h1>*/}\n                <div>\n\n                </div>\n                <NavLink to='/home'>\n                    <button className='App_button'>OK!</button>\n                </NavLink>\n            </div>\n        )\n    }\n}\n\nexport default Result;","import React, {Component} from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport {Redirect} from 'react-router'\nimport io from 'socket.io-client';\nimport Game from '../components/Game'\nimport Home from './Home'\nimport Wait from './Wait'\nimport Result from './Result'\n\nlet host = '140.112.244.155:8080' // server ip (andyh0913 for temporary use)\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n        // this.socket = io(host);\n        this.socket = io('http://localhost:8080');\n        this.state = {\n            roomId: null,\n            name: 'Player',\n            uid: null,\n            team: null\n        }\n    }\n\n    setName = (e) => {\n        // type from input text\n        if (e) {\n            if (e.target.value !== '') { this.setState( {name: e.target.value} ); }\n        }\n        // reset name by calling serName()\n        else { \n            this.setState( {name: 'Player'} ); \n        }\n    }\n    setUid = (uid) => { this.setState( {uid: uid} ); }\n    setRoomId = (roomId) => { this.setState( {roomId: roomId} ); }\n    setTeam = (team) => { this.setState( {team: team} ); }\n\n    render(){\n        return (\n            <Switch>\n                <Route exact path='/' render={() => \n                    <Redirect to='/home' />} \n                />\n                <Route path='/home' render={(props) => <Home {...props} {...this.state}\n                    socket={this.socket}\n                    setName={this.setName} \n                    setUid={this.setUid}\n                    setRoomId={this.setRoomId}\n                    setTeam={this.setTeam} />}\n                />\n                <Route path={`/wait/${this.state.roomId}`} render={(props) => <Wait {...props} {...this.state}\n                    socket={this.socket}\n                    setName={this.setName} />}\n                />\n                <Route path={`/game/${this.state.roomId}`} render={(props) => <Game {...props} {...this.state}\n                    socket={this.socket} />}\n                />\n                <Route path='/result' render={() => <Result />} />\n            </Switch>\n        )\n    }\n}\n\nexport default Index","import React from 'react';\nimport './App.css';\nimport Game from '../components/Game'\nimport Index from './Index'\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Index></Index>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}