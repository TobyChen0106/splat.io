{"version":3,"sources":["components/ColorSets.js","images/player/green/p-01.svg","images/player/orange/p-01.svg","sounds/shoot/HitEffectiveCommon02.wav","sounds/shoot/BulletHitNoDamage.wav","images/player/p-03.svg","sounds/splash/splash2.wav","images/player/green/p-02.svg","images/player/green/p-03.svg","images/player/green/p-04.svg","images/player/orange/p-02.svg","images/player/orange/p-03.svg","images/player/orange/p-04.svg","sounds/inkHit/inkHit06.wav","images/ink/pink-01.svg","images/ink/pink-02.svg","images/ink/pink-03.svg","images/ink/blue-01.svg","images/ink/blue-02.svg","images/ink/blue-03.svg","images/ink/green-01.svg","images/ink/green-02.svg","images/ink/green-03.svg","images/ink/purple-01.svg","images/ink/purple-02.svg","images/ink/purple-03.svg","images/inkBar.svg","sounds/Fight.mp3","sounds/whistle.wav","images/temp.gif","images/logo.png","images/resultBar.svg","enum/gameState.js","enum/playerStatus.js","draw/drawPlayer.js","field/field.js","draw/drawField.js","draw/drawSplat.js","draw/drawAimPoint.js","draw/drawBullet.js","draw/drawAllPlayers.js","components/ColorAssets.js","weapons/weapons.js","utils/getKeyDownState.js","utils/getKeyUpState.js","utils/mousePos.js","utils/updatePlayerPosition.js","utils/getSplats.js","utils/getPlayerStatus.js","utils/getPlayerSpeed.js","utils/getInkAmount.js","utils/getLineIntersection.js","utils/checkCollision.js","utils/getGameResult.js","utils/getPlayerHealth.js","components/inkBar.jsx","components/HP.jsx","components/Game.js","components/JumpoutWindow.jsx","containers/Home.js","components/UserBlock.jsx","containers/Wait.js","containers/Result.js","containers/Index.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","main","glow","shadow","this","__webpack_require__","p","GAME_STATE","WAITING","GAMING","FREEZE","FINISH","PLAYER_STATUS","STANDING_OWN","WALKING_OWN","DIVING_OWN","SWIMMING_OWN","ATTACKING_OWN","STANDING_SPACE","WALKING_SPACE","DIVING_SPACE","SWIMMING_SPACE","ATTACKING_SPACE","STANDING_ENEMY","WALKING_ENEMY","DIVING_ENEMY","SWIMMING_ENEMY","ATTACKING_ENEMY","DEAD","ripple","lastRipplePosition","x","y","audio","Audio","splashSound","volume","drawPlayer","c","a","state","isSelf","isTeamMate","context","getContext","team","playerTeam","playerStatus","drawPlayerNormal","play","drawPlayerDive","drawPlayerDead","r_context","Math","abs","playerPosition","push","clearRect","width","height","r","length","drawRipple","drawRipple2","drawRipple3","splice","playerName","playerColor","playerAngle","save","translate","font","playerNameLen","measureText","strokeStyle","lineWidth","strokeText","fillStyle","fillText","restore","body","Image","leftHand","rightHand","gun","src","greenPlayer","greenLeft","greenRight","GunSVG","orangePlayer","orangeLeft","orangeRight","rotate","PI","drawImage","playerWidth","playerHeight","dive","greenDive","orangeDive","beginPath","moveTo","lineTo","closePath","stroke","graph","centerX","centerY","radius","sides","theta","i","sin","cos","max","battleField_1","fieldRange","xMin","xMax","yMin","yMax","rectObjects","polyObjects","drawField","field","objects","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","path","drawRectUsingArc","offset","obj_path","fill","drawPolyUsingArc","Path2D","arc","polyObject","n","ink","pink01","pink02","pink03","blue01","blue02","blue03","green01","green02","green03","purple01","purple02","purple03","inkHit06","drawSplat","splat","colorID","inkID","aimX","aimY","angle","ink_size","img","onload","currentTime","drawAimPoint","mousePosition","aimPoints","maindrawAimCircle","drawRealAimCircle","fireAudio","shootSound","noInkSound","drawBullet","bullets","p_x","p_y","drawCircle","drawCircleOutLine","distance","pow","min","drawAllPlayers","splatRef","bulletRef","playerRef","splatAnimationRef","players","l","splats","COLOR_ASSET","Colors","weapons","splatterShot_v1","type","maxShootDistance","bulletSpeed","fireSpeed","fireInkCost","maxError","gunLength","splatSize","splatDamage","splatShapeId","sub","price","getKeyDownState","e","key","playerMoveDirection","keyStrokeState","up","down","left","right","space","getKeyUpState","getMousePos","event","mouseClient","clientX","clientY","calculatePlayerAngle","x1","y1","x2","y2","comp","quotient","radiansToDegrees","atan","radians","updatePlayerPosition","playerData","localPlayerData","gameState","speed","playerMoveSpeed","d_x","d_y","new_x","new_y","temp_new_x","temp_new_y","noInkAudio","lines","timeLog","getSplats","otherPlayers","m_x","m_y","inkConsumption","playerWeapon","mouseLength","shootDistance","fieldCheckPos_a","checkFieldCollision","playerCheckPos_a","checkPlayerCollision","playerUid","random","g_x","g_y","fieldCheckPos","playerCheckPos","c_x","c_y","bullet_length","mouseDownState","timeStamp","inkAmount","splat_angle","floor","splatColorID","playerColorID","getPlayerStatus","ownColor","hex","result","exec","parseInt","hexToRgb","getImageData","data","own_color_count","empty_color_count","j","field_property","getPlayerSpeed","getInkAmount","new_inkAmount","new_playerHealth","playerHealth","restoreInk","restoreHP","getLineIntersection","x3","y3","x4","y4","denominator","ua","ub","tempShootDistance","realShootDistance","o_x1","o_y1","o_x2","o_y2","interSections","interSection","own_uid","getGameResult","fieldRef","sxt","fildWidth","fildHeight","own_color","enemyColor","space_count","own_field_count","enemy_field_count","own_result","enem_result","A","B","getPlayerHealth","s","damage","minDistance","maxDistance","killerUid","killerName","killedUid","killedName","InkBar","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inkColor","inkBarPosition","window","innerWidth","innerHeight","console","log","inkBarStyle","inkBarGlow","filter","react_default","createElement","className","style","href","inkBarSVG","React","Component","HP","HPPosition","Hpcolor","hp","fontSize","fightSound","audio2","whistle","Game","onKeyDown","onKeyUp","trackMouse","mouseDown","mouseUp","updateGame","windowHeight","windowWidth","mouseScale","cameraSize","rect","groundRef","getBoundingClientRect","top","killed_msg","otherPlayerData","deadTime","respawnTime","spawnPosition","new_playerPosition","filedWidth","gameBoardWidth","filedHeight","gameBoardHeight","setState","pause","_getSplats","_getSplats2","slicedToArray","new_inkAmountNhealth","healthAmount","aimPointRef","temp","anouncement","setTimeout","prevState","Date","now","gameTime","timeColor","clearInterval","updateGameIntervalId","socket","emit","objectSpread","calculateResultFlag","gameResult","componentDidMount","_ismount","addEventListener","setInterval","componentWillUnmount","interval","removeEventListener","roomId","teamColor","name","uid","g","teamA","teamB","on","allPlayers","_this2","id","timesUp","preserveAspectRatio","viewBox","ref","el","itemRef","components_inkBar","components_HP","disconnect","open","react_router","to","concat","JumpOutWindow","closeJumpOut","show","display","prevProps","onClick","title","form","map","myForm","submit","Home","handleInputName","target","value","setName","handlePlay","once","setRoomId","setUid","setTeam","setTeamColor","history","login_display","signup_display","handleDisplay","JumpoutWindow","logo","autoComplete","spellCheck","UserBlock","green","orange","alt","userName","playerRecord","Wait","handleBack","isRoomFull","teamAColor","teamBColor","waitingMessage","waitingForPlayer","maxPlayers","waitTime","off","src_components_UserBlock","background","Result","handleOK","teamAarea","teamBarea","inkStyleA","inkStyleB","Afloat","Apercentage","resultBarSVG","Index","changeStatus","io","exact","render","src_containers_Home","assign","src_containers_Wait","src_components_Game","src_containers_Result","App","react_router_dom","containers_Index","Boolean","location","hostname","match","ReactDOM","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10f73c79.chunk.js","sourcesContent":["function Colors(main, glow, shadow) {\n    this.main = main;\n    this.glow = glow;\n    this.shadow = shadow\n}\n\nmodule.exports = Colors","module.exports = __webpack_public_path__ + \"static/media/p-01.14fa8e2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-01.be1643af.svg\";","module.exports = __webpack_public_path__ + \"static/media/HitEffectiveCommon02.bb9ea272.wav\";","module.exports = __webpack_public_path__ + \"static/media/BulletHitNoDamage.6e0d3ed4.wav\";","module.exports = __webpack_public_path__ + \"static/media/p-03.9aeccb4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash2.47284f8c.wav\";","module.exports = __webpack_public_path__ + \"static/media/p-02.e002223b.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-03.ec8fade7.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-04.a9ddaf35.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-02.c9be8994.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-03.efc2c3e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-04.996498a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/inkHit06.06b2c837.wav\";","module.exports = __webpack_public_path__ + \"static/media/pink-01.92959e72.svg\";","module.exports = __webpack_public_path__ + \"static/media/pink-02.032da1c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/pink-03.aa2c206b.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-01.93385af3.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-02.78e68feb.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-03.98358227.svg\";","module.exports = __webpack_public_path__ + \"static/media/green-01.c7a89ac8.svg\";","module.exports = __webpack_public_path__ + \"static/media/green-02.d13b2050.svg\";","module.exports = __webpack_public_path__ + \"static/media/green-03.e95e8e60.svg\";","module.exports = __webpack_public_path__ + \"static/media/purple-01.56b26c88.svg\";","module.exports = __webpack_public_path__ + \"static/media/purple-02.bbac2161.svg\";","module.exports = __webpack_public_path__ + \"static/media/purple-03.a5cbce3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/inkBar.4467d4bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/Fight.2046d9f8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/whistle.c8c50fb6.wav\";","module.exports = __webpack_public_path__ + \"static/media/temp.2b31b498.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.eabb5ff2.png\";","module.exports = __webpack_public_path__ + \"static/media/resultBar.49eb83d2.svg\";","export const GAME_STATE = {\n    WAITING: 1,\n    GAMING: 2,\n    FREEZE: 3,\n    FINISH: 4\n  };","export const PLAYER_STATUS = {\n  STANDING_OWN: 0,\n  WALKING_OWN: 1,\n  DIVING_OWN: 2,\n  SWIMMING_OWN: 3,\n  ATTACKING_OWN: 4,\n\n  STANDING_SPACE: 5,\n  WALKING_SPACE: 6,\n  DIVING_SPACE: 7,\n  SWIMMING_SPACE: 8,\n  ATTACKING_SPACE: 9,\n\n  STANDING_ENEMY: 10,\n  WALKING_ENEMY: 11,\n  DIVING_ENEMY: 12,\n  SWIMMING_ENEMY: 13,\n  ATTACKING_ENEMY: 14,\n\n  DEAD: 15,\n};","\nimport { PLAYER_STATUS } from '../enum'\nimport splashSound from '../sounds/splash/splash2.wav'\n\nimport greenPlayer from '../images/player/green/p-01.svg'\nimport greenLeft from '../images/player/green/p-02.svg'\nimport greenRight from '../images/player/green/p-03.svg'\nimport greenDive from '../images/player/green/p-04.svg'\n\nimport orangePlayer from '../images/player/orange/p-01.svg'\nimport orangeLeft from '../images/player/orange/p-02.svg'\nimport orangeRight from '../images/player/orange/p-03.svg'\nimport orangeDive from '../images/player/orange/p-04.svg'\n\nimport GunSVG from '../images/player/p-03.svg'\n/*\nimport playerSVG from '../images/player/p-02-01.svg'\nimport LeftHandSVG from '../images/player/p-02-02.svg'\nimport RightHandSVG from '../images/player/p-02-03.svg'\nimport gunSVG from '../images/player/p-03.svg'\nimport diveSVG from '../images/player/p-02-04.svg'\n*/\n\nexport const playerWidth = 50;\nexport const playerHeight = 50;\n\nconst handOffset = 23\n\n//var diveSVG;\n//var gunSVG = GunSVG\n\nvar ripple = [];\n//var lastRippleTimeStamp = 0;\nvar lastRipplePosition = { x: -1000, y: -1000 };\n\nvar audio = new Audio(splashSound);\naudio.volume = 0.5;\n\nexport const drawPlayer = (c, a, state, isSelf, isTeamMate) => {\n\n    var context = c.getContext(\"2d\");\n\n    var team = state.playerTeam\n\n    // attach the context to the canvas for easy access and to reduce complexity.\n    // context.clearRect(0, 0, c.width, c.height);\n    // drawPlayerNormal(context, state)\n\n    switch (state.playerStatus) {\n        case PLAYER_STATUS.STANDING_OWN:\n            drawPlayerNormal(context, state, team, isSelf);\n            break;\n        case PLAYER_STATUS.WALKING_OWN:\n            drawPlayerNormal(context, state, team, isSelf);\n            break;\n        case PLAYER_STATUS.DIVING_OWN:\n            // audio.currentTime = 0;\n            audio.play();\n            drawPlayerDive(context, state, team, isSelf, isTeamMate);\n            break;\n        case PLAYER_STATUS.SWIMMING_OWN:\n            // audio.currentTime = 0;\n            audio.play();\n            drawPlayerDive(context, state, team, isSelf, isTeamMate);\n\n            break;\n        case PLAYER_STATUS.ATTACKING_OWN:\n            drawPlayerNormal(context, state, team, isSelf);\n            break;\n\n        case PLAYER_STATUS.STANDING_SPACE:\n            drawPlayerNormal(context, state, team, isSelf);\n\n            break;\n        case PLAYER_STATUS.WALKING_SPACE:\n            drawPlayerNormal(context, state, team, isSelf);\n\n            break;\n        case PLAYER_STATUS.DIVING_SPACE:\n            drawPlayerNormal(context, state, team, isSelf);\n\n            break;\n        case PLAYER_STATUS.SWIMMING_SPACE:\n            drawPlayerNormal(context, state, team, isSelf);\n\n            break;\n        case PLAYER_STATUS.ATTACKING_SPACE:\n            drawPlayerNormal(context, state, team, isSelf);\n\n            break;\n\n        case PLAYER_STATUS.STANDING_ENEMY:\n            drawPlayerNormal(context, state, team, isSelf);\n\n            break;\n        case PLAYER_STATUS.WALKING_ENEMY:\n            drawPlayerNormal(context, state, team, isSelf);\n\n            break;\n        case PLAYER_STATUS.DIVING_ENEMY:\n            break;\n        case PLAYER_STATUS.SWIMMING_ENEMY:\n            break;\n        case PLAYER_STATUS.ATTACKING_ENEMY:\n            drawPlayerNormal(context, state, team, isSelf);\n            break;\n        case PLAYER_STATUS.DEAD:\n            drawPlayerDead(context, state, team, isSelf);\n            break;\n        default: break;\n    }\n\n    // ripples\n    var r_context = a.getContext(\"2d\");\n    if ((Math.abs(state.playerPosition.x - lastRipplePosition.x) > 50 || Math.abs(state.playerPosition.y - lastRipplePosition.y) > 50) &&\n        (state.playerStatus === PLAYER_STATUS.WALKING_OWN || state.playerStatus === PLAYER_STATUS.SWIMMING_OWN\n            || state.playerStatus === PLAYER_STATUS.WALKING_ENEMY || state.playerStatus === PLAYER_STATUS.SWIMMING_ENEMY)) {\n        ripple.push([state.playerPosition.x, state.playerPosition.y, 20, 300]);\n        lastRipplePosition.x = state.playerPosition.x;\n        lastRipplePosition.y = state.playerPosition.y;\n    }\n\n    r_context.clearRect(0, 0, a.width, a.height);\n    for (var r = 0; r < ripple.length; ++r) {\n        ripple[r][2] += 0.5;\n        drawRipple(r_context, ripple[r][0], ripple[r][1], ripple[r][2], 20);\n        if (ripple[r][2] - 10 > 0) {\n            drawRipple2(r_context, ripple[r][0], ripple[r][1], ripple[r][2] - 10, 20);\n        }\n        if (ripple[r][2] - 20 > 0) {\n            drawRipple3(r_context, ripple[r][0], ripple[r][1], ripple[r][2] - 20, 20);\n        }\n        if (ripple[r][2] >= ripple[r][3]) {\n            ripple.splice(r, 1);;\n            --r;\n            continue;\n        }\n    }\n}\n\n\nconst drawPlayerNormal = (context, state, team, isSelf) => {\n    const playerName = state.playerName\n    const playerColor = state.playerColor\n    const playerPosition = state.playerPosition\n    const playerAngle = state.playerAngle\n    //const playerStatus = state.playerStatus\n    /*\n    context.save();\n    context.translate(playerPosition.x, playerPosition.y)\n\n    context.save();\n    context.rotate(Math.PI / 180 * playerAngle);\n    */\n    context.save()\n\n    context.translate(playerPosition.x, playerPosition.y)\n\n    context.font = \"bold 12pt Freckle Face\";\n    const playerNameLen = context.measureText(playerName).width;\n\n    context.strokeStyle = isSelf ? \"#ffd700\" : \"#FFFFFF\";\n    context.lineWidth = 3;\n    context.strokeText(playerName, -playerNameLen / 2, 50)\n\n    context.fillStyle = playerColor;\n    context.font = \"bold 12pt Freckle Face\";\n\n    context.fillText(playerName, -playerNameLen / 2, 50);\n    //end of player drawing\n    context.restore();\n\n    var body = new Image()\n    var leftHand = new Image()\n    var rightHand = new Image()\n    var gun = new Image()\n\n    if (team === 'A') {\n        body.src = greenPlayer;\n        leftHand.src = greenLeft;\n        rightHand.src = greenRight;\n        gun.src = GunSVG;\n    }\n    else {\n        body.src = orangePlayer;\n        leftHand.src = orangeLeft;\n        rightHand.src = orangeRight;\n        gun.src = GunSVG;\n    }\n    /*\n    body.src = playerSVG;\n    leftHand.src = LeftHandSVG;\n    rightHand.src = RightHandSVG;\n    gun.src = gunSVG;\n    */\n\n    context.translate(playerPosition.x, playerPosition.y)\n    context.rotate(Math.PI / 180 * (playerAngle + 180));\n    context.drawImage(body, -playerWidth / 2 - 10, -playerHeight / 2 - 12, playerWidth + 15, playerHeight + 15)\n    context.drawImage(leftHand, -playerWidth / 2 - 10, -playerHeight / 2 + handOffset, playerWidth, playerHeight)\n    context.drawImage(gun, -playerWidth / 2, -playerHeight / 2 + 28, playerWidth, playerHeight)\n    context.drawImage(rightHand, -playerWidth / 2 + 10, -playerHeight / 2 + handOffset, playerWidth, playerHeight)\n\n    context.rotate(- Math.PI / 180 * (playerAngle + 180))\n    context.translate(-playerPosition.x, -playerPosition.y)\n\n\n\n\n    //draw the player part moving with mouse \n\n\n    /*context.fillStyle = 'rgba(' + playerColor + ')';\n    context.fillRect(-playerWidth / 2, -playerHeight / 2, playerWidth, playerHeight);\n    context.strokeStyle = \"#33333344\";\n    context.lineWidth = 5;\n    context.strokeRect(-playerWidth / 2, -playerHeight / 2, playerWidth, playerHeight);\n\n    context.fillStyle = \"#33cc59\";\n    context.fillRect(-playerWidth / 2, -playerHeight / 2, 15, 15);\n    context.fillStyle = \"#33a6cc\";\n    context.fillRect(playerWidth / 2 - 15, -playerHeight / 2, 15, 15);\n    */\n\n    //context.restore();\n    //draw the player part NOT moving with mouse \n\n\n}\n\nconst drawPlayerDive = (context, state, team, isSelf, isTeamMate) => {\n    const playerName = state.playerName\n    const playerColor = state.playerColor\n    const playerPosition = state.playerPosition\n    //const playerAngle = state.playerAngle\n    //const playerStatus = state.playerStatus\n\n\n    if (isTeamMate) {\n        context.save()\n\n        context.translate(playerPosition.x, playerPosition.y)\n\n        context.font = \"bold 10pt Freckle Face\";\n        const playerNameLen = context.measureText(playerName).width;\n\n        context.strokeStyle = isSelf ? \"#ffd700\" : \"#FFFFFF\";\n        context.lineWidth = 3;\n        context.strokeText(playerName, -playerNameLen / 2, 50)\n\n        context.fillStyle = playerColor;\n        context.font = \"bold 10pt Freckle Face\";\n\n        context.fillText(playerName, -playerNameLen / 2, 50);\n        //end of player drawing\n        context.restore();\n\n        var dive = new Image()\n        if (team === 'A') {\n            dive.src = greenDive\n        }\n        else {\n            dive.src = orangeDive\n        }\n\n        context.translate(playerPosition.x, playerPosition.y)\n        context.drawImage(dive, -playerWidth / 2 - 10, -playerHeight / 2 + 12, playerWidth + 15, playerHeight + 15)\n        context.translate(-playerPosition.x, -playerPosition.y)\n    }\n}\n\nconst drawPlayerDead = (context, state, team, isSelf) => {\n    const playerName = state.playerName\n    const playerColor = state.playerColor\n    const playerPosition = state.playerPosition\n    //const playerAngle = state.playerAngle\n    //const playerStatus = state.playerStatus\n\n\n    context.save()\n\n    context.translate(playerPosition.x, playerPosition.y)\n\n    // draw X\n    context.beginPath();\n    context.moveTo(-25, -25);\n    context.lineTo(25, 25);\n    context.moveTo(25, -25);\n    context.lineTo(-25, 25);\n    context.closePath();\n\n    context.lineWidth = 10;\n    context.stroke();\n    // end of draw X\n\n    context.font = \"bold 10pt Freckle Face\";\n    const playerNameLen = context.measureText(playerName).width;\n\n    context.strokeStyle = isSelf ? \"#ffd700\" : \"#FFFFFF\";\n    context.lineWidth = 3;\n    context.strokeText(playerName, -playerNameLen / 2, 50)\n\n    context.fillStyle = playerColor;\n    context.font = \"bold 10pt Freckle Face\";\n\n    context.fillText(playerName, -playerNameLen / 2, 50);\n\n    //end of player drawing\n    context.restore();\n}\n\nconst drawPlayerName = (context, state) => {\n    const playerName = state.playerName\n    const playerColor = state.playerColor\n    const playerPosition = state.playerPosition\n    //const playerAngle = state.playerAngle\n    //const playerStatus = state.playerStatus\n\n    context.save()\n\n    context.translate(playerPosition.x, playerPosition.y)\n\n    context.font = \"bold 10pt Freckle Face\";\n    const playerNameLen = context.measureText(playerName).width;\n\n    context.strokeStyle = \"#FFFFFF\";\n    context.lineWidth = 3;\n    context.strokeText(playerName, -playerNameLen / 2, 50)\n\n    context.fillStyle = playerColor;\n    context.font = \"bold 10pt Freckle Face\";\n\n    context.fillText(playerName, -playerNameLen / 2, 50);\n    //end of player drawing\n    context.restore();\n\n    /*context.save();\n    context.translate(playerPosition.x, playerPosition.y)\n\n    context.save();\n    context.rotate(Math.PI / 180 * playerAngle);\n\n\n\n    context.restore();\n    //draw the player part NOT moving with mouse \n\n    context.font = \"bold 20pt Arial\";\n    const playerNameLen = context.measureText(playerName).width;\n\n    context.strokeStyle = \"#dddddd\";\n    context.lineWidth = 3;\n    context.strokeText(playerName, -playerNameLen / 2, 50)\n\n    context.fillStyle = \"#111111\";\n    context.font = \"bold 20pt Arial\";\n\n    context.fillText(playerName, -playerNameLen / 2, 50);\n    //end of player drawing\n    context.restore();\n    */\n}\n\nconst drawRipple = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 3;\n    graph.strokeStyle = 'rgba(230,230,230,' + (Math.max(0, 40 - radius) / 100) + ')';\n    graph.stroke();\n    graph.restore();\n}\n\nconst drawRipple2 = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 2;\n    graph.strokeStyle = 'rgba(220,220,220,' + (Math.max(0, 26 - radius) / 100) + ')';\n    graph.stroke();\n    graph.restore();\n}\n\nconst drawRipple3 = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 1;\n    graph.strokeStyle = 'rgba(200,200,200,' + (Math.max(0, 22 - radius) / 100) + ')';\n\n    graph.stroke();\n    graph.restore();\n}","export const getRegularPolyObject = (type, c_x, c_y, radius, sides, angle=0) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n    var polygon = [type];\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI + angle/180*Math.PI;\n        x = c_x + radius * Math.sin(theta);\n        y = c_y + radius * Math.cos(theta);\n        polygon.push([x, y]);\n    }\n    return polygon;\n}\n\n\nexport const battleField_1 = {\n    fieldRange: { xMin: 50, xMax: 1550, yMin: 50, yMax: 850 },\n\n    //(xPos, yPos, width, height)\n    rectObjects: [\n        [\"rock\", 500, 500, 100, 200],\n        [\"rock\", 1000, 500, 100, 200],\n        [\"rock\", 500, 50, 100, 200],\n        [\"rock\", 1000, 50, 100, 200],\n        [\"rock\", 650, 400, 300, 100],\n        [\"rock\", 750, 300, 100, 300],\n\n        [\"rock\", 50, 0, 1600, 50],\n        [\"rock\", 0, 50, 50, 900],\n        [\"rock\", 50, 850, 1600, 50],\n        [\"rock\", 1550, 50, 50, 900],\n\n        [\"rock\", 0, 0, 50, 50],\n        [\"rock\", 1550, 0, 50, 50],\n        [\"rock\", 0, 850, 50, 50],\n        [\"rock\", 1550, 850, 50, 50],\n    ],\n    polyObjects: [\n        // getRegularPolyObject(\"rock\", 500, 500, 100, 8, 22.5),\n    ],\n    \n}\n","import { battleField_1 } from '../field'\n\nconst outerColor = \"#525C63\"\nconst middleColor = \"#3B4349\"\nconst innerColor = \"#21292D\"\n\n\n\nexport const drawField = (c) => {\n    const field = battleField_1;\n    var objects = field.rectObjects;\n    var xMin = field.fieldRange.xMin\n    var yMin = field.fieldRange.yMin\n    var xMax = field.fieldRange.xMax\n    var yMax = field.fieldRange.yMax\n\n    var context = c.getContext(\"2d\");\n\n    context.save();\n    context.shadowBlur = 3;\n    context.shadowColor = \"rgba(63, 255, 239, 0.555)\";\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    //context.filter = 'drop-shadow(0px 0px 1px #e81)';\n    // console.log(field.fieldRange)\n    //draw the ground\n    //context.fillStyle = \"#aaaaaa\";\n    //context.fillRect(field.fieldRange.xMin, field.fieldRange.yMin, field.fieldRange.xMax-field.fieldRange.xMin, field.fieldRange.yMax-field.fieldRange.yMin);\n\n    var path = drawRectUsingArc(xMin, yMin, xMax - xMin, yMax - yMin, 30);\n    context.strokeStyle = outerColor;\n    context.lineWidth = 8;\n    context.stroke(path)\n    var offset = 12\n    var path = drawRectUsingArc(xMin - offset / 2, yMin - offset / 2, xMax - xMin + offset, yMax - yMin + offset, 30);\n    context.strokeStyle = middleColor;\n    context.lineWidth = 8;\n    context.stroke(path)\n\n\n    //context.strokeRect(field.fieldRange.xMin, field.fieldRange.yMin, \n    //field.fieldRange.xMax-field.fieldRange.xMin, field.fieldRange.yMax-field.fieldRange.yMin);\n    // draw the objects\n    for (var i = 0; i < objects.length; ++i) {\n        var obj = { x: objects[i][1], y: objects[i][2], w: objects[i][3], h: objects[i][4] }\n\n        switch (objects[i][0]) {\n            case \"rock\":\n\n                //最外圈\n                context.fillStyle = outerColor;\n                var obj_path = drawRectUsingArc(objects[i][1], objects[i][2], objects[i][3], objects[i][4], 5)\n                context.fill(obj_path)\n\n                //中間\n                context.fillStyle = middleColor;\n                obj_path = drawRectUsingArc(objects[i][1] + 8, objects[i][2] + 8, objects[i][3] - 16, objects[i][4] - 16, 5)\n                context.fill(obj_path)\n\n                //最內圈\n                context.fillStyle = innerColor;\n                obj_path = drawRectUsingArc(objects[i][1] + 20, objects[i][2] + 20, objects[i][3] - 40, objects[i][4] - 40, 5)\n                context.fill(obj_path)\n\n                break;\n            default: break;\n        }\n\n        /*\n        var img = new Image();\n        img.src = rock;\n        img.onload = function() {\n            context.drawImage(img, obj.x, obj.y, obj.w, obj.h)\n        }\n        \n        var obj_path = drawUsingArc(objects[i][1], objects[i][2], objects[i][3], objects[i][4], 10)\n        context.fill(obj_path)\n        */\n        //var obj_path = drawUsingArc(objects[i][1]+5, objects[i][2]+5, objects[i][3]-10, objects[i][4]-10, 10)\n        //context.fill(obj_path)\n        //context.fillRect(objects[i][1], objects[i][2], objects[i][3], objects[i][4]);\n    }\n\n    //draw polygon objects\n    objects = field.polyObjects;\n    for (var i = 0; i < objects.length; ++i) {\n        switch (objects[i][0]) {\n            case \"rock\":\n\n\n                //最外圈\n                context.fillStyle = outerColor;\n                var obj_path = drawPolyUsingArc(objects[i])\n                context.fill(obj_path)\n\n                // //中間\n                // context.fillStyle = middleColor;\n                // var obj_path = drawPolyUsingArc(objects[i])\n                // context.fill(obj_path)\n\n                // //最內圈\n                // context.fillStyle = innerColor;\n                // var obj_path = drawPolyUsingArc(objects[i])                \n                // context.fill(obj_path)\n\n                break;\n            default: break;\n        }\n    }\n    context.restore();\n}\n\n\nfunction drawRectUsingArc(x, y, width, height, r) {\n    var path = new Path2D();\n\n    path.moveTo(x + r, y);\n    path.lineTo(x + width - r, y);\n    path.arc(x + width - r, y + r, r, Math.PI / 180 * 270, 0, false);\n    path.lineTo(x + width, y + height - r);\n    path.arc(x + width - r, y + height - r, r, 0, Math.PI / 180 * 90, 0, false);\n    path.lineTo(x + r, y + height);\n    path.arc(x + r, y + height - r, r, Math.PI / 180 * 90, Math.PI / 180 * 180, false);\n    path.lineTo(x, y + r);\n    path.arc(x + r, y + r, r, Math.PI / 180 * 180, Math.PI / 180 * 270, false);\n\n    return path;\n}\n\nfunction drawPolyUsingArc(polyObject) {\n    var path = new Path2D();\n    const n = polyObject.length;\n    path.moveTo(polyObject[n - 1][0], polyObject[n - 1][1]);\n    \n    for (var i = 1; i < n; i++) {\n        path.lineTo(polyObject[i][0], polyObject[i][1]);\n    }\n\n    return path;\n}","import inkHit06 from '../sounds/inkHit/inkHit06.wav';\n\nimport pink01 from '../images/ink/pink-01.svg'\nimport pink02 from '../images/ink/pink-02.svg'\nimport pink03 from '../images/ink/pink-03.svg'\n\nimport blue01 from '../images/ink/blue-01.svg'\nimport blue02 from '../images/ink/blue-02.svg'\nimport blue03 from '../images/ink/blue-03.svg'\n\n\nimport green01 from '../images/ink/green-01.svg'\nimport green02 from '../images/ink/green-02.svg'\nimport green03 from '../images/ink/green-03.svg'\n\n\nimport purple01 from '../images/ink/purple-01.svg'\nimport purple02 from '../images/ink/purple-02.svg'\nimport purple03 from '../images/ink/purple-03.svg'\n\n\n\nconst ink = [\n    [pink01, pink02, pink03],\n    [blue01, blue02, blue03],\n    [green01, green02, green03],\n    [purple01, purple02, purple03]\n];\nvar ripple = [];\nvar audio = new Audio(inkHit06);\naudio.volume = 0.5;\n/*\nfunction random_ink() {\n    var l = ink.length;\n    var r = Math.floor(Math.random() * l)\n    return ink[r]\n}\n*/\nexport const drawSplat = (c, a, splat, playerColor, playerAngle, playerPosition) => {\n\n    var context = c.getContext(\"2d\");\n    var r_context = a.getContext(\"2d\");\n    \n\n    context.save();\n\n    //context.filter = 'drop-shadow(0px 0px 5px #FF1493)';\n    // context.drawImage(image, 0,0,1600,900);\n\n    // splat [splatShapeId, pos_x, pos_y, splatAngle, splatSize, splatDamage]\n    for (var i = 0; i < splat.length; ++i) {\n        var colorID = splat[i][6];\n        var inkID = splat[i][0]; // shape of the splat\n        //context.fillStyle =  'rgba(' + playerColor +')';\n        var aimX = splat[i][1];\n        var aimY = splat[i][2];\n        //var playerX = playerPosition.x;\n        //var playerY = playerPosition.y;\n        var angle = splat[i][3];\n        // playerAngle< 0 ? playerAngle + 270 : playerAngle - 90;\n        var ink_size = splat[i][4] * 2; //因為我圖畫得比較小所以先乘3\n\n        var img = new Image();\n        img.src = ink[colorID][inkID];\n        //\"data:image/svg+xml;base64,\"+btoa(trysvg);\n        //img.style = \"fill:#B0E0E6;\"\n        //console.log(img.style)\n        img.onload = function () {\n            // console.log(angle)\n            // context.shadowBlur = 5;\n            // context.shadowColor = \"#FF00FF\";\n            context.translate(aimX, aimY)\n            context.rotate(angle / 180 * Math.PI);\n            context.drawImage(img, -ink_size / 2, -ink_size / 2, ink_size, ink_size);\n            context.rotate(-angle / 180 * Math.PI);\n            context.translate(-aimX, -aimY)\n        }\n\n        //drawCircle(context, aimX, aimY, splat[i][2], 20);\n        audio.currentTime = 0;\n        audio.play();\n\n        // ripple\n        ripple.push([aimX, aimY, 1, ink_size]);\n    }\n\n    // image.src = context.canvas.toDataURL();\n    context.restore();\n    // context.clearRect(0, 0, c.width, c.height);\n    // r_context.clearRect(0, 0, a.width, a.height);\n    for (var r = 0; r < ripple.length; ++r) {\n        ripple[r][2] += 2;\n        drawRipple(r_context, ripple[r][0], ripple[r][1], ripple[r][2], 20);\n        if (ripple[r][2] - 10 > 0) {\n            drawRipple2(r_context, ripple[r][0], ripple[r][1], ripple[r][2] - 10, 20);\n        }\n        if (ripple[r][2] - 20 > 0) {\n            drawRipple3(r_context, ripple[r][0], ripple[r][1], ripple[r][2] - 20, 20);\n        }\n        if (ripple[r][2] >= ripple[r][3]) {\n            ripple.splice(r, 1);;\n            --r;\n            continue;\n        }\n    }\n}\n\nexport const drawCircle = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.fill();\n}\n\n\nconst drawRipple = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 3;\n    graph.strokeStyle = 'rgba(230,230,230,' + (Math.max(0, 30 - radius) / 100) + ')';\n    graph.stroke();\n    graph.restore();\n}\n\nconst drawRipple2 = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 2;\n    graph.strokeStyle = 'rgba(220,220,220,' + (Math.max(0, 20 - radius) / 100) + ')';\n    graph.stroke();\n    graph.restore();\n}\n\nconst drawRipple3 = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n\n    graph.save();\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 1;\n    graph.strokeStyle = 'rgba(200,200,200,' + (Math.max(0, 10 - radius) / 100) + ')';\n\n    graph.stroke();\n    graph.restore();\n}","\nexport const drawAimPoint = (c, playerPosition, mousePosition, playerAngle, aimPoints) => {\n\n    var context = c.getContext(\"2d\");\n    context.clearRect(0, 0, c.width, c.height);\n    context.save();\n\n    maindrawAimCircle(context, mousePosition.x, mousePosition.y, playerAngle);\n    drawRealAimCircle(context, aimPoints);\n\n    context.restore();\n}\n\nconst drawRealAimCircle = (graph, aimPoints) => {\n    // aimPoints = [[100,100], [100,130]];\n    const radius = 10;\n    const sides = 20;\n\n    graph.save();\n    for (var a = 0; a < aimPoints.length; ++a) {\n        var theta = 0;\n        var x = 0;\n        var y = 0;\n\n        graph.beginPath();\n        for (var i = 0; i < sides; i++) {\n            theta = (i / sides) * 2 * Math.PI;\n            x = aimPoints[a][0] + radius * Math.sin(theta);\n            y = aimPoints[a][1] + radius * Math.cos(theta);\n            graph.lineTo(x, y);\n        }\n        graph.closePath();\n        graph.strokeStyle = \"#b3198c88\";\n        graph.lineWidth = 3;\n        graph.stroke();\n\n        graph.beginPath();\n        for ( i = 0; i < sides; i++) {\n            theta = (i / sides) * 2 * Math.PI;\n            x = aimPoints[a][0] + (radius - 3) * Math.sin(theta);\n            y = aimPoints[a][1] + (radius - 3) * Math.cos(theta);\n            graph.lineTo(x, y);\n        }\n        graph.closePath();\n        graph.strokeStyle = \"#77777755\";\n        graph.lineWidth = 2;\n        graph.stroke();\n    }\n    graph.restore();\n}\n\nconst maindrawAimCircle = (graph, centerX, centerY, angle) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n    const radius = 15;\n    const sides = 20;\n\n    graph.save();\n    graph.translate(centerX, centerY);\n\n    graph.save();\n    graph.rotate(-Math.PI / 180 * angle);\n\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = radius * Math.sin(theta);\n        y = radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n\n    graph.strokeStyle = \"#77777755\";\n    graph.lineWidth = 3;\n    graph.stroke();\n\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = (radius-6) * Math.sin(theta);\n        y = (radius-6) * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n\n    graph.strokeStyle = \"#77777755\";\n    graph.lineWidth = 1.5;\n    graph.stroke();\n\n    graph.beginPath();\n    graph.moveTo(0, -9);\n    graph.lineTo(0, -22);\n    graph.moveTo(0, 9);\n    graph.lineTo(0, 22);\n    graph.moveTo(-9, 0);\n    graph.lineTo(-22, 0);\n    graph.moveTo(9, 0);\n    graph.lineTo(22, 0);\n\n    graph.closePath();\n\n    // graph.strokeStyle = \"#666666\";\n    graph.lineWidth = 3;\n    graph.stroke();\n\n    graph.restore();\n    graph.restore();\n\n}","import shootSound from '../sounds/shoot/HitEffectiveCommon02.wav';\nimport noInkSound from '../sounds/shoot/BulletHitNoDamage.wav';\n\nvar fireAudio = new Audio(shootSound);\nfireAudio.volume = 0.5;\n\nvar noInkAudio = new Audio(noInkSound);\nnoInkAudio.volume = 0.5;\n\nexport const drawBullet = (c, bullets, playerColor, p_x, p_y) => {\n\n    var context = c.getContext(\"2d\");\n    // context.clearRect(0, 0, c.width, c.height);\n\n    context.save();\n    // context.drawImage(image, 0,0,1600,900);\n\n    for (var i = 0; i < bullets.length; ++i) {\n        context.fillStyle = playerColor.main;\n        drawCircle(context, bullets[i][1], bullets[i][2], 8, 10);\n        drawCircleOutLine(context, bullets[i][1], bullets[i][2], 8, 10);\n\n        //play fire sound\n        if (bullets[i][3] === 1) {\n            var distance = Math.pow(Math.pow(p_x - bullets[i][1], 2) + Math.pow(p_y - bullets[i][2], 2), 0.5);\n            \n            if (distance < 800) {\n                fireAudio.volume = 0.5 / Math.min(5, distance/100 + 1);\n                fireAudio.currentTime = 0;\n                fireAudio.play();\n            }\n        }\n    }\n\n    context.restore();\n\n}\n\nconst drawCircle = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.fill();\n}\n\nconst drawCircleOutLine = (graph, centerX, centerY, radius, sides) => {\n    var theta = 0;\n    var x = 0;\n    var y = 0;\n\n    graph.beginPath();\n    for (var i = 0; i < sides; i++) {\n        theta = (i / sides) * 2 * Math.PI;\n        x = centerX + radius * Math.sin(theta);\n        y = centerY + radius * Math.cos(theta);\n        graph.lineTo(x, y);\n    }\n    graph.closePath();\n    graph.lineWidth = 3;\n    graph.strokeStyle = \"#55555533\"\n    graph.stroke();\n}\n","import { drawPlayer, drawSplat, drawBullet, } from '../draw'\n\nexport const drawAllPlayers = (splatRef, bulletRef, playerRef, splatAnimationRef, players, p_x, p_y, team) => {\n    // var splatRefContext = splatRef.getContext(\"2d\");\n    // splatRefContext.clearRect(0, 0, splatRef.width, splatRef.height);\n\n    var bulletRefContext = bulletRef.getContext(\"2d\");\n    bulletRefContext.clearRect(0, 0, bulletRef.width, bulletRef.height);\n\n    var playerRefContext = playerRef.getContext(\"2d\");\n    playerRefContext.clearRect(0, 0, playerRef.width, playerRef.height);\n\n    var splatAnimationRefContext = splatAnimationRef.getContext(\"2d\");\n    splatAnimationRefContext.clearRect(0, 0, splatAnimationRef.width, splatAnimationRef.height);\n\n    // context.clearRect(0, 0, c.width, c.height);\n\n    var l = players.length\n    var isTeamMate = 0;\n    for (var p = 0; p < l; ++p) {\n        if(players[p].playerTeam === team) isTeamMate = 1;\n        drawPlayer(playerRef, splatAnimationRef, players[p], (p === l-1)? 1:0 , isTeamMate);\n        // drawSplat(this.splatRef, this.splatAnimationRef, this.playerData.splats, this.playerData.playerColor, this.playerData.playerAngle, this.playerData.playerPosition);\n        drawSplat(splatRef, splatAnimationRef, players[p].splats, players[p].playerColor,  players[p].playerAngle,  players[p].playerPosition, p_x, p_y);\n\n        // drawBullet(this.bulletRef, this.playerData.bullets, this.playerData.playerColor);\n        drawBullet(bulletRef,  players[p].bullets, players[p].playerColor, p_x, p_y);\n    }\n}  \n","import Colors from './ColorSets'\n\nvar PINK = new Colors(\"#ff1493\", \"#e72dc2\", \"#d467a5\");\nvar BLUE = new Colors(\"#02fffc\", \"#44afec\", \"#84d1e4\");\nvar GREEN = new Colors(\"#25ff5d\", \"#44ec6b\", \"#82db8a\");\nvar PURPLE = new Colors(\"#866aff\", \"#8744ec\", \"#c793e5\");\n\n// var PINK = new Colors([255,20,147,1],[231,45,194,1],[212,103,165,1]);\n\nexport const COLOR_ASSET = [PINK, BLUE, GREEN, PURPLE];\n\n","export const weapons = {\n    splatterShot_v1: {\n        main: {\n            type: 0, // 0 for one line gun\n            maxShootDistance: 400,\n            bulletSpeed: 30,\n            fireSpeed: 200, //cd time(ms) for one shot\n            fireInkCost: 5,\n            maxError: 20,\n            gunLength: 25,\n            splatSize: 75,\n            splatDamage: 35,\n            splatShapeId: [0, 1, 2],\n        },\n        sub: {},\n        price: 1000,\n    }\n}","export const getKeyDownState = (e, state) => {\n    switch (e.key) {\n        case 'w':\n        case 'W':\n        case 'ArrowUp':\n\n            state.playerMoveDirection.y = -1;\n            state.keyStrokeState.up = 1;\n            break;\n\n        case 's':\n        case 'S':\n        case 'ArrowDown':\n\n            state.playerMoveDirection.y = 1;\n            state.keyStrokeState.down = 1;\n            break;\n\n\n        case 'a':\n        case 'A':\n        case 'ArrowLeft':\n\n            state.playerMoveDirection.x = -1;\n            state.keyStrokeState.left = 1;\n\n            break;\n\n        case 'd':\n        case 'D':\n        case 'ArrowRight':\n\n            state.playerMoveDirection.x = 1;\n            state.keyStrokeState.right = 1;\n\n            break;\n        case ' ':\n            state.keyStrokeState.space = 1;\n            break;\n        default:\n            break;\n    }\n}","export const getKeyUpState = (e, state) => {\n    switch (e.key) {\n        case 'w':\n        case 'W':\n        case 'ArrowUp':\n\n            if (state.keyStrokeState.down === 1) state.playerMoveDirection.y = 1;\n            else state.playerMoveDirection.y = 0;\n\n            state.keyStrokeState.up = 0;\n            break;\n\n        case 's':\n        case 'S':\n        case 'ArrowDown':\n\n            if (state.keyStrokeState.up === 1) state.playerMoveDirection.y = -1;\n            else state.playerMoveDirection.y = 0;\n\n            state.keyStrokeState.down = 0;\n            break;\n\n        case 'a':\n        case 'A':\n        case 'ArrowLeft':\n\n            if (state.keyStrokeState.right === 1) state.playerMoveDirection.x = 1;\n            else state.playerMoveDirection.x = 0;\n\n            state.keyStrokeState.left = 0;\n            break;\n\n        case 'd':\n        case 'D':\n        case 'ArrowRight':\n            if (state.keyStrokeState.left === 1) state.playerMoveDirection.x = -1;\n            else state.playerMoveDirection.x = 0;\n\n            state.keyStrokeState.right = 0;\n            break;\n\n        case ' ':\n            state.keyStrokeState.space = 0;\n            break;\n        default:\n            break;\n    }\n}","export const getMousePos = (event, state) => {\n  state.mouseClient.x = event.clientX;\n  state.mouseClient.y = event.clientY;\n}\n\nexport const calculatePlayerAngle = (x1, y1, x2, y2) => {\n  var comp = 0;\n  if ( y2-y1 >= 0) {\n      comp = 180;\n  }\n  const dividend = x2 - x1;\n  const divisor = y2 - y1;\n  const quotient = dividend / divisor;\n  return radiansToDegrees(Math.atan(quotient)) * -1 + comp;\n};\n\nexport const radiansToDegrees = radians => ((radians * 180) / Math.PI);","import { GAME_STATE } from '../enum'\nimport { battleField_1 } from '../field'\nimport { playerWidth, playerHeight } from '../draw'\n\nexport const updatePlayerPosition = (playerData, localPlayerData) => {\n  const field = battleField_1;\n  const objects = field.rectObjects;\n\n  if (localPlayerData.gameState === GAME_STATE.GAMING) {\n    const p_x = playerData.playerPosition.x;\n    const p_y = playerData.playerPosition.y;\n\n    var speed = localPlayerData.playerMoveSpeed;\n\n\n    const d_x = localPlayerData.playerMoveDirection.x;\n    const d_y = localPlayerData.playerMoveDirection.y;\n    if (d_x !== 0 && d_y !== 0) {\n      speed = speed / 1.414;\n    }\n\n    var new_x = p_x + d_x * speed;\n    var new_y = p_y + d_y * speed;\n\n    // check field range\n    new_x = Math.min(Math.max(new_x, field.fieldRange.xMin + playerWidth / 2), field.fieldRange.xMax - playerWidth / 2)\n    new_y = Math.min(Math.max(new_y, field.fieldRange.yMin + playerHeight / 2), field.fieldRange.yMax - playerHeight / 2)\n\n    // check objects\n    for (var i = 0; i < objects.length; ++i) {\n      const centerX = objects[i][1] + objects[i][3] / 2;\n      const centerY = objects[i][2] + objects[i][4] / 2;\n\n      if (Math.abs(new_x - centerX) < (objects[i][3] + playerWidth) / 2 && Math.abs(new_y - centerY) < (objects[i][4] + playerHeight) / 2) {\n        // collision occured\n        const temp_new_x = p_x < centerX ? centerX - (objects[i][3] + playerWidth) / 2 : centerX + (objects[i][3] + playerWidth) / 2;\n        const temp_new_y = p_y < centerY ? centerY - (objects[i][4] + playerHeight) / 2 : centerY + (objects[i][4] + playerHeight) / 2;\n\n        if (Math.abs(temp_new_x - p_x) < Math.abs(temp_new_y - p_y)) {\n          new_x = temp_new_x;\n        } else if (Math.abs(temp_new_x - p_x) > Math.abs(temp_new_y - p_y)) {\n          new_y = temp_new_y;\n        } else {\n          new_x = temp_new_x;\n          new_y = temp_new_y;\n        }\n\n      }\n    }\n\n    playerData.playerPosition.x = new_x;\n    playerData.playerPosition.y = new_y;\n    return playerData.playerPosition;\n  }\n}","\nimport shootSound from '../sounds/shoot/HitEffectiveCommon02.wav';\nimport noInkSound from '../sounds/shoot/BulletHitNoDamage.wav';\n\nimport { GAME_STATE, PLAYER_STATUS } from '../enum'\n\nimport { checkFieldCollision, checkPlayerCollision } from './index';\n\nvar fireAudio = new Audio(shootSound);\nfireAudio.volume = 0.5;\n\nvar noInkAudio = new Audio(noInkSound);\nnoInkAudio.volume = 0.5;\n\n// line = []\nvar lines = [];\nvar timeLog = 0;\nexport const getSplats = (playerData, localPlayerData, otherPlayers) => {\n    const angle = playerData.playerAngle;\n    const p_x = playerData.playerPosition.x;\n    const p_y = playerData.playerPosition.y;\n    const m_x = localPlayerData.mousePosition.x;\n    const m_y = localPlayerData.mousePosition.y;\n\n    var splats = [];\n    var aimPoints = [];\n    var bullets = [];\n    var inkConsumption = 0;\n\n    if (localPlayerData.gameState === GAME_STATE.GAMING && playerData.playerStatus !== PLAYER_STATUS.DEAD) {\n        // find shoot line\n        switch (playerData.playerWeapon.main.type) {\n            case 0:\n                var maxShootDistance = playerData.playerWeapon.main.maxShootDistance;\n                var bulletSpeed = playerData.playerWeapon.main.bulletSpeed;\n                var fireSpeed = playerData.playerWeapon.main.fireSpeed;\n                var fireInkCost = playerData.playerWeapon.main.fireInkCost;\n                var maxError = playerData.playerWeapon.main.maxError;\n                var gunLength = playerData.playerWeapon.main.gunLength;\n                var mouseLength = Math.pow(Math.pow(m_x - p_x, 2) + Math.pow(m_y - p_y, 2), 0.5);\n                var shootDistance = Math.min(mouseLength, maxShootDistance);\n\n                var d_x = p_x + Math.sin(angle / 180 * Math.PI) * shootDistance;\n                var d_y = p_y - Math.cos(angle / 180 * Math.PI) * shootDistance;\n\n                var fieldCheckPos_a = checkFieldCollision(p_x, p_y, d_x, d_y);\n                var playerCheckPos_a = checkPlayerCollision(p_x, p_y, fieldCheckPos_a[0], fieldCheckPos_a[1], otherPlayers, playerData.playerUid); \n       \n                aimPoints.push([playerCheckPos_a[0], playerCheckPos_a[1]]);\n\n                d_x = p_x + Math.sin(angle / 180 * Math.PI) * shootDistance + (Math.random() - 0.5) * 2 * maxError;\n                d_y = p_y - Math.cos(angle / 180 * Math.PI) * shootDistance + (Math.random() - 0.5) * 2 * maxError;\n\n                var g_x = p_x + Math.sin(angle / 180 * Math.PI) * gunLength;\n                var g_y = p_y - Math.cos(angle / 180 * Math.PI) * gunLength;\n\n                var fieldCheckPos = checkFieldCollision(g_x, g_y, d_x, d_y);\n                var playerCheckPos = checkPlayerCollision(g_x, g_y, fieldCheckPos[0], fieldCheckPos[1], otherPlayers, playerData.playerUid); \n                var c_x = playerCheckPos[0];\n                var c_y = playerCheckPos[1];\n\n                var bullet_length = Math.pow(Math.pow(c_x - g_x, 2) + Math.pow(c_y - g_y, 2), 0.5);\n\n                // line (type, current_point_x, current_point_y, end_point_x, end_point_y, d_x, d_y, fireFlag)\n                if (localPlayerData.keyStrokeState.space === 0 && localPlayerData.mouseDownState === 1 && localPlayerData.timeStamp - timeLog > fireSpeed) {\n                    timeLog = localPlayerData.timeStamp;\n                    if (localPlayerData.inkAmount - fireInkCost >= 0) {\n                        inkConsumption = fireInkCost;\n                        lines.push([0, g_x, g_y, c_x, c_y,\n                            (c_x - g_x) / bullet_length * bulletSpeed, (c_y - g_y) / bullet_length * bulletSpeed, 1]);\n                        // fireAudio.currentTime = 0;\n                        // fireAudio.play();\n                    } else {\n                        noInkAudio.currentTime = 0;\n                        noInkAudio.play();\n                    }\n                }\n                break;\n            case 1:\n\n                break;\n            default:\n                break;\n        }\n    }\n    // update line and get bullet\n    for (var l = 0; l < lines.length; ++l) {\n        lines[l][1] += lines[l][5];\n        lines[l][2] += lines[l][6];\n\n        // bullet = [type, x, y, fireFlag]\n        \n        if(lines[l][7] === 1){\n            bullets.push([0, lines[l][1], lines[l][2], 1]);\n            lines[l][7] = 0;\n        }else{\n            bullets.push([0, lines[l][1], lines[l][2], 0]);\n        }\n\n        // check if create splat\n        if (Math.abs(lines[l][1] - lines[l][3]) < Math.abs(lines[l][5]) || Math.abs(lines[l][2] - lines[l][4]) < Math.abs(lines[l][6])) {\n            var splat_angle = (Math.random() - 0.5) * 2 * Math.PI; // -Pi to Pi\n            var splatSize = playerData.playerWeapon.main.splatSize;\n            var splatDamage = playerData.playerWeapon.main.splatDamage;\n            var splatShapeId = playerData.playerWeapon.main.splatShapeId[Math.floor(Math.random() * playerData.playerWeapon.main.splatShapeId.length)];\n            var splatColorID = playerData.playerColorID;\n\n            // splat [splatShapeId, pos_x, pos_y, splatAngle, splatSize, splatDamage]\n            splats.push([splatShapeId, lines[l][3], lines[l][4], splat_angle, splatSize, splatDamage, splatColorID]);\n            lines.splice(l, 1);\n            --l;\n            continue;\n        }\n    }\n\n    playerData.bullets = bullets;\n    playerData.splats = splats;\n    return [aimPoints, inkConsumption];\n}","import {  PLAYER_STATUS } from '../enum'\n//var dive_counter = 0;\n\nfunction hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n    ] : null;\n}\n\nexport const getPlayerStatus = (c, playerData, localPlayerData) => {\n    const ownColor = hexToRgb(playerData.playerColor.main);\n    \n    var context = c.getContext('2d');\n    var p = context.getImageData(playerData.playerPosition.x - 25, playerData.playerPosition.y - 25, 51, 51).data;\n\n    var own_color_count = 0;\n    var empty_color_count = 0;\n\n    for (var i = 0; i < 11; ++i) {\n        for (var j = 0; j < 11; ++j) {\n            if (p[(51 * i * 5 + j * 5) * 4 + 3] !== 0) {\n                // not empty\n                if (p[(51 * i * 5 + j * 5) * 4] === ownColor[0] && p[(51 * i * 5 + j * 5) * 4 + 1] === ownColor[1] && p[(51 * i * 5 + j * 5) * 4 + 2] === ownColor[2]) {\n                    own_color_count += 1;\n                }\n            } else {\n                empty_color_count += 1;\n            }\n        }\n    }\n\n    var field_property = 0;// 0 for in space, 1 for in enemy, 2 for in own\n    if (empty_color_count / 121 < 0.5) {\n        field_property = own_color_count < (121 - own_color_count - empty_color_count) ? 1 : 2;\n    }\n\n    switch (field_property) {\n        case 0:\n            if (localPlayerData.mouseDownState === 1) {\n                playerData.playerStatus = PLAYER_STATUS.ATTACKING_SPACE;\n            }\n            else if (localPlayerData.keyStrokeState.space === 0) {\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\n                    playerData.playerStatus = PLAYER_STATUS.STANDING_SPACE;\n                } else {\n                    playerData.playerStatus = PLAYER_STATUS.WALKING_SPACE;\n                }\n            } else {\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\n                    playerData.playerStatus = PLAYER_STATUS.DIVING_SPACE;\n                } else {\n                    playerData.playerStatus = PLAYER_STATUS.SWIMMING_SPACE;\n                }\n            }\n            break;\n        case 1:\n            if (localPlayerData.mouseDownState === 1) {\n                playerData.playerStatus = PLAYER_STATUS.ATTACKING_ENEMY;\n            }\n            else if (localPlayerData.keyStrokeState.space === 0) {\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\n                    playerData.playerStatus = PLAYER_STATUS.STANDING_ENEMY;\n                } else {\n                    playerData.playerStatus = PLAYER_STATUS.WALKING_ENEMY;\n                }\n            } else {\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\n                    playerData.playerStatus = PLAYER_STATUS.DIVING_ENEMY;\n                } else {\n                    playerData.playerStatus = PLAYER_STATUS.SWIMMING_ENEMY;\n                }\n            }\n            break;\n\n        case 2:\n            if (localPlayerData.mouseDownState === 1) {\n                playerData.playerStatus = PLAYER_STATUS.ATTACKING_OWN;\n            }\n            else if (localPlayerData.keyStrokeState.space === 0) {\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\n                    playerData.playerStatus = PLAYER_STATUS.STANDING_OWN;\n                } else {\n                    playerData.playerStatus = PLAYER_STATUS.WALKING_OWN;\n                }\n            } else {\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\n                    playerData.playerStatus = PLAYER_STATUS.DIVING_OWN;\n                } else {\n                    playerData.playerStatus = PLAYER_STATUS.SWIMMING_OWN;\n                }\n            }\n            break;\n        default:\n            break;\n    }\n}\n\n// export const PLAYER_STATUS = {\n//     STANDING_OWN: 0,\n//     WALKING_OWN: 1,\n//     DIVING_OWN: 2,\n//     SWIMMING_OWN: 3,\n//     ATTACKING_OWN: 4,\n\n//     STANDING_SPACE: 5,\n//     WALKING_SPACE: 6,\n//     DIVING_SPACE: 7,\n//     SWIMMING_SPACE: 8,\n//     ATTACKING_SPACE: 9,\n\n//     STANDING_ENEMY: 10,\n//     WALKING_ENEMY: 11,\n//     DIVING_ENEMY: 12,\n//     SWIMMING_ENEMY: 13,\n//     ATTACKING_ENEMY: 14,\n//   };","import { GAME_STATE, PLAYER_STATUS } from '../enum'\nexport const getPlayerSpeed = (playerData, localPlayerData) => {\n    switch (playerData.playerStatus) {\n        case PLAYER_STATUS.STANDING_OWN: localPlayerData.playerMoveSpeed = 4; break;\n        case PLAYER_STATUS.WALKING_OWN: localPlayerData.playerMoveSpeed = 4; break;\n        case PLAYER_STATUS.DIVING_OWN: localPlayerData.playerMoveSpeed = 6; break;\n        case PLAYER_STATUS.SWIMMING_OWN: localPlayerData.playerMoveSpeed = 6; break;\n        case PLAYER_STATUS.ATTACKING_OWN: localPlayerData.playerMoveSpeed = 2.5; break;\n\n        case PLAYER_STATUS.STANDING_SPACE: localPlayerData.playerMoveSpeed = 3; break;\n        case PLAYER_STATUS.WALKING_SPACE: localPlayerData.playerMoveSpeed = 3; break;\n        case PLAYER_STATUS.DIVING_SPACE: localPlayerData.playerMoveSpeed = 1; break;\n        case PLAYER_STATUS.SWIMMING_SPACE: localPlayerData.playerMoveSpeed = 1; break;\n        case PLAYER_STATUS.ATTACKING_SPACE: localPlayerData.playerMoveSpeed = 1; break;\n\n        case PLAYER_STATUS.STANDING_ENEMY: localPlayerData.playerMoveSpeed = 1.5; break;\n        case PLAYER_STATUS.WALKING_ENEMY: localPlayerData.playerMoveSpeed = 1.5; break;\n        case PLAYER_STATUS.DIVING_ENEMY: localPlayerData.playerMoveSpeed = 1.5; break;\n        case PLAYER_STATUS.SWIMMING_ENEMY: localPlayerData.playerMoveSpeed = 1.5; break;\n        case PLAYER_STATUS.ATTACKING_ENEMY: localPlayerData.playerMoveSpeed = 0.5; break;\n        case PLAYER_STATUS.DEAD: localPlayerData.playerMoveSpeed = 0; break;\n        \n        default: localPlayerData.playerMoveSpeed = 0; break;\n    }\n    switch (playerData.gameState) {\n        case GAME_STATE.FREEZE: localPlayerData.playerMoveSpeed = 0; break;\n        case GAME_STATE.FINISH: localPlayerData.playerMoveSpeed = 0; break;\n        default: break;\n    }\n}","import { PLAYER_STATUS } from '../enum'\nexport const getInkAmount = (inkConsumption, playerData, localPlayerData) => {\n    var new_inkAmount = localPlayerData.inkAmount;\n    var new_playerHealth = localPlayerData.playerHealth;\n\n    new_inkAmount = new_inkAmount - inkConsumption;\n\n    var restoreInk = 0;\n    var restoreHP = 0;\n    switch (playerData.playerStatus) {\n        case PLAYER_STATUS.STANDING_OWN: restoreInk = 0.1; restoreHP = 0.2; break;\n        case PLAYER_STATUS.WALKING_OWN: restoreInk = 0.1; restoreHP = 0.2; break;\n        case PLAYER_STATUS.DIVING_OWN: restoreInk = 0.5; restoreHP = 0.8; break;\n        case PLAYER_STATUS.SWIMMING_OWN: restoreInk = 1; restoreHP = 1.5; break;\n        case PLAYER_STATUS.ATTACKING_OWN: restoreInk = 0.1; restoreHP = 0.2; break;\n\n        case PLAYER_STATUS.STANDING_SPACE: restoreInk = 0.1; restoreHP = 0.1; break;\n        case PLAYER_STATUS.WALKING_SPACE: restoreInk = 0.1; restoreHP = 0.1; break;\n        case PLAYER_STATUS.DIVING_SPACE: restoreInk = 0.1; restoreHP = 0.1; break;\n        case PLAYER_STATUS.SWIMMING_SPACE: restoreInk = 0.1; restoreHP = 0.1; break;\n        case PLAYER_STATUS.ATTACKING_SPACE: restoreInk = 0.1; restoreHP = 0.1; break;\n\n        case PLAYER_STATUS.STANDING_ENEMY: restoreInk = 0.1; restoreHP = 0; break;\n        case PLAYER_STATUS.WALKING_ENEMY: restoreInk = 0.1; restoreHP = 0; break;\n        case PLAYER_STATUS.DIVING_ENEMY: restoreInk = 0.1; restoreHP = 0; break;\n        case PLAYER_STATUS.SWIMMING_ENEMY: restoreInk = 0.1; restoreHP = 0; break;\n        case PLAYER_STATUS.ATTACKING_ENEMY: restoreInk = 0.1; restoreHP = 0; break;\n        default: restoreInk = 0; restoreHP = 0; break;\n    }\n\n    new_inkAmount = new_inkAmount + restoreInk;\n    new_inkAmount = Math.max(Math.min(new_inkAmount, 100), 0);\n\n    new_playerHealth = new_playerHealth + restoreHP;\n    new_playerHealth = Math.max(Math.min(new_playerHealth, 100), 0);\n\n    // localPlayerData.inkAmount = new_inkAmount;\n    localPlayerData.playerHealth = new_playerHealth;\n\n    return [new_inkAmount, new_playerHealth];\n}","// export const getLineIntersection = (l1_x1, l1_y1, l1_x2, l1_y2, l2_x1, l2_y1, l2_x2, l2_y2) => {\n//     var l1_m = (l1_y2 - l1_y1) / (l1_x2 - l1_x1);\n//     var l2_m = (l2_y2 - l2_y1) / (l2_x2 - l2_x1);\n//     if (Number.isFinite(l1_m)) l1_m = 1e10;\n//     if (Number.isFinite(l2_m)) l2_m = 1e10;\n//     const cal_x = (l1_m * l1_x1 - l2_m * l2_x1 + l2_y1 - l1_y1) / (l1_m - l2_m);\n//     const cal_y = (l1_y1 / l1_m - l2_y1 / l2_m + l2_x1 - l1_x1) / (1 / l1_m - 1 / l2_m);\n\n//     // var cal_y = l1_m * (x - l1_x1) + l1_y1;\n//     // var cal_x = (y - l1_y1) / l1_m + l1_x1;\n\n//     // console.log(\"x:\", x);\n//     // console.log(\"y:\", y);\n\n//     // var cal_y = 0;\n//     // var cal_x = 0;\n\n//     var com_1_max = l1_x1 > l1_x2 ? l1_x1 : l1_x2;\n//     var com_1_min = l1_x1 < l1_x2 ? l1_x1 : l1_x2;\n//     var com_2_max = l1_y1 > l1_y2 ? l1_y1 : l1_y2;\n//     var com_2_min = l1_y1 < l1_y2 ? l1_y1 : l1_y2;\n//     if (cal_x <= com_1_max && cal_x >= com_1_min && cal_y <= com_2_max && cal_y >= com_2_min) {\n//         // in line 1\n//         com_1_max = l2_x1 > l2_x2 ? l2_x1 : l2_x2;\n//         com_1_min = l2_x1 < l2_x2 ? l2_x1 : l2_x2;\n//         com_2_max = l2_y1 > l2_y2 ? l2_y1 : l2_y2;\n//         com_2_min = l2_y1 < l2_y2 ? l2_y1 : l2_y2;\n//         if (cal_x <= com_1_max && cal_x >= com_1_min && cal_y <= com_2_max && cal_y >= com_2_min) {\n//             // in line 2\n//             return [cal_x, cal_y];\n//         }\n//     }\n//     // return [null, null];\n//     return [cal_x, cal_y];\n// }\n\nexport const getLineIntersection = (x1, y1, x2, y2, x3, y3, x4, y4) =>  {\n\n    // Check if none of the lines are of length 0\n      if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\n          return false;\n      }\n  \n      var denominator = ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n  \n    // Lines are parallel\n      if (denominator === 0) {\n          return false;\n      }\n  \n      let ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\n      let ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator;\n  \n    // is the intersection along the segments\n      if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n          return false;\n      }\n  \n    // Return a object with the x and y coordinates of the intersection\n      let x = x1 + ua * (x2 - x1);\n      let y = y1 + ua * (y2 - y1);\n  \n      return {x:x, y:y};\n  }","import { playerWidth, playerHeight } from '../draw'\nimport { getLineIntersection } from './getLineIntersection'\nimport { battleField_1 } from '../field'\nimport { GAME_STATE, PLAYER_STATUS } from '../enum'\n\nexport const checkFieldCollision = (p_x, p_y, d_x, d_y) => {\n    const field = battleField_1;\n\n\n    var c_x = d_x;\n    var c_y = d_y;\n\n    var realShootDistance = Math.pow(Math.pow(c_x - p_x, 2) + Math.pow(c_y - p_y, 2), 0.5);\n    var tempShootDistance;\n    // check rectobjects\n    var objects = field.rectObjects;\n    for (var j = 0; j < objects.length; ++j) {\n        const o_x1 = objects[j][1];\n        const o_y1 = objects[j][2];\n        const o_x2 = objects[j][1] + objects[j][3];\n        const o_y2 = objects[j][2] + objects[j][4];\n\n        var interSections = [];\n\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x1, o_y2));\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x2, o_y1));\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x2, o_y1, o_x2, o_y2));\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y2, o_x2, o_y2));\n\n        for (var i = 0; i < interSections.length; ++i) {\n            if (interSections[i] !== false) {\n                tempShootDistance = Math.pow(Math.pow(interSections[i].x - p_x, 2) + Math.pow(interSections[i].y - p_y, 2), 0.5);\n                if (tempShootDistance < realShootDistance) {\n                    realShootDistance = tempShootDistance;\n                    c_x = interSections[i].x;\n                    c_y = interSections[i].y;\n                }\n            }\n        }\n    }\n\n    // check polyobjects\n    objects = field.polyObjects;\n    for (var j = 0; j < objects.length; ++j) {\n        const n = objects[j].length;\n        var interSection;\n\n        for (var i = 1; i < n; ++i) {\n            if (i === n - 1) {\n                interSection = getLineIntersection(p_x, p_y, c_x, c_y, objects[j][i][0], objects[j][i][1], objects[j][1][0], objects[j][1][1]);\n                if (interSection !== false) {\n                    tempShootDistance = Math.pow(Math.pow(interSection.x - p_x, 2) + Math.pow(interSection.y - p_y, 2), 0.5);\n                    if (tempShootDistance < realShootDistance) {\n                        realShootDistance = tempShootDistance;\n                        c_x = interSection.x;\n                        c_y = interSection.y;\n                    }\n                }\n            } else {\n                interSection = getLineIntersection(p_x, p_y, c_x, c_y, objects[j][i][0], objects[j][i][1], objects[j][i + 1][0], objects[j][i + 1][1]);\n                // console.log(interSection);\n\n                if (interSection !== false) {\n                    tempShootDistance = Math.pow(Math.pow(interSection.x - p_x, 2) + Math.pow(interSection.y - p_y, 2), 0.5);\n                    if (tempShootDistance < realShootDistance) {\n                        realShootDistance = tempShootDistance;\n                        c_x = interSection.x;\n                        c_y = interSection.y;\n                    }\n                }\n            }\n        }\n    }\n\n    // check fieldRange\n    const o_x1 = field.fieldRange.xMin;\n    const o_y1 = field.fieldRange.yMin;\n    const o_x2 = field.fieldRange.xMax;\n    const o_y2 = field.fieldRange.yMax;\n\n    var interSections = [];\n\n    interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x1, o_y2));\n    interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x2, o_y1));\n    interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x2, o_y1, o_x2, o_y2));\n    interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y2, o_x2, o_y2));\n\n    for (var i = 0; i < interSections.length; ++i) {\n        if (interSections[i] !== false) {\n            const tempShootDistance = Math.pow(Math.pow(interSections[i].x - p_x, 2) + Math.pow(interSections[i].y - p_y, 2), 0.5);\n            if (tempShootDistance < realShootDistance) {\n                realShootDistance = tempShootDistance;\n                c_x = interSections[i].x;\n                c_y = interSections[i].y;\n            }\n        }\n    }\n\n    return [c_x, c_y];\n}\n\n// players = [..., [pos_x, pos_y], ...]\nexport const checkPlayerCollision = (p_x, p_y, c_x, c_y, players, own_uid) => {\n    for (var j = 0; j < players.length; ++j) {\n        if (players[j].playerUid !== own_uid && players[j].playerStatus !== PLAYER_STATUS.DEAD) {\n            const o_x1 = players[j].playerPosition.x - playerWidth / 2;\n            const o_y1 = players[j].playerPosition.y - playerHeight / 2;\n            const o_x2 = players[j].playerPosition.x + playerWidth / 2;\n            const o_y2 = players[j].playerPosition.y + playerHeight / 2;\n\n            var interSections = [];\n            interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x1, o_y2));\n            interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x2, o_y1));\n            interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x2, o_y1, o_x2, o_y2));\n            interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y2, o_x2, o_y2));\n\n            var realShootDistance = 10000;\n            for (var i = 0; i < interSections.length; ++i) {\n                if (interSections[i] !== false) {\n                    var tempShootDistance = Math.pow(Math.pow(interSections[i].x - p_x, 2) + Math.pow(interSections[i].y - p_y, 2), 0.5);\n                    if (tempShootDistance < realShootDistance) {\n                        realShootDistance = tempShootDistance;\n                        c_x = interSections[i].x;\n                        c_y = interSections[i].y;\n                    }\n                }\n            }\n        }\n    }\n    return [c_x, c_y];\n}","import { battleField_1 } from '../field'\nimport { GAME_STATE } from '../enum'\n\nfunction hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n    ] : null;\n}\n\n\nexport const getGameResult = (fieldRef, splatRef, playerData, localPlayerData)=>{\n    if (localPlayerData.gameState === GAME_STATE.FREEZE) {\n\n        var sxt = splatRef.getContext('2d');\n        sxt.drawImage(fieldRef, 0, 0);\n\n        const fildWidth = battleField_1.fieldRange.xMax - battleField_1.fieldRange.xMin;\n        const fildHeight = battleField_1.fieldRange.yMax - battleField_1.fieldRange.yMin;\n        var result = sxt.getImageData(battleField_1.fieldRange.xMin, battleField_1.fieldRange.yMin, fildWidth, fildHeight).data;\n\n        var own_color = hexToRgb(playerData.playerColor.main);\n        var enemyColor = hexToRgb(localPlayerData.enemyColor.main);\n        \n        var space_count = 0;\n        var own_field_count = 0;\n        var enemy_field_count = 0;\n\n        for (var i = 0; i < fildHeight ; ++i){\n            for (var j = 0; j < fildWidth ; ++j){\n                // console.log([result[(i*fildWidth+j)*4], result[(i*fildWidth+j)*4+1], result[(i*fildWidth+j)*4+2], result[(i*fildWidth+j)*4+3] ])\n                if( result[(i*fildWidth+j)*4] === 0 && result[(i*fildWidth+j)*4+1] === 0 && result[(i*fildWidth+j)*4+2] === 0&& result[(i*fildWidth+j)*4+3] === 0){\n                    space_count +=1;\n                }\n                else if( result[(i*fildWidth+j)*4] === own_color[0] && result[(i*fildWidth+j)*4+1] === own_color[1] && result[(i*fildWidth+j)*4+2] === own_color[2]){\n                    own_field_count+=1;\n                }else if( result[(i*fildWidth+j)*4] === enemyColor[0] && result[(i*fildWidth+j)*4+1] === enemyColor[1] && result[(i*fildWidth+j)*4+2] === enemyColor[2]){\n                    enemy_field_count+=1;\n                }\n            }\n        }   \n        \n        const own_result  = own_field_count/(space_count+own_field_count+enemy_field_count);\n        const enem_result  = enemy_field_count/(space_count+own_field_count+enemy_field_count);\n        \n        const teamA_result = playerData.playerTeam === 'A'? own_result:enem_result;\n        const teamB_result = playerData.playerTeam === 'B'? own_result:enem_result;\n        return { A:teamA_result,  B:teamB_result};\n    }\n}\n\n // var output = this.splatRef.toDataURL();\n        // var image = this.splatRef.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\"); ","import { playerWidth } from '../draw'\nimport {  PLAYER_STATUS } from '../enum'\n\nexport const getPlayerHealth = (playerData, localPlayerData, players) => {\n    if (playerData.playerStatus !== PLAYER_STATUS.DEAD) {\n        const p_x = playerData.playerPosition.x;\n        const p_y = playerData.playerPosition.y;\n\n        for (var p = 0; p < players.length; ++p) {\n            var splats = players[p].splats;\n            for (var s = 0; s < splats.length; ++s) {\n                // splat [splatShapeId, pos_x, pos_y, splatAngle, splatSize, splatDamage]\n                var distance = Math.pow(Math.pow(p_x - splats[s][1], 2) + Math.pow(p_y - splats[s][2], 2), 0.5);\n                var damage = 0;\n                const minDistance = Math.abs(splats[s][4] - playerWidth / 2)\n                const maxDistance = (splats[s][4] + playerWidth / 2);\n\n                if (distance > maxDistance) {\n                    damage = 0;\n                } else if (distance < minDistance) {\n                    damage = splats[s][5];\n                } else {\n                    damage = (distance - minDistance) / (maxDistance - minDistance) * splats[s][5];\n                }\n                localPlayerData.playerHealth = localPlayerData.playerHealth - damage;\n\n\n            }\n            if (localPlayerData.playerHealth <= 0) {\n                //killed\n                localPlayerData.playerHealth = 0;\n                playerData.playerStatus = PLAYER_STATUS.DEAD;\n\n                return { killerUid: players[p].playerUid, killerName: players[p].playerName, killedUid: playerData.playerUid, killedName: playerData.playerName };\n            }\n\n        }\n    }\n    return null;\n}","import React from 'react';\nimport './inkBar.css';\nimport inkBarSVG from '../images/inkBar.svg'\nimport ReactSVG from 'react-svg'\nimport { COLOR_ASSET } from './ColorAssets'\n\n\nclass InkBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inkColor: this.props.inkColor,\n            inkAmount: this.props.inkAmount,\n            inkBarPosition: { x: window.innerWidth-80, y: window.innerHeight - 400 },\n        }\n\n        console.log(this.state.inkColor)\n    }\n    hexToRgb(hex) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? [\n            parseInt(result[1], 16),\n            parseInt(result[2], 16),\n            parseInt(result[3], 16)\n        ] : null;\n    }\n    render() {\n        const inkBarStyle = {\n            //fill: this.state.inkColor.main,\n            stroke: 'none',\n        };\n        const inkBarGlow = {\n            fill: this.state.inkColor.main,\n            filter: \"drop-shadow(0px 0px 5px \" + this.state.inkColor.glow + \")\"\n        }\n        const inkBarBaseStyle = {\n            fill: 'rgba(50,50,50,0.3)',\n            'stroke-width': 5,\n            stroke: '#888888',\n        };\n        return (\n            <g>\n                {/* <text className=\"inkBarNum\" x={this.state.inkBarPosition.x} y={this.state.inkBarPosition.y}>\n                    {this.props.inkAmount}\n                </text> */}\n                {/*<rect className=\"inkBarBase\" x={this.state.inkBarPosition.x} y={this.state.inkBarPosition.y}\n                    width=\"400\" height=\"50\" style={inkBarBaseStyle} />\n                */}\n                <rect className=\"inkBar\" x={this.state.inkBarPosition.x } y={this.state.inkBarPosition.y + 3.4*(100-this.props.inkAmount)}\n                    width=\"50\" height={3.4 * this.props.inkAmount} style={inkBarGlow} />\n                <svg width=\"1000\" height=\"1000\" style={inkBarStyle} x={this.state.inkBarPosition.x - 10} y={this.state.inkBarPosition.y-330}>\n                    <image href={inkBarSVG} width=\"70\" height=\"1000\" style={inkBarStyle}/>\n                </svg>\n            </g>\n\n        );\n    }\n}\n\nexport default InkBar;","import React, {Component} from 'react'\n\n\nclass HP extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            HPPosition: { x: window.innerWidth-140, y: window.innerHeight - 260 },\n        }\n    }\n    render(){\n        var Hpcolor = this.props.hp < 30? \"#CC0033\": \"#FFFFFF\"\n        var hp = parseInt(this.props.hp)\n        return(\n            <g>\n                <text x={this.state.HPPosition.x-10} y={this.state.HPPosition.y-30} width=\"45\"\n                    style={{fill: Hpcolor, fontSize: \"30px\"}}>\n                    {hp}\n                </text>\n                <text x={this.state.HPPosition.x} y={this.state.HPPosition.y-10} width=\"30\">\n                    /100\n                </text>\n                <rect x={this.state.HPPosition.x} y={this.state.HPPosition.y + 2 * (100 - hp)}\n                    width=\"30\" height={2 * hp + 5} style={{fill: Hpcolor}} />\n            </g>\n        )\n    }\n}\n\nexport default HP","import React from 'react';\nimport './Game.css';\nimport { drawPlayer, drawField, drawSplat, drawAimPoint, drawBullet, drawAllPlayers, } from '../draw'\nimport { COLOR_ASSET } from './ColorAssets'\nimport { weapons } from '../weapons'\nimport { Redirect } from 'react-router'\nimport { battleField_1 } from '../field'\n\nimport { GAME_STATE, PLAYER_STATUS } from '../enum'\nimport {\n    getKeyUpState,\n    getKeyDownState,\n    getMousePos,\n    calculatePlayerAngle,\n    updatePlayerPosition,\n    getSplats,\n    getPlayerStatus,\n    getPlayerSpeed,\n    getInkAmount,\n    getGameResult,\n    getPlayerHealth,\n} from '../utils'\n\nimport InkBar from './inkBar';\nimport HP from './HP'\nimport fightSound from '../sounds/Fight.mp3'\nimport whistle from '../sounds/whistle.wav'\n\n\nvar audio = new Audio(fightSound);\naudio.volume = 0.5;\n\nvar audio2 = new Audio(whistle);\naudio.volume = 0.3;\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        // data that most emit to server\n        this._ismount = false;\n        \n        this.playerData = {\n            roomId: this.props.roomId,\n            teamColor: this.props.teamColor,\n\n            playerName: this.props.name,\n            playerUid: this.props.uid,\n            playerTeam: this.props.team,\n\n            playerColor: COLOR_ASSET[this.props.teamColor[this.props.team]],\n            playerColorID: this.props.teamColor[this.props.team],\n\n            playerPosition: { x: 100, y: 100 },\n            playerAngle: 0,\n            playerStatus: PLAYER_STATUS.STANDING_SPACE,\n            playerWeapon: weapons.splatterShot_v1,\n\n            bullets: [],\n            splats: [],\n        };\n\n        // data that only holded by local front end\n        this.localPlayerData = {\n            spawnPosition: { x: 500, y: 500 },\n            respawnTime: 2000,\n            gameState: GAME_STATE.GAMING,\n            roomId: this.props.roomId,\n\n            playerMoveSpeed: 5,\n            playerMoveDirection: { x: 0, y: 0 },\n            inkAmount: 100,\n            playerHealth: 100,\n            keyStrokeState: { left: 0, right: 0, up: 0, down: 0, space: 0, g: 0 },\n            mousePosition: { x: 0, y: 0 },\n            mouseClient: { x: 0, y: 0 },\n            mouseDownState: 0,\n\n            timeStamp: Date.now(), // Date.now()\n            gameTime: Date.now(), // remaining time for the game\n\n            deadTime: 0, //record deadtime\n            timeColor: \"#FFFFFF\",\n\n            enemyColor: this.props.team === 'A' ? COLOR_ASSET[this.props.teamColor['B']] : COLOR_ASSET[this.props.teamColor['A']],\n            result: { teamA: 0, teamB: 0 }\n        }\n\n        //data that recieved from the server\n        this.otherPlayerData = [];\n\n        this.calculateResultFlag = 0;\n        this.mouseScale = 1;\n        this.updateGameIntervalId=0;\n        this.state = {\n            gameBoardWidth: 1600,\n            gameBoardHeight: 900,\n            cameraSize: 1000,\n\n            playerPosition: { x: 100, y: 100 }, // to update camera position \n            inkAmount: 100, // to update inkbar \n            healthAmount: 100,\n            anouncement: ['Nothing~~', 'thissss'], //到時候再刪掉\n            gameResult: { A: 0, B: 0 },\n        }\n\n        this.props.socket.emit('enterGame', { ...this.playerData });\n\n        this.props.socket.on('updateGame', (data) => {\n            this.otherPlayerData = data.allPlayers.filter(p => p.playerUid !== this.playerData.playerUid);\n        })\n\n        this.props.socket.on('getGameTime', (data) => {\n            this.localPlayerData.gameTime = data.gameTime;\n        })\n\n    }\n\n    onKeyDown = e => {\n        getKeyDownState(e, this.localPlayerData);\n    }\n\n    onKeyUp = e => {\n        getKeyUpState(e, this.localPlayerData);\n    }\n\n    trackMouse = e => {\n        getMousePos(e, this.localPlayerData);\n    }\n\n    mouseDown = e => {\n        this.localPlayerData.mouseDownState = 1;\n    }\n    mouseUp = e => {\n        this.localPlayerData.mouseDownState = 0;\n    }\n\n    updateGame = () => {\n        //console.log('update game')\n        if (this.localPlayerData.gameState === GAME_STATE.GAMING || this.localPlayerData.gameState === GAME_STATE.FREEZE) {\n            // drawOtherPlayers(this.splatRef, this.bulletRef, this.playerRef, this.splatAnimationRef, this.otherPlayerData);\n\n            // measure and update screen scale\n            const windowHeight = window.innerHeight;\n            const windowWidth = window.innerWidth;\n            this.mouseScale = windowWidth > windowHeight ? this.state.cameraSize / windowWidth : this.state.cameraSize / windowHeight;\n\n            // get and update mouse position\n            var canvas = this.groundRef;\n            var rect = canvas.getBoundingClientRect();\n            this.localPlayerData.mousePosition = {\n                x: (this.localPlayerData.mouseClient.x - rect.left) * this.mouseScale,\n                y: (this.localPlayerData.mouseClient.y - rect.top) * this.mouseScale\n            };\n\n            // get and update player angle\n            this.playerData.playerAngle = calculatePlayerAngle(\n                this.playerData.playerPosition.x, this.playerData.playerPosition.y,\n                this.localPlayerData.mousePosition.x, this.localPlayerData.mousePosition.y\n            );\n\n            // get and update new player status according field property\n            if (this.playerData.playerStatus !== PLAYER_STATUS.DEAD) {\n                getPlayerStatus(this.splatRef, this.playerData, this.localPlayerData);\n            }\n            // get and update player health according to \n            var killed_msg = getPlayerHealth(this.playerData, this.localPlayerData, this.otherPlayerData);\n            if (killed_msg !== null) {\n                //emit killed_msg\n                // killed_msg = { killerUid: players[p].playerUid, killerName: players[p].playerName, killedUid: playerData.playerUid, killedName:playerData.playerName }\n                console.log(killed_msg);\n                this.localPlayerData.deadTime = this.localPlayerData.timeStamp;\n            }\n\n            //if dead, wait to respawn\n            // console.log(this.playerData.playerStatus)\n            if (this.playerData.playerStatus === PLAYER_STATUS.DEAD && this.localPlayerData.timeStamp - this.localPlayerData.deadTime >= this.localPlayerData.respawnTime) {\n                // respawn \n                this.playerData.playerStatus = PLAYER_STATUS.STANDING_SPACE;\n                this.playerData.playerPosition = this.localPlayerData.spawnPosition;\n                this.localPlayerData.inkAmount = 100;\n                this.localPlayerData.playerHealth = 100;\n            }\n\n            // update player speed \n            getPlayerSpeed(this.playerData, this.localPlayerData);\n\n            // get player position\n            const new_playerPosition = updatePlayerPosition(this.playerData, this.localPlayerData);\n\n            if (this.localPlayerData.gameState === GAME_STATE.FREEZE) {\n                var filedWidth = this.state.gameBoardWidth;\n                var filedHeight = this.state.gameBoardHeight;\n\n                this.setState({ cameraSize: filedWidth > filedHeight ? filedWidth : filedHeight });\n                this.setState({ playerPosition: { x: filedWidth / 2, y: filedHeight / 2 } });\n                audio.pause();\n                // audio2.currentTime = 0;\n                audio2.play()\n            } else {\n                this.setState({ playerPosition: new_playerPosition });\n            }\n\n            // get splat (include draw bullet)\n            var [aimPoints, inkConsumption] = getSplats(this.playerData, this.localPlayerData, this.otherPlayerData);\n\n            //get and update ink amount  ******* and health \n            const new_inkAmountNhealth = getInkAmount(inkConsumption, this.playerData, this.localPlayerData);\n            this.setState({ inkAmount: new_inkAmountNhealth[0], healthAmount: new_inkAmountNhealth[1] });\n\n            this.otherPlayerData.push(this.playerData);\n            //console.log(this.otherPlayerData);\n            drawAllPlayers(this.splatRef, this.bulletRef, this.playerRef, this.splatAnimationRef, this.otherPlayerData, \n                this.playerData.playerPosition.x, this.playerData.playerPosition.y, this.playerData.playerTeam);\n\n            // draw aim point\n            drawAimPoint(this.aimPointRef, this.playerData.playerPosition, this.localPlayerData.mousePosition, this.playerData.playerAngle, aimPoints);\n\n            var temp = this.state.anouncement;\n            if (Math.floor(Math.random() * 20) === 0/* 這邊的random只是為了方便測試，要改成if收到新訊息*/) {\n\n                temp.push('new');\n                this.setState({ anouncement: temp });\n\n                setTimeout(() => {\n                    this.setState((prevState) => (\n                        { anouncement: prevState.anouncement.splice(1) }\n                    ))\n                }, 3000);\n            }\n        \n\n        }\n        else {\n            this.setState({ cameraSize: 2000 });\n        }\n        // update time\n        this.localPlayerData.timeStamp = Date.now();\n        if (this.localPlayerData.gameTime < 10) this.localPlayerData.timeColor = \"#c71585\";\n        if (this.localPlayerData.gameTime <= 0) {\n            this.localPlayerData.gameState = GAME_STATE.FREEZE;\n\n            if (this.localPlayerData.gameTime <= -5) {\n                this.localPlayerData.gameState = GAME_STATE.FINISH;\n                clearInterval(this.updateGameIntervalId);\n            }\n        }\n\n        this.props.socket.emit('updateGame', { ...this.playerData });\n        \n        if (this.localPlayerData.gameState === GAME_STATE.FREEZE && this.calculateResultFlag === 0) {\n            var gameResult = getGameResult(this.fieldRef, this.splatRef, this.playerData, this.localPlayerData);\n            this.setState({ gameResult: gameResult });\n            this.calculateResultFlag = 1;\n            console.log(this.state.gameResult);\n        }\n    }\n\n    componentDidMount = () => {\n        this._ismount = true;\n        window.addEventListener(\"keyup\", this.onKeyUp);\n        window.addEventListener(\"keydown\", this.onKeyDown);\n        window.addEventListener(\"mousemove\", this.trackMouse);\n        window.addEventListener(\"mousedown\", this.mouseDown);\n        window.addEventListener(\"mouseup\", this.mouseUp);\n        this.updateGameIntervalId = setInterval(() => {\n            this.updateGame();\n        }, 50);\n        drawField(this.fieldRef);\n        audio.currentTime = 0;\n        audio.play();\n    }\n\n    componentWillUnmount = () => {\n        this._ismount = false;\n        clearInterval(this.interval);\n        window.removeEventListener(\"keyup\", this.onKeyUp);\n        window.removeEventListener(\"keydown\", this.onKeyDown);\n        window.removeEventListener(\"mousemove\", this.trackMouse);\n        window.removeEventListener(\"mousedown\", this.mouseDown);\n        window.removeEventListener(\"mouseup\", this.mouseUp);\n        audio.pause()\n        audio2.pause()\n        \n     }\n\n    render() {\n        let gameTime = this.localPlayerData.gameTime > 0 ? this.localPlayerData.gameTime : 0;\n        // console.log(this.otherPlayerData)\n        //turn the this.state.anouncement to <text />...\n        var anouncement = [];\n        for (var i = 0; i < this.state.anouncement.length; ++i) {\n            anouncement.push(\n                <text id=\"anouncement\" x=\"50\" y={40 + 30 * i} width=\"300\" height=\"200\" key={i}>\n                {this.state.anouncement[i]}\n                </text>\n            )\n        }\n\n        var timesUp = ''\n\n        if (this.localPlayerData.gameState === GAME_STATE.FREEZE) {\n            timesUp = (\n                <div id='timesUp'>\n                    <h1>Time's Up!</h1>\n                </div>\n            )\n        }\n\n\n        if (this.localPlayerData.gameState === GAME_STATE.GAMING || this.localPlayerData.gameState === GAME_STATE.FREEZE) {\n            return (\n                <div id=\"game-container\">\n                    {timesUp}\n                    <svg id=\"svg-container\"\n                        width={Math.max(window.innerWidth, window.innerHeight)}\n                        height={Math.max(window.innerWidth, window.innerHeight)}\n                        preserveAspectRatio=\"xMidYMid slice\"\n                        viewBox={\n                            [this.state.cameraSize / -2 + this.state.playerPosition.x,\n                            this.state.cameraSize / -4 + this.state.playerPosition.y,\n                            this.state.cameraSize,\n                            this.state.cameraSize]}>\n                        <foreignObject x=\"0\" y=\"0\" width=\"10000\" height=\"10000\">\n                            <canvas id=\"groundLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.groundRef = el} />\n                            <canvas id=\"splatLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.splatRef = el} />\n                            <canvas id=\"splatAnimationLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.splatAnimationRef = el} />\n                            <canvas id=\"fieldLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.fieldRef = el} />\n                            <canvas id=\"playerLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.playerRef = el} />\n                            <canvas id=\"itemLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.itemRef = el} />\n                            <canvas id=\"bulletLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.bulletRef = el} />\n                            <canvas id=\"aimPointLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.aimPointRef = el} />\n                        </foreignObject>\n                    </svg>\n                    <svg id=\"info-container\"\n                        x=\"0\" y=\"0\"\n                        width={window.innerWidth}\n                        height={window.innerHeight} >\n                        <InkBar inkColor={this.playerData.playerColor} inkAmount={this.localPlayerData.inkAmount} />\n                        <text id=\"timer\" x=\"600\" y=\"80\" width=\"300\" height=\"100\" style={{ fill: this.localPlayerData.timeColor }}>{gameTime}</text>\n                        <HP hp={this.localPlayerData.playerHealth} />\n                        {anouncement}\n                    </svg>\n                </div>\n            )\n        }\n        else {\n            this.props.socket.disconnect();\n            this.props.socket.open();\n            return (<Redirect to={`/result/${this.props.roomId}`} />);\n        }\n    }\n}\n\nexport default Game;\n\n","import React, {Component} from 'react'\nimport './JumpOutWindow.css'\n\n\nfunction myForm(e){\n    return(\n        <div className='Jump-component' key={e}>\n            <h3>{e}</h3>\n            <input></input>\n        </div>\n    )\n}\n\n\n\nclass JumpOutWindow extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            show: this.props.display\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.display !== prevProps.display) {\n          this.setState({show: this.props.display})\n        }\n    }\n\n    closeJumpOut = () => {\n        console.log(this.state.show)\n        this.setState({show: {display: \"none\"}})\n    }\n\n    render() {\n        return(\n            <div style={this.state.show} className='Jump-bg'>\n                <div className=\"Jump-container\">\n                    <button onClick={this.closeJumpOut} className='Jump-closeButton'>\n                        X\n                    </button>\n                    <h2>{this.props.title}</h2>\n                    {this.props.form.map( e => {\n                        //console.log(e)\n                        return myForm(e) \n                    })}\n                    <button className='App_button'>{this.props.submit}</button>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default JumpOutWindow","import React, {Component} from 'react'\nimport temp from '../images/temp.gif'\nimport logo from '../images/logo.png'\nimport JumpOutWindow from '../components/JumpoutWindow'\nimport './Home.css'\n\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            login_display : {display: \"none\"},\n            signup_display: {display: \"none\"}\n        }\n    }\n\n    handleInputName = (e) => {\n        if (e.target.value !== '') { this.props.setName(e.target.value); }\n        if (e.key === 'Enter') { this.handlePlay() }\n    }\n\n    handlePlay = () => {\n        this.props.socket.emit('newPlayer', {\n            name: this.props.name\n        })\n        this.props.socket.once('getFirstInInfo', (data) => {\n            this.props.setRoomId(data.roomId);\n            this.props.setUid(data.uid);\n            this.props.setTeam(data.team);\n            this.props.setTeamColor(data.teamColor);\n            this.props.history.push(`/wait/${this.props.roomId}`);\n        })\n    }\n\n    handleDisplay(id) {\n        if(id === 'login'){\n            this.setState({login_display: {display: \"block\"}})\n        }\n        else if(id === 'signup') {\n            this.setState({signup_display: {display: \"block\"}})\n        } \n    }\n\n    render() {\n        return(\n            <div className='Home_container'>\n                <button className='App_button top-button' onClick={() => this.handleDisplay('signup')}>\n                    Sign up\n                </button>\n                <button className='App_button top-button' onClick={() => this.handleDisplay('login')}>\n                    Log in\n                </button>\n                \n                <JumpOutWindow display={this.state.login_display} title=\"Log in\" form={[\"id\", \"pw\"]} submit=\"Log in!\" />\n                <JumpOutWindow display={this.state.signup_display} title='Sign up' form={[\"email\",\"id\", \"pw\", \"pw again\"]} submit=\"Sign up!\" />\n                <div className='Home_main'>\n                    <img src={logo}></img>\n                    <input \n                        id=\"Name\"\n                        autoComplete=\"off\"\n                        spellCheck=\"false\"\n                        onKeyUp={this.handleInputName}\n                    />\n                    <button className='App_button' onClick={this.handlePlay}>\n                        Play!\n                    </button>\n                </div>\n                <div className='Home_mask'></div>\n                <div id='bg_wrapper'>\n                    <img src={temp} id='bg_img'></img>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home","import React from 'react'\nimport green from '../images/player/green/p-01.svg'\nimport orange from '../images/player/orange/p-01.svg'\nimport './UserBlock.css'\n\nclass UserBlock extends React.Component {\n    render() {\n        return(\n            <div className='UserBlock-container'>\n                <img src={this.props.team === 'A'? green:orange} alt={this.props.userName} />\n                <h3>{this.props.userName}</h3>\n                <h4>{this.props.playerRecord || 'guest'}</h4>\n            </div>\n        )\n    }\n}\n\nexport default UserBlock","import React, { Component } from 'react'\nimport './Wait.css'\nimport UserBlock from '../components/UserBlock'\nimport { COLOR_ASSET } from '../components/ColorAssets'\n\nclass Wait extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            teamA: [],\n            teamB: [],\n            isRoomFull: [],\n            teamAColor: COLOR_ASSET[this.props.teamColor['A']].shadow,\n            teamBColor: COLOR_ASSET[this.props.teamColor['B']].shadow,\n            waitingMessage: ''\n        }\n\n        this.props.socket.emit('getRoomPlayers', {\n            roomId: this.props.roomId\n        });\n\n        this.props.socket.on('getRoomPlayers', (data) => {\n            let waitingForPlayer = data.maxPlayers - data.teamA.length - data.teamB.length;\n            if (waitingForPlayer < 0) waitingForPlayer = 0;\n\n            this.setState({\n                teamA: data.teamA.map(p => p.name),\n                teamB: data.teamB.map(p => p.name),\n                isRoomFull: data.isRoomFull,\n                maxPlayers: data.maxPlayers,\n                waitingMessage: `waiting for ${waitingForPlayer} more players to join...`\n            });\n        });\n        \n        this.props.socket.on('getWaitTime', (data) => {\n            this.setState({\n                waitTime: data.waitTime,\n                waitingMessage: `left ${data.waitTime} seconds to begin...`\n            })\n            if (data.waitTime <= 0) {\n                this.props.socket.off('getWaitTime');\n            }\n        })\n\n        this.props.socket.once('startGaming', () => {\n            this.props.history.push(`/game/${this.props.roomId}`);\n        })\n    }\n\n    handleBack = () => {\n        this.props.socket.disconnect();\n        this.props.socket.open()\n        this.props.history.push('/home');\n        this.props.setName();\n    }\n\n    //61,67 playerRecord 的部分，如果有登入就送他的紀錄，不然就送個''，UserBlock物件裡面得到''就會印出guest\n\n    render() {\n        let teamA = this.state.teamA.map(name =>\n            <li key={name}>\n                <UserBlock userName={name} playerRecord=''/*playerRecord={ isLoggin? this.props.playerRecord : ''}*/ team='A' />\n            </li>\n        );\n\n        let teamB = this.state.teamB.map(name =>\n            <li key={name}>\n                <UserBlock userName={name} playerRecord='' team='B' />\n            </li>\n        );\n\n        return (\n            <div className='Wait_container'>\n                <h1>Game Lobby</h1>\n                <h3 id='Wait_message'>{this.state.waitingMessage}</h3>\n                <div id='Wait_wrapper'>\n                    <div className='Wait_group' style={{background: this.state.teamAColor}} >\n                        <h3 className='Wait_grouptitle' >TEAM A</h3>\n                        <ul>\n                            {teamA}\n                        </ul>\n                    </div>\n                    <div className='Wait_group' style={{background: this.state.teamBColor}}>\n                        <h3>TEAM B</h3>\n                        <ul>\n                            {teamB}\n                        </ul>\n                    </div>\n                </div>\n                <div id='Wait_button'>\n                    <button className='App_button' onClick={this.handleBack}>\n                        Back\n                    </button>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Wait","import React, {Component} from 'react'\nimport './Result.css'\nimport {COLOR_ASSET} from '../components/ColorAssets'\nimport resultBarSVG from '../images/resultBar.svg'\n\n\nclass Result extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            teamAColor: COLOR_ASSET[1], //把[]裡面的數字換成teamColorA,\n            teamBColor: COLOR_ASSET[2],\n            teamAarea: 1234, //直接給算好的面積之類的，前端算成％數，這樣也比較方便顯示其他統計資料\n            teamBarea: 1998\n        }\n    }\n\n    handleOK = () => {\n        this.props.history.push(`/home`);\n        // this.props.history.push(`/wait/${this.props.roomId}`);\n    }\n\n    render() {\n        const inkStyleA = {\n            fill: this.state.teamAColor.main,\n            filter: \"drop-shadow(0px 0px 5px \" + this.state.teamAColor.glow + \")\"\n        }\n        const inkStyleB = {\n            fill: this.state.teamBColor.main,\n            filter: \"drop-shadow(0px 0px 5px \" + this.state.teamBColor.glow + \")\"\n        }\n        var Afloat = this.state.teamAarea / (this.state.teamAarea + this.state.teamBarea)\n        var Apercentage = parseInt(Afloat*1000) / 10\n        //var Bpercentage = this.state.teamBarea / (this.state.teamAarea + this.state.teamBarea)\n        return(\n            <div className='Result-container'>\n                <h1>Result</h1>\n                    <div>\n                        <div>\n                            <h2>Team A</h2>\n                            <h3>{Apercentage}%</h3>\n                        </div>\n                        <div>\n                            <h2>Team B</h2>\n                            <h3>{100-Apercentage}%</h3>\n                        </div>\n                        \n                    </div>\n                    <div>\n                        <svg width=\"1200\" height=\"100\" x=\"200\" y=\"200\">\n                            <rect className=\"inkBar\"\n                                x=\"40\" y=\"20\" width={1120 * Afloat} height=\"60\" style={inkStyleA} />\n                            \n                            <rect className=\"inkBar\"\n                                x={40 + 1120*Afloat + 5} y=\"20\" width={1120*(1-Afloat)} height=\"60\" style={inkStyleB} />\n\n                            <rect className=\"inkBar\"\n                                x={40 + 1120*Afloat} y=\"20\" width=\"5\" height=\"60\" style={{fill: \"#FFFFFF\"}} />\n                            \n                            <image href={resultBarSVG} width=\"1200\" height=\"100\" />\n                        </svg>\n                    </div>\n                    \n                <div>\n\n                </div>\n                <button className='App_button' onClick={this.handleOK}>OK!</button>\n            </div>\n        )\n    }\n}\n\n\nexport default Result;","import React, {Component} from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport {Redirect} from 'react-router'\nimport io from 'socket.io-client';\nimport Game from '../components/Game'\nimport Home from './Home'\nimport Wait from './Wait'\nimport Result from './Result'\n\n//let host = '140.112.244.155:8080' // server ip (andyh0913 for temporary use)\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n        // this.socket = io(host);\n        this.socket = io('http://localhost:8080');\n        // this.socket = io('http://192.168.0.116:8080');\n        this.state = {\n            roomId: null,\n            name: 'Player',\n            uid: null,\n            team: null,\n            teamColor: [],\n        }\n    }\n\n    changeStatus = {\n        setRoomId: (roomId) => { this.setState( {roomId: roomId} ); },\n        setName: (name) => { \n            if (name) this.setState( {name: name} ); \n            else this.setState( {name: 'Player'})\n        },\n        setUid: (uid) => { this.setState( {uid: uid} ); },\n        setTeam: (team) => { this.setState( {team: team} ); },\n        setTeamColor: (teamColor) => { this.setState( {teamColor: teamColor} ); }\n    }\n\n    render(){\n        return (\n            <Switch>\n                <Route exact path='/' render={() => \n                    <Redirect to='/home' />} \n                />\n                <Route path='/home' render={(props) => <Home {...props} {...this.state}\n                    {...this.changeStatus}\n                    socket={this.socket} />}\n                />\n                <Route path={`/wait/${this.state.roomId}`} render={(props) => <Wait {...props} {...this.state}\n                    socket={this.socket}\n                    setName={this.changeStatus.setName} />}\n                />\n                <Route path={`/game/${this.state.roomId}`} render={(props) => <Game {...props} {...this.state}\n                    socket={this.socket} />}\n                />\n                <Route path={`/result/${this.state.roomId}`} render={(props) => <Result {...props} {...this.state}\n                    socket={this.socket} />}\n                />\n            </Switch>\n        )\n    }\n}\n\nexport default Index","import React from 'react';\nimport './App.css';\nimport Index from './Index'\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Index></Index>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}