{"version":3,"sources":["sounds/splash/splash2.wav","images/player/green/p-02.svg","images/player/green/p-03.svg","images/player/green/p-04.svg","images/player/purple/p-02.svg","images/player/purple/p-03.svg","images/player/purple/p-04.svg","images/player/blue/p-02.svg","images/player/blue/p-03.svg","images/player/blue/p-04.svg","images/player/pink/p-02.svg","images/player/pink/p-03.svg","images/player/pink/p-04.svg","sounds/inkHit/inkHit06.wav","images/ink/pink-01.svg","images/ink/pink-02.svg","images/ink/pink-03.svg","images/ink/blue-01.svg","images/ink/blue-02.svg","images/ink/blue-03.svg","images/ink/green-01.svg","images/ink/green-02.svg","images/ink/green-03.svg","images/ink/purple-01.svg","images/ink/purple-02.svg","images/ink/purple-03.svg","images/inkBar.svg","sounds/Fight.mp3","sounds/whistle.wav","images/temp.gif","images/logo.png","images/resultBar.svg","components/ColorSets.js","images/player/p-03.svg","enum/gameState.js","enum/playerStatus.js","components/ColorAssets.js","draw/drawPlayer.js","field/field.js","draw/drawField.js","draw/drawSplat.js","draw/drawAimPoint.js","draw/drawBullet.js","draw/drawAllPlayers.js","weapons/weapons.js","utils/getKeyDownState.js","utils/getKeyUpState.js","utils/mousePos.js","utils/updatePlayerPosition.js","utils/getSplats.js","utils/getPlayerStatus.js","utils/getPlayerSpeed.js","utils/getInkAmount.js","utils/getLineIntersection.js","utils/checkCollision.js","utils/getGameResult.js","utils/getPlayerHealth.js","components/inkBar.jsx","components/HP.jsx","components/Game.js","components/JumpoutWindow.jsx","containers/Home.js","components/UserBlock.jsx","containers/Wait.js","containers/Result.js","containers/Index.js","containers/App.js","serviceWorker.js","index.js","images/player/green/p-01.svg","images/player/purple/p-01.svg","images/player/blue/p-01.svg","images/player/pink/p-01.svg","sounds/shoot/HitEffectiveCommon02.wav","sounds/shoot/BulletHitNoDamage.wav"],"names":["module","exports","__webpack_require__","p","main","glow","shadow","this","GAME_STATE","WAITING","GAMING","FREEZE","FINISH","PLAYER_STATUS","STANDING_OWN","WALKING_OWN","DIVING_OWN","SWIMMING_OWN","ATTACKING_OWN","STANDING_SPACE","WALKING_SPACE","DIVING_SPACE","SWIMMING_SPACE","ATTACKING_SPACE","STANDING_ENEMY","WALKING_ENEMY","DIVING_ENEMY","SWIMMING_ENEMY","ATTACKING_ENEMY","DEAD","COLOR_ASSET","Colors","ripple","lastRipplePosition","x","y","audio","Audio","splashSound","volume","drawPlayer","c","a","state","isSelf","isTeamMate","context","getContext","team","playerColor","playerStatus","drawPlayerNormal","play","drawPlayerDive","drawPlayerDead","r_context","Math","abs","playerPosition","push","clearRect","width","height","r","length","drawRipple","drawRipple2","drawRipple3","splice","color","playerName","playerAngle","save","translate","font","playerNameLen","measureText","strokeStyle","lineWidth","strokeText","fillStyle","fillText","restore","body","Image","leftHand","rightHand","gun","src","pinkPlayer","pinkLeft","pinkRight","GunSVG","bluePlayer","blueLeft","blueRight","greenPlayer","greenLeft","greenRight","purplePlayer","purpleLeft","purpleRight","rotate","PI","drawImage","playerWidth","playerHeight","dive","pinkDive","blueDive","greenDive","purpleDive","beginPath","moveTo","lineTo","closePath","stroke","graph","centerX","centerY","radius","sides","theta","i","sin","cos","max","getRegularPolyObject","type","c_x","c_y","angle","arguments","undefined","polygon","battleField_1","fieldRange","xMin","xMax","yMin","yMax","rectObjects","polyObjects","spawnPoint","teamA","teamB","drawField","field","objects","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","path","drawRectUsingArc","offset","obj_path","drawPolyUsingArc","fill","Path2D","arc","polyObject","n","ink","pink01","pink02","pink03","blue01","blue02","blue03","green01","green02","green03","purple01","purple02","purple03","inkHit06","drawSplat","splat","colorID","inkID","aimX","aimY","ink_size","img","onload","currentTime","drawAimPoint","mousePosition","aimPoints","maindrawAimCircle","drawRealAimCircle","fireAudio","shootSound","noInkSound","drawBullet","bullets","p_x","p_y","drawCircle","drawCircleOutLine","distance","pow","min","drawAllPlayers","splatRef","bulletRef","playerRef","splatAnimationRef","players","l","playerTeam","splats","weapons","splatterShot_v1","maxShootDistance","bulletSpeed","fireSpeed","fireInkCost","maxError","gunLength","splatSize","splatDamage","splatShapeId","sub","price","getKeyDownState","e","key","playerMoveDirection","keyStrokeState","up","down","left","right","space","getKeyUpState","getMousePos","event","mouseClient","clientX","clientY","calculatePlayerAngle","x1","y1","x2","y2","comp","quotient","radiansToDegrees","atan","radians","updatePlayerPosition","playerData","localPlayerData","gameState","speed","playerMoveSpeed","d_x","d_y","new_x","new_y","temp_new_x","temp_new_y","noInkAudio","lines","timeLog","getSplats","otherPlayers","m_x","m_y","inkConsumption","playerWeapon","mouseLength","shootDistance","fieldCheckPos_a","checkFieldCollision","playerCheckPos_a","checkPlayerCollision","playerUid","random","g_x","g_y","fieldCheckPos","playerCheckPos","bullet_length","mouseDownState","timeStamp","inkAmount","splat_angle","floor","splatColorID","playerColorID","getPlayerStatus","ownColor","hex","result","exec","parseInt","hexToRgb","getImageData","data","own_color_count","empty_color_count","j","field_property","getPlayerSpeed","getInkAmount","new_inkAmount","new_playerHealth","playerHealth","restoreInk","restoreHP","getLineIntersection","x3","y3","x4","y4","denominator","ua","ub","tempShootDistance","realShootDistance","o_x1","o_y1","o_x2","o_y2","interSections","interSection","own_uid","getGameResult","fieldRef","sxt","fildWidth","fildHeight","resultImage","toDataURL","own_color","enemyColor","space_count","own_field_count","enemy_field_count","own_result","enem_result","A","B","getPlayerHealth","s","damage","minDistance","maxDistance","roomId","killerUid","killerName","killedUid","killedName","InkBar","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inkColor","inkBarPosition","window","innerWidth","innerHeight","console","log","inkBarStyle","inkBarGlow","filter","react_default","createElement","className","style","href","inkBarSVG","React","Component","HP","HPPosition","Hpcolor","hp","fontSize","fightSound","audio2","whistle","Game","componentWillMount","socket","emit","objectSpread","on","otherPlayerData","allPlayers","gameTime","temp","anouncement","setState","anounceIntervalId","setTimeout","prevState","addEventListener","onKeyUp","onKeyDown","trackMouse","mouseDown","mouseUp","updateGame","windowHeight","windowWidth","mouseScale","cameraSize","rect","groundRef","getBoundingClientRect","top","killed_msg","deadTime","respawnTime","spawnPosition","new_playerPosition","filedWidth","gameBoardWidth","filedHeight","gameBoardHeight","pause","_getSplats","_getSplats2","slicedToArray","new_inkAmountNhealth","healthAmount","aimPointRef","Date","now","timeColor","calculateResultFlag","gameResult","Afloat","Bfloat","winOrLose","componentDidMount","updateIntervalId","setInterval","componentWillUnmount","removeEventListener","off","clearInterval","spawnPoint_x","spawnPoint_y","teamColor","name","uid","g","_this2","id","timesUp","preserveAspectRatio","viewBox","ref","el","itemRef","components_inkBar","components_HP","react_router","to","pathname","concat","JumpOutWindow","closeJumpOut","show","display","list","form","prevProps","formTemp","target","value","once","message","_this3","onClick","title","map","onChange","handleInputChange","handleSubmit","submit","Home","handleInputName","setName","handlePlay","setRoomId","setUid","setTeam","setTeamColor","history","login_display","signup_display","isLoggedin","userName","userStatus","handleDisplay","JumpoutWindow","pw","email","pw_again","logo","autoComplete","spellCheck","UserBlock","img_src","status","border","alt","playerRecord","Wait","waitingForPlayer","maxPlayers","isRoomFull","waitingMessage","waitTime","handleBack","disconnect","open","teamAColor","teamBColor","currentPlayers","src_components_UserBlock","inWaitingRoom","background","Result","handleOK","location","teamAarea","teamBarea","inkStyleA","inkStyleB","resultBarSVG","Index","changeStatus","io","exact","render","src_containers_Home","assign","src_containers_Wait","src_components_Game","src_containers_Result","App","react_router_dom","containers_Index","Boolean","hostname","match","ReactDOM","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4bc5787.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/splash2.47284f8c.wav\";","module.exports = __webpack_public_path__ + \"static/media/p-02.82478dc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-03.da042bf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-04.844a2b09.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-02.9753905a.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-03.5e905332.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-04.433c659c.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-02.a4285073.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-03.c17a0324.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-04.1671b51e.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-02.2b7d0e6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-03.ed47de29.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-04.54df64a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/inkHit06.06b2c837.wav\";","module.exports = __webpack_public_path__ + \"static/media/pink-01.92959e72.svg\";","module.exports = __webpack_public_path__ + \"static/media/pink-02.032da1c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/pink-03.aa2c206b.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-01.93385af3.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-02.78e68feb.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-03.98358227.svg\";","module.exports = __webpack_public_path__ + \"static/media/green-01.c7a89ac8.svg\";","module.exports = __webpack_public_path__ + \"static/media/green-02.d13b2050.svg\";","module.exports = __webpack_public_path__ + \"static/media/green-03.e95e8e60.svg\";","module.exports = __webpack_public_path__ + \"static/media/purple-01.56b26c88.svg\";","module.exports = __webpack_public_path__ + \"static/media/purple-02.bbac2161.svg\";","module.exports = __webpack_public_path__ + \"static/media/purple-03.a5cbce3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/inkBar.4467d4bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/Fight.2046d9f8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/whistle.c8c50fb6.wav\";","module.exports = __webpack_public_path__ + \"static/media/temp.2b31b498.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.b6405375.png\";","module.exports = __webpack_public_path__ + \"static/media/resultBar.49eb83d2.svg\";","function Colors(main, glow, shadow) {\r\n    this.main = main;\r\n    this.glow = glow;\r\n    this.shadow = shadow\r\n}\r\n\r\nmodule.exports = Colors","module.exports = __webpack_public_path__ + \"static/media/p-03.9aeccb4c.svg\";","export const GAME_STATE = {\r\n    WAITING: 1,\r\n    GAMING: 2,\r\n    FREEZE: 3,\r\n    FINISH: 4\r\n  };","export const PLAYER_STATUS = {\r\n  STANDING_OWN: 0,\r\n  WALKING_OWN: 1,\r\n  DIVING_OWN: 2,\r\n  SWIMMING_OWN: 3,\r\n  ATTACKING_OWN: 4,\r\n\r\n  STANDING_SPACE: 5,\r\n  WALKING_SPACE: 6,\r\n  DIVING_SPACE: 7,\r\n  SWIMMING_SPACE: 8,\r\n  ATTACKING_SPACE: 9,\r\n\r\n  STANDING_ENEMY: 10,\r\n  WALKING_ENEMY: 11,\r\n  DIVING_ENEMY: 12,\r\n  SWIMMING_ENEMY: 13,\r\n  ATTACKING_ENEMY: 14,\r\n\r\n  DEAD: 15,\r\n};","import Colors from './ColorSets'\r\n\r\nvar PINK = new Colors(\"#ff1493\", \"#e72dc2\", \"#d467a5\");\r\nvar BLUE = new Colors(\"#02fffc\", \"#44afec\", \"#84d1e4\");\r\nvar GREEN = new Colors(\"#25ff5d\", \"#44ec6b\", \"#82db8a\");\r\nvar PURPLE = new Colors(\"#866aff\", \"#8744ec\", \"#c793e5\");\r\n\r\n// var PINK = new Colors([255,20,147,1],[231,45,194,1],[212,103,165,1]);\r\n\r\nexport const COLOR_ASSET = [PINK, BLUE, GREEN, PURPLE];\r\n\r\n","\r\nimport { PLAYER_STATUS } from '../enum'\r\nimport { COLOR_ASSET } from '../components/ColorAssets'\r\n\r\nimport splashSound from '../sounds/splash/splash2.wav'\r\n\r\nimport greenPlayer from '../images/player/green/p-01.svg'\r\nimport greenLeft from '../images/player/green/p-02.svg'\r\nimport greenRight from '../images/player/green/p-03.svg'\r\nimport greenDive from '../images/player/green/p-04.svg'\r\n\r\nimport purplePlayer from '../images/player/purple/p-01.svg'\r\nimport purpleLeft from '../images/player/purple/p-02.svg'\r\nimport purpleRight from '../images/player/purple/p-03.svg'\r\nimport purpleDive from '../images/player/purple/p-04.svg'\r\n\r\nimport bluePlayer from '../images/player/blue/p-01.svg'\r\nimport blueLeft from '../images/player/blue/p-02.svg'\r\nimport blueRight from '../images/player/blue/p-03.svg'\r\nimport blueDive from '../images/player/blue/p-04.svg'\r\n\r\nimport pinkPlayer from '../images/player/pink/p-01.svg'\r\nimport pinkLeft from '../images/player/pink/p-02.svg'\r\nimport pinkRight from '../images/player/pink/p-03.svg'\r\nimport pinkDive from '../images/player/pink/p-04.svg'\r\n\r\n\r\nimport GunSVG from '../images/player/p-03.svg'\r\n/*\r\nimport playerSVG from '../images/player/p-02-01.svg'\r\nimport LeftHandSVG from '../images/player/p-02-02.svg'\r\nimport RightHandSVG from '../images/player/p-02-03.svg'\r\nimport gunSVG from '../images/player/p-03.svg'\r\nimport diveSVG from '../images/player/p-02-04.svg'\r\n*/\r\n\r\nexport const playerWidth = 50;\r\nexport const playerHeight = 50;\r\n\r\nconst handOffset = 23\r\n\r\n//var diveSVG;\r\n//var gunSVG = GunSVG\r\n\r\nvar ripple = [];\r\n//var lastRippleTimeStamp = 0;\r\nvar lastRipplePosition = { x: -1000, y: -1000 };\r\n\r\nvar audio = new Audio(splashSound);\r\naudio.volume = 0.5;\r\n\r\nexport const drawPlayer = (c, a, state, isSelf, isTeamMate) => {\r\n\r\n    var context = c.getContext(\"2d\");\r\n\r\n    var team = state.playerColor.main;\r\n\r\n    // attach the context to the canvas for easy access and to reduce complexity.\r\n    // context.clearRect(0, 0, c.width, c.height);\r\n    // drawPlayerNormal(context, state)\r\n\r\n    switch (state.playerStatus) {\r\n        case PLAYER_STATUS.STANDING_OWN:\r\n            drawPlayerNormal(context, state, team, isSelf);\r\n            break;\r\n        case PLAYER_STATUS.WALKING_OWN:\r\n            drawPlayerNormal(context, state, team, isSelf);\r\n            break;\r\n        case PLAYER_STATUS.DIVING_OWN:\r\n            // audio.currentTime = 0;\r\n            audio.play();\r\n            drawPlayerDive(context, state, team, isSelf, isTeamMate);\r\n            break;\r\n        case PLAYER_STATUS.SWIMMING_OWN:\r\n            // audio.currentTime = 0;\r\n            audio.play();\r\n            drawPlayerDive(context, state, team, isSelf, isTeamMate);\r\n\r\n            break;\r\n        case PLAYER_STATUS.ATTACKING_OWN:\r\n            drawPlayerNormal(context, state, team, isSelf);\r\n            break;\r\n\r\n        case PLAYER_STATUS.STANDING_SPACE:\r\n            drawPlayerNormal(context, state, team, isSelf);\r\n\r\n            break;\r\n        case PLAYER_STATUS.WALKING_SPACE:\r\n            drawPlayerNormal(context, state, team, isSelf);\r\n\r\n            break;\r\n        case PLAYER_STATUS.DIVING_SPACE:\r\n            drawPlayerNormal(context, state, team, isSelf);\r\n\r\n            break;\r\n        case PLAYER_STATUS.SWIMMING_SPACE:\r\n            drawPlayerNormal(context, state, team, isSelf);\r\n\r\n            break;\r\n        case PLAYER_STATUS.ATTACKING_SPACE:\r\n            drawPlayerNormal(context, state, team, isSelf);\r\n\r\n            break;\r\n\r\n        case PLAYER_STATUS.STANDING_ENEMY:\r\n            drawPlayerNormal(context, state, team, isSelf);\r\n\r\n            break;\r\n        case PLAYER_STATUS.WALKING_ENEMY:\r\n            drawPlayerNormal(context, state, team, isSelf);\r\n\r\n            break;\r\n        case PLAYER_STATUS.DIVING_ENEMY:\r\n            break;\r\n        case PLAYER_STATUS.SWIMMING_ENEMY:\r\n            break;\r\n        case PLAYER_STATUS.ATTACKING_ENEMY:\r\n            drawPlayerNormal(context, state, team, isSelf);\r\n            break;\r\n        case PLAYER_STATUS.DEAD:\r\n            drawPlayerDead(context, state, team, isSelf);\r\n            break;\r\n        default: break;\r\n    }\r\n\r\n    // ripples\r\n    var r_context = a.getContext(\"2d\");\r\n    if ((Math.abs(state.playerPosition.x - lastRipplePosition.x) > 50 || Math.abs(state.playerPosition.y - lastRipplePosition.y) > 50) &&\r\n        (state.playerStatus === PLAYER_STATUS.WALKING_OWN || state.playerStatus === PLAYER_STATUS.SWIMMING_OWN\r\n            || state.playerStatus === PLAYER_STATUS.WALKING_ENEMY || state.playerStatus === PLAYER_STATUS.SWIMMING_ENEMY)) {\r\n        ripple.push([state.playerPosition.x, state.playerPosition.y, 20, 300]);\r\n        lastRipplePosition.x = state.playerPosition.x;\r\n        lastRipplePosition.y = state.playerPosition.y;\r\n    }\r\n\r\n    r_context.clearRect(0, 0, a.width, a.height);\r\n    for (var r = 0; r < ripple.length; ++r) {\r\n        ripple[r][2] += 0.5;\r\n        drawRipple(r_context, ripple[r][0], ripple[r][1], ripple[r][2], 20);\r\n        if (ripple[r][2] - 10 > 0) {\r\n            drawRipple2(r_context, ripple[r][0], ripple[r][1], ripple[r][2] - 10, 20);\r\n        }\r\n        if (ripple[r][2] - 20 > 0) {\r\n            drawRipple3(r_context, ripple[r][0], ripple[r][1], ripple[r][2] - 20, 20);\r\n        }\r\n        if (ripple[r][2] >= ripple[r][3]) {\r\n            ripple.splice(r, 1);;\r\n            --r;\r\n            continue;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst drawPlayerNormal = (context, state, color, isSelf) => {\r\n    const playerName = state.playerName\r\n    const playerColor = state.playerColor\r\n    const playerPosition = state.playerPosition\r\n    const playerAngle = state.playerAngle\r\n    //const playerStatus = state.playerStatus\r\n    /*\r\n    context.save();\r\n    context.translate(playerPosition.x, playerPosition.y)\r\n\r\n    context.save();\r\n    context.rotate(Math.PI / 180 * playerAngle);\r\n    */\r\n    context.save()\r\n\r\n    context.translate(playerPosition.x, playerPosition.y)\r\n\r\n    context.font = \"bold 12pt Freckle Face\";\r\n    const playerNameLen = context.measureText(playerName).width;\r\n\r\n    context.strokeStyle = isSelf ? \"#ffd700\" : \"#FFFFFF\";\r\n    context.lineWidth = 3;\r\n    context.strokeText(playerName, -playerNameLen / 2, 50)\r\n\r\n    context.fillStyle = playerColor;\r\n    context.font = \"bold 12pt Freckle Face\";\r\n\r\n    context.fillText(playerName, -playerNameLen / 2, 50);\r\n    //end of player drawing\r\n    context.restore();\r\n\r\n    var body = new Image()\r\n    var leftHand = new Image()\r\n    var rightHand = new Image()\r\n    var gun = new Image()\r\n\r\n    switch (color) {\r\n        case COLOR_ASSET[0].main:\r\n            body.src = pinkPlayer;\r\n            leftHand.src = pinkLeft;\r\n            rightHand.src = pinkRight;\r\n            gun.src = GunSVG;\r\n            break;\r\n        case COLOR_ASSET[1].main:\r\n            body.src = bluePlayer;\r\n            leftHand.src = blueLeft;\r\n            rightHand.src = blueRight;\r\n            gun.src = GunSVG;\r\n            break;\r\n        case COLOR_ASSET[2].main:\r\n            body.src = greenPlayer;\r\n            leftHand.src = greenLeft;\r\n            rightHand.src = greenRight;\r\n            gun.src = GunSVG;\r\n            break;\r\n        case COLOR_ASSET[3].main:\r\n            body.src = purplePlayer;\r\n            leftHand.src = purpleLeft;\r\n            rightHand.src = purpleRight;\r\n            gun.src = GunSVG;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    /*\r\n    body.src = playerSVG;\r\n    leftHand.src = LeftHandSVG;\r\n    rightHand.src = RightHandSVG;\r\n    gun.src = gunSVG;\r\n    */\r\n\r\n    context.translate(playerPosition.x, playerPosition.y)\r\n    context.rotate(Math.PI / 180 * (playerAngle + 180));\r\n    context.drawImage(body, -playerWidth / 2 - 10, -playerHeight / 2 - 12, playerWidth + 15, playerHeight + 15)\r\n    context.drawImage(leftHand, -playerWidth / 2 - 10, -playerHeight / 2 + handOffset, playerWidth, playerHeight)\r\n    context.drawImage(gun, -playerWidth / 2, -playerHeight / 2 + 28, playerWidth, playerHeight)\r\n    context.drawImage(rightHand, -playerWidth / 2 + 10, -playerHeight / 2 + handOffset, playerWidth, playerHeight)\r\n\r\n    context.rotate(- Math.PI / 180 * (playerAngle + 180))\r\n    context.translate(-playerPosition.x, -playerPosition.y)\r\n\r\n\r\n\r\n\r\n    //draw the player part moving with mouse \r\n\r\n\r\n    /*context.fillStyle = 'rgba(' + playerColor + ')';\r\n    context.fillRect(-playerWidth / 2, -playerHeight / 2, playerWidth, playerHeight);\r\n    context.strokeStyle = \"#33333344\";\r\n    context.lineWidth = 5;\r\n    context.strokeRect(-playerWidth / 2, -playerHeight / 2, playerWidth, playerHeight);\r\n\r\n    context.fillStyle = \"#33cc59\";\r\n    context.fillRect(-playerWidth / 2, -playerHeight / 2, 15, 15);\r\n    context.fillStyle = \"#33a6cc\";\r\n    context.fillRect(playerWidth / 2 - 15, -playerHeight / 2, 15, 15);\r\n    */\r\n\r\n    //context.restore();\r\n    //draw the player part NOT moving with mouse \r\n\r\n\r\n}\r\n\r\nconst drawPlayerDive = (context, state, color, isSelf, isTeamMate) => {\r\n    const playerName = state.playerName\r\n    const playerColor = state.playerColor\r\n    const playerPosition = state.playerPosition\r\n    //const playerAngle = state.playerAngle\r\n    //const playerStatus = state.playerStatus\r\n\r\n\r\n    if (isTeamMate) {\r\n        context.save()\r\n        context.translate(playerPosition.x, playerPosition.y)\r\n\r\n        context.font = \"bold 10pt Freckle Face\";\r\n        const playerNameLen = context.measureText(playerName).width;\r\n\r\n        context.strokeStyle = isSelf ? \"#ffd700\" : \"#FFFFFF\";\r\n        context.lineWidth = 3;\r\n        context.strokeText(playerName, -playerNameLen / 2, 50)\r\n\r\n        context.fillStyle = playerColor;\r\n        context.font = \"bold 10pt Freckle Face\";\r\n\r\n        context.fillText(playerName, -playerNameLen / 2, 50);\r\n        //end of player drawing\r\n        context.restore();\r\n\r\n        var dive = new Image()\r\n\r\n        switch (color) {\r\n            case COLOR_ASSET[0].main:\r\n                dive.src = pinkDive\r\n                break;\r\n            case COLOR_ASSET[1].main:\r\n                dive.src = blueDive\r\n                break;\r\n            case COLOR_ASSET[2].main:\r\n                dive.src = greenDive\r\n                break;\r\n            case COLOR_ASSET[3].main:\r\n                dive.src = purpleDive\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        context.translate(playerPosition.x, playerPosition.y)\r\n        context.drawImage(dive, -playerWidth / 2 - 10, -playerHeight / 2 + 12, playerWidth + 15, playerHeight + 15)\r\n        context.translate(-playerPosition.x, -playerPosition.y)\r\n    }\r\n}\r\n\r\nconst drawPlayerDead = (context, state, team, isSelf) => {\r\n    const playerName = state.playerName\r\n    const playerColor = state.playerColor\r\n    const playerPosition = state.playerPosition\r\n    //const playerAngle = state.playerAngle\r\n    //const playerStatus = state.playerStatus\r\n\r\n\r\n    context.save()\r\n\r\n    context.translate(playerPosition.x, playerPosition.y)\r\n\r\n    // draw X\r\n    context.beginPath();\r\n    context.moveTo(-25, -25);\r\n    context.lineTo(25, 25);\r\n    context.moveTo(25, -25);\r\n    context.lineTo(-25, 25);\r\n    context.closePath();\r\n\r\n    context.lineWidth = 10;\r\n    context.stroke();\r\n    // end of draw X\r\n\r\n    context.font = \"bold 10pt Freckle Face\";\r\n    const playerNameLen = context.measureText(playerName).width;\r\n\r\n    context.strokeStyle = isSelf ? \"#ffd700\" : \"#FFFFFF\";\r\n    context.lineWidth = 3;\r\n    context.strokeText(playerName, -playerNameLen / 2, 50)\r\n\r\n    context.fillStyle = playerColor;\r\n    context.font = \"bold 10pt Freckle Face\";\r\n\r\n    context.fillText(playerName, -playerNameLen / 2, 50);\r\n\r\n    //end of player drawing\r\n    context.restore();\r\n}\r\n\r\nconst drawPlayerName = (context, state) => {\r\n    const playerName = state.playerName\r\n    const playerColor = state.playerColor\r\n    const playerPosition = state.playerPosition\r\n    //const playerAngle = state.playerAngle\r\n    //const playerStatus = state.playerStatus\r\n\r\n    context.save()\r\n\r\n    context.translate(playerPosition.x, playerPosition.y)\r\n\r\n    context.font = \"bold 10pt Freckle Face\";\r\n    const playerNameLen = context.measureText(playerName).width;\r\n\r\n    context.strokeStyle = \"#FFFFFF\";\r\n    context.lineWidth = 3;\r\n    context.strokeText(playerName, -playerNameLen / 2, 50)\r\n\r\n    context.fillStyle = playerColor;\r\n    context.font = \"bold 10pt Freckle Face\";\r\n\r\n    context.fillText(playerName, -playerNameLen / 2, 50);\r\n    //end of player drawing\r\n    context.restore();\r\n\r\n    /*context.save();\r\n    context.translate(playerPosition.x, playerPosition.y)\r\n\r\n    context.save();\r\n    context.rotate(Math.PI / 180 * playerAngle);\r\n\r\n\r\n\r\n    context.restore();\r\n    //draw the player part NOT moving with mouse \r\n\r\n    context.font = \"bold 20pt Arial\";\r\n    const playerNameLen = context.measureText(playerName).width;\r\n\r\n    context.strokeStyle = \"#dddddd\";\r\n    context.lineWidth = 3;\r\n    context.strokeText(playerName, -playerNameLen / 2, 50)\r\n\r\n    context.fillStyle = \"#111111\";\r\n    context.font = \"bold 20pt Arial\";\r\n\r\n    context.fillText(playerName, -playerNameLen / 2, 50);\r\n    //end of player drawing\r\n    context.restore();\r\n    */\r\n}\r\n\r\nconst drawRipple = (graph, centerX, centerY, radius, sides) => {\r\n    var theta = 0;\r\n    var x = 0;\r\n    var y = 0;\r\n\r\n\r\n    graph.save();\r\n    graph.beginPath();\r\n    for (var i = 0; i < sides; i++) {\r\n        theta = (i / sides) * 2 * Math.PI;\r\n        x = centerX + radius * Math.sin(theta);\r\n        y = centerY + radius * Math.cos(theta);\r\n        graph.lineTo(x, y);\r\n    }\r\n    graph.closePath();\r\n    graph.lineWidth = 3;\r\n    graph.strokeStyle = 'rgba(230,230,230,' + (Math.max(0, 40 - radius) / 100) + ')';\r\n    graph.stroke();\r\n    graph.restore();\r\n}\r\n\r\nconst drawRipple2 = (graph, centerX, centerY, radius, sides) => {\r\n    var theta = 0;\r\n    var x = 0;\r\n    var y = 0;\r\n\r\n\r\n    graph.save();\r\n    graph.beginPath();\r\n    for (var i = 0; i < sides; i++) {\r\n        theta = (i / sides) * 2 * Math.PI;\r\n        x = centerX + radius * Math.sin(theta);\r\n        y = centerY + radius * Math.cos(theta);\r\n        graph.lineTo(x, y);\r\n    }\r\n    graph.closePath();\r\n    graph.lineWidth = 2;\r\n    graph.strokeStyle = 'rgba(220,220,220,' + (Math.max(0, 26 - radius) / 100) + ')';\r\n    graph.stroke();\r\n    graph.restore();\r\n}\r\n\r\nconst drawRipple3 = (graph, centerX, centerY, radius, sides) => {\r\n    var theta = 0;\r\n    var x = 0;\r\n    var y = 0;\r\n\r\n\r\n    graph.save();\r\n    graph.beginPath();\r\n    for (var i = 0; i < sides; i++) {\r\n        theta = (i / sides) * 2 * Math.PI;\r\n        x = centerX + radius * Math.sin(theta);\r\n        y = centerY + radius * Math.cos(theta);\r\n        graph.lineTo(x, y);\r\n    }\r\n    graph.closePath();\r\n    graph.lineWidth = 1;\r\n    graph.strokeStyle = 'rgba(200,200,200,' + (Math.max(0, 22 - radius) / 100) + ')';\r\n\r\n    graph.stroke();\r\n    graph.restore();\r\n}","export const getRegularPolyObject = (type, c_x, c_y, radius, sides, angle=0) => {\r\n    var theta = 0;\r\n    var x = 0;\r\n    var y = 0;\r\n\r\n    var polygon = [type];\r\n    for (var i = 0; i < sides; i++) {\r\n        theta = (i / sides) * 2 * Math.PI + angle/180*Math.PI;\r\n        x = c_x + radius * Math.sin(theta);\r\n        y = c_y + radius * Math.cos(theta);\r\n        polygon.push([x, y]);\r\n    }\r\n    return polygon;\r\n}\r\n\r\n\r\nexport const battleField_1 = {\r\n    fieldRange: { xMin: 50, xMax: 1550, yMin: 50, yMax: 850 },\r\n\r\n    //(xPos, yPos, width, height)\r\n    rectObjects: [\r\n        [\"rock\", 450, 50, 100, 200],\r\n        [\"rock\", 450, 550, 100, 200],\r\n        [\"rock\", 1050, 50, 100, 200],\r\n        [\"rock\", 1050, 550, 100, 200],\r\n\r\n        [\"rock\", 750, 275, 100, 400],\r\n        [\"rock\", 600, 400, 400, 100],\r\n\r\n        [\"rock\", 50, 0, 1600, 50],\r\n        [\"rock\", 0, 50, 50, 900],\r\n        [\"rock\", 50, 850, 1600, 50],\r\n        [\"rock\", 1550, 50, 50, 900],\r\n\r\n        [\"rock\", 0, 0, 50, 50],\r\n        [\"rock\", 1550, 0, 50, 50],\r\n        [\"rock\", 0, 850, 50, 50],\r\n        [\"rock\", 1550, 850, 50, 50],\r\n    ],\r\n    polyObjects: [\r\n        getRegularPolyObject(\"white\", 50, 450, 150, 8, 22.5),\r\n        getRegularPolyObject(\"white\", 1550, 450, 150, 8, 22.5),\r\n    ],\r\n\r\n    spawnPoint:{\r\n        teamA:{x:100 , y:450},\r\n        teamB:{x:1500 , y:450}\r\n    }\r\n    \r\n}\r\n","import { battleField_1 } from '../field'\r\n\r\nconst outerColor = \"#525C63\"\r\nconst middleColor = \"#3B4349\"\r\nconst innerColor = \"#21292D\"\r\n\r\n\r\n\r\nexport const drawField = (c) => {\r\n    const field = battleField_1;\r\n    var objects = field.polyObjects; \r\n    var xMin = field.fieldRange.xMin\r\n    var yMin = field.fieldRange.yMin\r\n    var xMax = field.fieldRange.xMax\r\n    var yMax = field.fieldRange.yMax\r\n\r\n    var context = c.getContext(\"2d\");\r\n\r\n    context.save();\r\n    context.shadowBlur = 3;\r\n    context.shadowColor = \"rgba(63, 255, 239, 0.555)\";\r\n    context.shadowOffsetX = 0;\r\n    context.shadowOffsetY = 0;\r\n    //context.filter = 'drop-shadow(0px 0px 1px #e81)';\r\n    // console.log(field.fieldRange)\r\n    //draw the ground\r\n    //context.fillStyle = \"#aaaaaa\";\r\n    //context.fillRect(field.fieldRange.xMin, field.fieldRange.yMin, field.fieldRange.xMax-field.fieldRange.xMin, field.fieldRange.yMax-field.fieldRange.yMin);\r\n\r\n    var path = drawRectUsingArc(xMin, yMin, xMax - xMin, yMax - yMin, 30);\r\n    context.strokeStyle = outerColor;\r\n    context.lineWidth = 8;\r\n    context.stroke(path)\r\n    var offset = 12\r\n    var path = drawRectUsingArc(xMin - offset / 2, yMin - offset / 2, xMax - xMin + offset, yMax - yMin + offset, 30);\r\n    context.strokeStyle = middleColor;\r\n    context.lineWidth = 8;\r\n    context.stroke(path)\r\n\r\n    //draw polygon objects\r\n    \r\n    for (var i = 0; i < objects.length; ++i) {\r\n        switch (objects[i][0]) {\r\n            case \"white\":\r\n\r\n\r\n                //最外圈\r\n                context.fillStyle = \"#EEEEEE\";\r\n                var obj_path = drawPolyUsingArc(objects[i])\r\n                context.fill(obj_path)\r\n\r\n                // //中間\r\n                // context.fillStyle = middleColor;\r\n                // var obj_path = drawPolyUsingArc(objects[i])\r\n                // context.fill(obj_path)\r\n\r\n                // //最內圈\r\n                // context.fillStyle = innerColor;\r\n                // var obj_path = drawPolyUsingArc(objects[i])                \r\n                // context.fill(obj_path)\r\n\r\n                break;\r\n            default: break;\r\n        }\r\n    }\r\n\r\n    //context.strokeRect(field.fieldRange.xMin, field.fieldRange.yMin, \r\n    //field.fieldRange.xMax-field.fieldRange.xMin, field.fieldRange.yMax-field.fieldRange.yMin);\r\n    // draw the objects\r\n    objects = field.rectObjects;\r\n    for (var i = 0; i < objects.length; ++i) {\r\n        var obj = { x: objects[i][1], y: objects[i][2], w: objects[i][3], h: objects[i][4] }\r\n\r\n        switch (objects[i][0]) {\r\n            case \"rock\":\r\n\r\n                //最外圈\r\n                context.fillStyle = outerColor;\r\n                var obj_path = drawRectUsingArc(objects[i][1], objects[i][2], objects[i][3], objects[i][4], 5)\r\n                context.fill(obj_path)\r\n\r\n                //中間\r\n                context.fillStyle = middleColor;\r\n                obj_path = drawRectUsingArc(objects[i][1] + 8, objects[i][2] + 8, objects[i][3] - 16, objects[i][4] - 16, 5)\r\n                context.fill(obj_path)\r\n\r\n                //最內圈\r\n                context.fillStyle = innerColor;\r\n                obj_path = drawRectUsingArc(objects[i][1] + 20, objects[i][2] + 20, objects[i][3] - 40, objects[i][4] - 40, 5)\r\n                context.fill(obj_path)\r\n\r\n                break;\r\n            default: break;\r\n        }\r\n\r\n        /*\r\n        var img = new Image();\r\n        img.src = rock;\r\n        img.onload = function() {\r\n            context.drawImage(img, obj.x, obj.y, obj.w, obj.h)\r\n        }\r\n        \r\n        var obj_path = drawUsingArc(objects[i][1], objects[i][2], objects[i][3], objects[i][4], 10)\r\n        context.fill(obj_path)\r\n        */\r\n        //var obj_path = drawUsingArc(objects[i][1]+5, objects[i][2]+5, objects[i][3]-10, objects[i][4]-10, 10)\r\n        //context.fill(obj_path)\r\n        //context.fillRect(objects[i][1], objects[i][2], objects[i][3], objects[i][4]);\r\n    }\r\n\r\n    \r\n    context.restore();\r\n}\r\n\r\n\r\nfunction drawRectUsingArc(x, y, width, height, r) {\r\n    var path = new Path2D();\r\n\r\n    path.moveTo(x + r, y);\r\n    path.lineTo(x + width - r, y);\r\n    path.arc(x + width - r, y + r, r, Math.PI / 180 * 270, 0, false);\r\n    path.lineTo(x + width, y + height - r);\r\n    path.arc(x + width - r, y + height - r, r, 0, Math.PI / 180 * 90, 0, false);\r\n    path.lineTo(x + r, y + height);\r\n    path.arc(x + r, y + height - r, r, Math.PI / 180 * 90, Math.PI / 180 * 180, false);\r\n    path.lineTo(x, y + r);\r\n    path.arc(x + r, y + r, r, Math.PI / 180 * 180, Math.PI / 180 * 270, false);\r\n\r\n    return path;\r\n}\r\n\r\nfunction drawPolyUsingArc(polyObject) {\r\n    var path = new Path2D();\r\n    const n = polyObject.length;\r\n    path.moveTo(polyObject[n - 1][0], polyObject[n - 1][1]);\r\n    \r\n    for (var i = 1; i < n; i++) {\r\n        path.lineTo(polyObject[i][0], polyObject[i][1]);\r\n    }\r\n\r\n    return path;\r\n}","import inkHit06 from '../sounds/inkHit/inkHit06.wav';\r\n\r\nimport pink01 from '../images/ink/pink-01.svg'\r\nimport pink02 from '../images/ink/pink-02.svg'\r\nimport pink03 from '../images/ink/pink-03.svg'\r\n\r\nimport blue01 from '../images/ink/blue-01.svg'\r\nimport blue02 from '../images/ink/blue-02.svg'\r\nimport blue03 from '../images/ink/blue-03.svg'\r\n\r\n\r\nimport green01 from '../images/ink/green-01.svg'\r\nimport green02 from '../images/ink/green-02.svg'\r\nimport green03 from '../images/ink/green-03.svg'\r\n\r\n\r\nimport purple01 from '../images/ink/purple-01.svg'\r\nimport purple02 from '../images/ink/purple-02.svg'\r\nimport purple03 from '../images/ink/purple-03.svg'\r\n\r\n\r\n\r\nconst ink = [\r\n    [pink01, pink02, pink03],\r\n    [blue01, blue02, blue03],\r\n    [green01, green02, green03],\r\n    [purple01, purple02, purple03]\r\n];\r\nvar ripple = [];\r\nvar audio = new Audio(inkHit06);\r\naudio.volume = 0.5;\r\n/*\r\nfunction random_ink() {\r\n    var l = ink.length;\r\n    var r = Math.floor(Math.random() * l)\r\n    return ink[r]\r\n}\r\n*/\r\nexport const drawSplat = (c, a, splat, playerColor, playerAngle, playerPosition) => {\r\n\r\n    var context = c.getContext(\"2d\");\r\n    var r_context = a.getContext(\"2d\");\r\n    \r\n\r\n    context.save();\r\n\r\n    //context.filter = 'drop-shadow(0px 0px 5px #FF1493)';\r\n    // context.drawImage(image, 0,0,1600,900);\r\n\r\n    // splat [splatShapeId, pos_x, pos_y, splatAngle, splatSize, splatDamage]\r\n    for (var i = 0; i < splat.length; ++i) {\r\n        var colorID = splat[i][6];\r\n        var inkID = splat[i][0]; // shape of the splat\r\n        //context.fillStyle =  'rgba(' + playerColor +')';\r\n        var aimX = splat[i][1];\r\n        var aimY = splat[i][2];\r\n     \r\n        var angle = splat[i][3];\r\n        // playerAngle< 0 ? playerAngle + 270 : playerAngle - 90;\r\n        var ink_size = splat[i][4] * 2; //因為我圖畫得比較小所以先乘3\r\n\r\n        var img = new Image();\r\n        img.src = ink[colorID][inkID];\r\n        //\"data:image/svg+xml;base64,\"+btoa(trysvg);\r\n        //img.style = \"fill:#B0E0E6;\"\r\n        //console.log(img.style)\r\n        img.onload = function () {\r\n            // console.log(angle)\r\n            // context.shadowBlur = 5;\r\n            // context.shadowColor = \"#FF00FF\";\r\n            context.translate(aimX, aimY)\r\n            context.rotate(angle / 180 * Math.PI);\r\n            context.drawImage(img, -ink_size / 2, -ink_size / 2, ink_size, ink_size);\r\n            context.rotate(-angle / 180 * Math.PI);\r\n            context.translate(-aimX, -aimY)\r\n        }\r\n\r\n        //drawCircle(context, aimX, aimY, splat[i][2], 20);\r\n        audio.currentTime = 0;\r\n        audio.play();\r\n\r\n        // ripple\r\n        ripple.push([aimX, aimY, 1, ink_size]);\r\n    }\r\n\r\n    // image.src = context.canvas.toDataURL();\r\n    context.restore();\r\n    // context.clearRect(0, 0, c.width, c.height);\r\n    // r_context.clearRect(0, 0, a.width, a.height);\r\n    for (var r = 0; r < ripple.length; ++r) {\r\n        ripple[r][2] += 2;\r\n        drawRipple(r_context, ripple[r][0], ripple[r][1], ripple[r][2], 20);\r\n        if (ripple[r][2] - 10 > 0) {\r\n            drawRipple2(r_context, ripple[r][0], ripple[r][1], ripple[r][2] - 10, 20);\r\n        }\r\n        if (ripple[r][2] - 20 > 0) {\r\n            drawRipple3(r_context, ripple[r][0], ripple[r][1], ripple[r][2] - 20, 20);\r\n        }\r\n        if (ripple[r][2] >= ripple[r][3]) {\r\n            ripple.splice(r, 1);;\r\n            --r;\r\n            continue;\r\n        }\r\n    }\r\n}\r\n\r\nexport const drawCircle = (graph, centerX, centerY, radius, sides) => {\r\n    var theta = 0;\r\n    var x = 0;\r\n    var y = 0;\r\n    graph.save();\r\n    graph.beginPath();\r\n    for (var i = 0; i < sides; i++) {\r\n        theta = (i / sides) * 2 * Math.PI;\r\n        x = centerX + radius * Math.sin(theta);\r\n        y = centerY + radius * Math.cos(theta);\r\n        graph.lineTo(x, y);\r\n    }\r\n    graph.closePath();\r\n    graph.fill();\r\n}\r\n\r\n\r\nconst drawRipple = (graph, centerX, centerY, radius, sides) => {\r\n    var theta = 0;\r\n    var x = 0;\r\n    var y = 0;\r\n\r\n\r\n    graph.save();\r\n    graph.beginPath();\r\n    for (var i = 0; i < sides; i++) {\r\n        theta = (i / sides) * 2 * Math.PI;\r\n        x = centerX + radius * Math.sin(theta);\r\n        y = centerY + radius * Math.cos(theta);\r\n        graph.lineTo(x, y);\r\n    }\r\n    graph.closePath();\r\n    graph.lineWidth = 3;\r\n    graph.strokeStyle = 'rgba(230,230,230,' + (Math.max(0, 30 - radius) / 100) + ')';\r\n    graph.stroke();\r\n    graph.restore();\r\n}\r\n\r\nconst drawRipple2 = (graph, centerX, centerY, radius, sides) => {\r\n    var theta = 0;\r\n    var x = 0;\r\n    var y = 0;\r\n\r\n\r\n    graph.save();\r\n    graph.beginPath();\r\n    for (var i = 0; i < sides; i++) {\r\n        theta = (i / sides) * 2 * Math.PI;\r\n        x = centerX + radius * Math.sin(theta);\r\n        y = centerY + radius * Math.cos(theta);\r\n        graph.lineTo(x, y);\r\n    }\r\n    graph.closePath();\r\n    graph.lineWidth = 2;\r\n    graph.strokeStyle = 'rgba(220,220,220,' + (Math.max(0, 20 - radius) / 100) + ')';\r\n    graph.stroke();\r\n    graph.restore();\r\n}\r\n\r\nconst drawRipple3 = (graph, centerX, centerY, radius, sides) => {\r\n    var theta = 0;\r\n    var x = 0;\r\n    var y = 0;\r\n\r\n\r\n    graph.save();\r\n    graph.beginPath();\r\n    for (var i = 0; i < sides; i++) {\r\n        theta = (i / sides) * 2 * Math.PI;\r\n        x = centerX + radius * Math.sin(theta);\r\n        y = centerY + radius * Math.cos(theta);\r\n        graph.lineTo(x, y);\r\n    }\r\n    graph.closePath();\r\n    graph.lineWidth = 1;\r\n    graph.strokeStyle = 'rgba(200,200,200,' + (Math.max(0, 10 - radius) / 100) + ')';\r\n\r\n    graph.stroke();\r\n    graph.restore();\r\n}","\r\nexport const drawAimPoint = (c, playerPosition, mousePosition, playerAngle, aimPoints) => {\r\n\r\n    var context = c.getContext(\"2d\");\r\n    context.clearRect(0, 0, c.width, c.height);\r\n    context.save();\r\n\r\n    maindrawAimCircle(context, mousePosition.x, mousePosition.y, playerAngle);\r\n    drawRealAimCircle(context, aimPoints);\r\n\r\n    context.restore();\r\n}\r\n\r\nconst drawRealAimCircle = (graph, aimPoints) => {\r\n    // aimPoints = [[100,100], [100,130]];\r\n    const radius = 10;\r\n    const sides = 20;\r\n\r\n    graph.save();\r\n    for (var a = 0; a < aimPoints.length; ++a) {\r\n        var theta = 0;\r\n        var x = 0;\r\n        var y = 0;\r\n\r\n        graph.beginPath();\r\n        for (var i = 0; i < sides; i++) {\r\n            theta = (i / sides) * 2 * Math.PI;\r\n            x = aimPoints[a][0] + radius * Math.sin(theta);\r\n            y = aimPoints[a][1] + radius * Math.cos(theta);\r\n            graph.lineTo(x, y);\r\n        }\r\n        graph.closePath();\r\n        graph.strokeStyle = \"#b3198c88\";\r\n        graph.lineWidth = 3;\r\n        graph.stroke();\r\n\r\n        graph.beginPath();\r\n        for ( i = 0; i < sides; i++) {\r\n            theta = (i / sides) * 2 * Math.PI;\r\n            x = aimPoints[a][0] + (radius - 3) * Math.sin(theta);\r\n            y = aimPoints[a][1] + (radius - 3) * Math.cos(theta);\r\n            graph.lineTo(x, y);\r\n        }\r\n        graph.closePath();\r\n        graph.strokeStyle = \"#77777755\";\r\n        graph.lineWidth = 2;\r\n        graph.stroke();\r\n    }\r\n    graph.restore();\r\n}\r\n\r\nconst maindrawAimCircle = (graph, centerX, centerY, angle) => {\r\n    var theta = 0;\r\n    var x = 0;\r\n    var y = 0;\r\n\r\n    const radius = 15;\r\n    const sides = 20;\r\n\r\n    graph.save();\r\n    graph.translate(centerX, centerY);\r\n\r\n    graph.save();\r\n    graph.rotate(-Math.PI / 180 * angle);\r\n\r\n    graph.beginPath();\r\n    for (var i = 0; i < sides; i++) {\r\n        theta = (i / sides) * 2 * Math.PI;\r\n        x = radius * Math.sin(theta);\r\n        y = radius * Math.cos(theta);\r\n        graph.lineTo(x, y);\r\n    }\r\n    graph.closePath();\r\n\r\n    graph.strokeStyle = \"#77777755\";\r\n    graph.lineWidth = 3;\r\n    graph.stroke();\r\n\r\n    graph.beginPath();\r\n    for (var i = 0; i < sides; i++) {\r\n        theta = (i / sides) * 2 * Math.PI;\r\n        x = (radius-6) * Math.sin(theta);\r\n        y = (radius-6) * Math.cos(theta);\r\n        graph.lineTo(x, y);\r\n    }\r\n    graph.closePath();\r\n\r\n    graph.strokeStyle = \"#77777755\";\r\n    graph.lineWidth = 1.5;\r\n    graph.stroke();\r\n\r\n    graph.beginPath();\r\n    graph.moveTo(0, -9);\r\n    graph.lineTo(0, -22);\r\n    graph.moveTo(0, 9);\r\n    graph.lineTo(0, 22);\r\n    graph.moveTo(-9, 0);\r\n    graph.lineTo(-22, 0);\r\n    graph.moveTo(9, 0);\r\n    graph.lineTo(22, 0);\r\n\r\n    graph.closePath();\r\n\r\n    // graph.strokeStyle = \"#666666\";\r\n    graph.lineWidth = 3;\r\n    graph.stroke();\r\n\r\n    graph.restore();\r\n    graph.restore();\r\n\r\n}","import shootSound from '../sounds/shoot/HitEffectiveCommon02.wav';\r\nimport noInkSound from '../sounds/shoot/BulletHitNoDamage.wav';\r\n\r\nvar fireAudio = new Audio(shootSound);\r\nfireAudio.volume = 0.5;\r\n\r\nvar noInkAudio = new Audio(noInkSound);\r\nnoInkAudio.volume = 0.5;\r\n\r\nexport const drawBullet = (c, bullets, playerColor, p_x, p_y) => {\r\n\r\n    var context = c.getContext(\"2d\");\r\n    // context.clearRect(0, 0, c.width, c.height);\r\n\r\n    context.save();\r\n    // context.drawImage(image, 0,0,1600,900);\r\n\r\n    for (var i = 0; i < bullets.length; ++i) {\r\n        context.fillStyle = playerColor.main;\r\n        drawCircle(context, bullets[i][1], bullets[i][2], 8, 10);\r\n        drawCircleOutLine(context, bullets[i][1], bullets[i][2], 8, 10);\r\n\r\n        // play fire sound\r\n        if (bullets[i][3] === 1) {\r\n            var distance = Math.pow(Math.pow(p_x - bullets[i][1], 2) + Math.pow(p_y - bullets[i][2], 2), 0.5);\r\n            \r\n            if (distance < 800) {\r\n                fireAudio.volume = 0.5 / Math.min(5, distance/100 + 1);\r\n                fireAudio.currentTime = 0;\r\n                fireAudio.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    context.restore();\r\n\r\n}\r\n\r\nconst drawCircle = (graph, centerX, centerY, radius, sides) => {\r\n    var theta = 0;\r\n    var x = 0;\r\n    var y = 0;\r\n\r\n    graph.beginPath();\r\n    for (var i = 0; i < sides; i++) {\r\n        theta = (i / sides) * 2 * Math.PI;\r\n        x = centerX + radius * Math.sin(theta);\r\n        y = centerY + radius * Math.cos(theta);\r\n        graph.lineTo(x, y);\r\n    }\r\n    graph.closePath();\r\n    graph.fill();\r\n}\r\n\r\nconst drawCircleOutLine = (graph, centerX, centerY, radius, sides) => {\r\n    var theta = 0;\r\n    var x = 0;\r\n    var y = 0;\r\n\r\n    graph.beginPath();\r\n    for (var i = 0; i < sides; i++) {\r\n        theta = (i / sides) * 2 * Math.PI;\r\n        x = centerX + radius * Math.sin(theta);\r\n        y = centerY + radius * Math.cos(theta);\r\n        graph.lineTo(x, y);\r\n    }\r\n    graph.closePath();\r\n    graph.lineWidth = 3;\r\n    graph.strokeStyle = \"#55555533\"\r\n    graph.stroke();\r\n}\r\n","import { drawPlayer, drawSplat, drawBullet, } from '../draw'\r\n\r\nexport const drawAllPlayers = (splatRef, bulletRef, playerRef, splatAnimationRef, players, p_x, p_y, team) => {\r\n    // var splatRefContext = splatRef.getContext(\"2d\");\r\n    // splatRefContext.clearRect(0, 0, splatRef.width, splatRef.height);\r\n\r\n    var bulletRefContext = bulletRef.getContext(\"2d\");\r\n    bulletRefContext.clearRect(0, 0, bulletRef.width, bulletRef.height);\r\n\r\n    var playerRefContext = playerRef.getContext(\"2d\");\r\n    playerRefContext.clearRect(0, 0, playerRef.width, playerRef.height);\r\n\r\n    var splatAnimationRefContext = splatAnimationRef.getContext(\"2d\");\r\n    splatAnimationRefContext.clearRect(0, 0, splatAnimationRef.width, splatAnimationRef.height);\r\n\r\n    // context.clearRect(0, 0, c.width, c.height);\r\n\r\n    var l = players.length\r\n    var isTeamMate = 0;\r\n    for (var p = 0; p < l; ++p) {\r\n        if(players[p].playerTeam === team) isTeamMate = 1;\r\n        drawPlayer(playerRef, splatAnimationRef, players[p], (p === l-1)? 1:0 , isTeamMate);\r\n        // drawSplat(this.splatRef, this.splatAnimationRef, this.playerData.splats, this.playerData.playerColor, this.playerData.playerAngle, this.playerData.playerPosition);\r\n        drawSplat(splatRef, splatAnimationRef, players[p].splats, players[p].playerColor,  players[p].playerAngle,  players[p].playerPosition, p_x, p_y);\r\n\r\n        // drawBullet(this.bulletRef, this.playerData.bullets, this.playerData.playerColor);\r\n        drawBullet(bulletRef,  players[p].bullets, players[p].playerColor, p_x, p_y);\r\n    }\r\n}  \r\n","export const weapons = {\r\n    splatterShot_v1: {\r\n        main: {\r\n            type: 0, // 0 for one line gun\r\n            maxShootDistance: 400,\r\n            bulletSpeed: 30,\r\n            fireSpeed: 200, //cd time(ms) for one shot\r\n            fireInkCost: 5,\r\n            maxError: 20,\r\n            gunLength: 25,\r\n            splatSize: 75,\r\n            splatDamage: 35,\r\n            splatShapeId: [0, 1, 2],\r\n        },\r\n        sub: {},\r\n        price: 1000,\r\n    }\r\n}","export const getKeyDownState = (e, state) => {\r\n    switch (e.key) {\r\n        case 'w':\r\n        case 'W':\r\n        case 'ArrowUp':\r\n\r\n            state.playerMoveDirection.y = -1;\r\n            state.keyStrokeState.up = 1;\r\n            break;\r\n\r\n        case 's':\r\n        case 'S':\r\n        case 'ArrowDown':\r\n\r\n            state.playerMoveDirection.y = 1;\r\n            state.keyStrokeState.down = 1;\r\n            break;\r\n\r\n\r\n        case 'a':\r\n        case 'A':\r\n        case 'ArrowLeft':\r\n\r\n            state.playerMoveDirection.x = -1;\r\n            state.keyStrokeState.left = 1;\r\n\r\n            break;\r\n\r\n        case 'd':\r\n        case 'D':\r\n        case 'ArrowRight':\r\n\r\n            state.playerMoveDirection.x = 1;\r\n            state.keyStrokeState.right = 1;\r\n\r\n            break;\r\n        case ' ':\r\n            state.keyStrokeState.space = 1;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}","export const getKeyUpState = (e, state) => {\r\n    switch (e.key) {\r\n        case 'w':\r\n        case 'W':\r\n        case 'ArrowUp':\r\n\r\n            if (state.keyStrokeState.down === 1) state.playerMoveDirection.y = 1;\r\n            else state.playerMoveDirection.y = 0;\r\n\r\n            state.keyStrokeState.up = 0;\r\n            break;\r\n\r\n        case 's':\r\n        case 'S':\r\n        case 'ArrowDown':\r\n\r\n            if (state.keyStrokeState.up === 1) state.playerMoveDirection.y = -1;\r\n            else state.playerMoveDirection.y = 0;\r\n\r\n            state.keyStrokeState.down = 0;\r\n            break;\r\n\r\n        case 'a':\r\n        case 'A':\r\n        case 'ArrowLeft':\r\n\r\n            if (state.keyStrokeState.right === 1) state.playerMoveDirection.x = 1;\r\n            else state.playerMoveDirection.x = 0;\r\n\r\n            state.keyStrokeState.left = 0;\r\n            break;\r\n\r\n        case 'd':\r\n        case 'D':\r\n        case 'ArrowRight':\r\n            if (state.keyStrokeState.left === 1) state.playerMoveDirection.x = -1;\r\n            else state.playerMoveDirection.x = 0;\r\n\r\n            state.keyStrokeState.right = 0;\r\n            break;\r\n\r\n        case ' ':\r\n            state.keyStrokeState.space = 0;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}","export const getMousePos = (event, state) => {\r\n  state.mouseClient.x = event.clientX;\r\n  state.mouseClient.y = event.clientY;\r\n}\r\n\r\nexport const calculatePlayerAngle = (x1, y1, x2, y2) => {\r\n  var comp = 0;\r\n  if ( y2-y1 >= 0) {\r\n      comp = 180;\r\n  }\r\n  const dividend = x2 - x1;\r\n  const divisor = y2 - y1;\r\n  const quotient = dividend / divisor;\r\n  return radiansToDegrees(Math.atan(quotient)) * -1 + comp;\r\n};\r\n\r\nexport const radiansToDegrees = radians => ((radians * 180) / Math.PI);","import { GAME_STATE } from '../enum'\r\nimport { battleField_1 } from '../field'\r\nimport { playerWidth, playerHeight } from '../draw'\r\n\r\nexport const updatePlayerPosition = (playerData, localPlayerData) => {\r\n  const field = battleField_1;\r\n  const objects = field.rectObjects;\r\n\r\n  if (localPlayerData.gameState === GAME_STATE.GAMING) {\r\n    const p_x = playerData.playerPosition.x;\r\n    const p_y = playerData.playerPosition.y;\r\n\r\n    var speed = localPlayerData.playerMoveSpeed;\r\n\r\n\r\n    const d_x = localPlayerData.playerMoveDirection.x;\r\n    const d_y = localPlayerData.playerMoveDirection.y;\r\n    if (d_x !== 0 && d_y !== 0) {\r\n      speed = speed / 1.414;\r\n    }\r\n\r\n    var new_x = p_x + d_x * speed;\r\n    var new_y = p_y + d_y * speed;\r\n\r\n    // check field range\r\n    new_x = Math.min(Math.max(new_x, field.fieldRange.xMin + playerWidth / 2), field.fieldRange.xMax - playerWidth / 2)\r\n    new_y = Math.min(Math.max(new_y, field.fieldRange.yMin + playerHeight / 2), field.fieldRange.yMax - playerHeight / 2)\r\n\r\n    // check objects\r\n    for (var i = 0; i < objects.length; ++i) {\r\n      const centerX = objects[i][1] + objects[i][3] / 2;\r\n      const centerY = objects[i][2] + objects[i][4] / 2;\r\n\r\n      if (Math.abs(new_x - centerX) < (objects[i][3] + playerWidth) / 2 && Math.abs(new_y - centerY) < (objects[i][4] + playerHeight) / 2) {\r\n        // collision occured\r\n        const temp_new_x = p_x < centerX ? centerX - (objects[i][3] + playerWidth) / 2 : centerX + (objects[i][3] + playerWidth) / 2;\r\n        const temp_new_y = p_y < centerY ? centerY - (objects[i][4] + playerHeight) / 2 : centerY + (objects[i][4] + playerHeight) / 2;\r\n\r\n        if (Math.abs(temp_new_x - p_x) < Math.abs(temp_new_y - p_y)) {\r\n          new_x = temp_new_x;\r\n        } else if (Math.abs(temp_new_x - p_x) > Math.abs(temp_new_y - p_y)) {\r\n          new_y = temp_new_y;\r\n        } else {\r\n          new_x = temp_new_x;\r\n          new_y = temp_new_y;\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    playerData.playerPosition.x = new_x;\r\n    playerData.playerPosition.y = new_y;\r\n    return playerData.playerPosition;\r\n  }\r\n}","\r\nimport shootSound from '../sounds/shoot/HitEffectiveCommon02.wav';\r\nimport noInkSound from '../sounds/shoot/BulletHitNoDamage.wav';\r\n\r\nimport { GAME_STATE, PLAYER_STATUS } from '../enum'\r\n\r\nimport { checkFieldCollision, checkPlayerCollision } from './index';\r\n\r\nvar fireAudio = new Audio(shootSound);\r\nfireAudio.volume = 0.5;\r\n\r\nvar noInkAudio = new Audio(noInkSound);\r\nnoInkAudio.volume = 0.5;\r\n\r\n// line = []\r\nvar lines = [];\r\nvar timeLog = 0;\r\nexport const getSplats = (playerData, localPlayerData, otherPlayers) => {\r\n    const angle = playerData.playerAngle;\r\n    const p_x = playerData.playerPosition.x;\r\n    const p_y = playerData.playerPosition.y;\r\n    const m_x = localPlayerData.mousePosition.x;\r\n    const m_y = localPlayerData.mousePosition.y;\r\n\r\n    var splats = [];\r\n    var aimPoints = [];\r\n    var bullets = [];\r\n    var inkConsumption = 0;\r\n\r\n    if (localPlayerData.gameState === GAME_STATE.GAMING && playerData.playerStatus !== PLAYER_STATUS.DEAD) {\r\n        // find shoot line\r\n        switch (playerData.playerWeapon.main.type) {\r\n            case 0:\r\n                var maxShootDistance = playerData.playerWeapon.main.maxShootDistance;\r\n                var bulletSpeed = playerData.playerWeapon.main.bulletSpeed;\r\n                var fireSpeed = playerData.playerWeapon.main.fireSpeed;\r\n                var fireInkCost = playerData.playerWeapon.main.fireInkCost;\r\n                var maxError = playerData.playerWeapon.main.maxError;\r\n                var gunLength = playerData.playerWeapon.main.gunLength;\r\n                var mouseLength = Math.pow(Math.pow(m_x - p_x, 2) + Math.pow(m_y - p_y, 2), 0.5);\r\n                var shootDistance = Math.min(mouseLength, maxShootDistance);\r\n\r\n                var d_x = p_x + Math.sin(angle / 180 * Math.PI) * shootDistance;\r\n                var d_y = p_y - Math.cos(angle / 180 * Math.PI) * shootDistance;\r\n\r\n                var fieldCheckPos_a = checkFieldCollision(p_x, p_y, d_x, d_y);\r\n                var playerCheckPos_a = checkPlayerCollision(p_x, p_y, fieldCheckPos_a[0], fieldCheckPos_a[1], otherPlayers, playerData.playerUid); \r\n       \r\n                aimPoints.push([playerCheckPos_a[0], playerCheckPos_a[1]]);\r\n\r\n                d_x = p_x + Math.sin(angle / 180 * Math.PI) * shootDistance + (Math.random() - 0.5) * 2 * maxError;\r\n                d_y = p_y - Math.cos(angle / 180 * Math.PI) * shootDistance + (Math.random() - 0.5) * 2 * maxError;\r\n\r\n                var g_x = p_x + Math.sin(angle / 180 * Math.PI) * gunLength;\r\n                var g_y = p_y - Math.cos(angle / 180 * Math.PI) * gunLength;\r\n\r\n                var fieldCheckPos = checkFieldCollision(g_x, g_y, d_x, d_y);\r\n                var playerCheckPos = checkPlayerCollision(g_x, g_y, fieldCheckPos[0], fieldCheckPos[1], otherPlayers, playerData.playerUid); \r\n                var c_x = playerCheckPos[0];\r\n                var c_y = playerCheckPos[1];\r\n\r\n                var bullet_length = Math.pow(Math.pow(c_x - g_x, 2) + Math.pow(c_y - g_y, 2), 0.5);\r\n\r\n                // line (type, current_point_x, current_point_y, end_point_x, end_point_y, d_x, d_y, fireFlag)\r\n                if (localPlayerData.keyStrokeState.space === 0 && localPlayerData.mouseDownState === 1 && localPlayerData.timeStamp - timeLog > fireSpeed) {\r\n                    timeLog = localPlayerData.timeStamp;\r\n                    if (localPlayerData.inkAmount - fireInkCost >= 0) {\r\n                        inkConsumption = fireInkCost;\r\n                        lines.push([0, g_x, g_y, c_x, c_y,\r\n                            (c_x - g_x) / bullet_length * bulletSpeed, (c_y - g_y) / bullet_length * bulletSpeed, 1]);\r\n                        // fireAudio.currentTime = 0;\r\n                        // fireAudio.play();\r\n                    } else {\r\n                        noInkAudio.currentTime = 0;\r\n                        noInkAudio.play();\r\n                    }\r\n                }\r\n                break;\r\n            case 1:\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // update line and get bullet\r\n    for (var l = 0; l < lines.length; ++l) {\r\n        lines[l][1] += lines[l][5];\r\n        lines[l][2] += lines[l][6];\r\n\r\n        // bullet = [type, x, y, fireFlag]\r\n        \r\n        if(lines[l][7] === 1){\r\n            bullets.push([0, lines[l][1], lines[l][2], 1]);\r\n            lines[l][7] = 0;\r\n        }else{\r\n            bullets.push([0, lines[l][1], lines[l][2], 0]);\r\n        }\r\n\r\n        // check if create splat\r\n        if (Math.abs(lines[l][1] - lines[l][3]) < Math.abs(lines[l][5]) || Math.abs(lines[l][2] - lines[l][4]) < Math.abs(lines[l][6])) {\r\n            var splat_angle = (Math.random() - 0.5) * 2 * Math.PI; // -Pi to Pi\r\n            var splatSize = playerData.playerWeapon.main.splatSize;\r\n            var splatDamage = playerData.playerWeapon.main.splatDamage;\r\n            var splatShapeId = playerData.playerWeapon.main.splatShapeId[Math.floor(Math.random() * playerData.playerWeapon.main.splatShapeId.length)];\r\n            var splatColorID = playerData.playerColorID;\r\n\r\n            // splat [splatShapeId, pos_x, pos_y, splatAngle, splatSize, splatDamage]\r\n            splats.push([splatShapeId, lines[l][3], lines[l][4], splat_angle, splatSize, splatDamage, splatColorID]);\r\n            lines.splice(l, 1);\r\n            --l;\r\n            continue;\r\n        }\r\n    }\r\n\r\n    playerData.bullets = bullets;\r\n    playerData.splats = splats;\r\n    return [aimPoints, inkConsumption];\r\n}","import {  PLAYER_STATUS } from '../enum'\r\n//var dive_counter = 0;\r\n\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? [\r\n        parseInt(result[1], 16),\r\n        parseInt(result[2], 16),\r\n        parseInt(result[3], 16)\r\n    ] : null;\r\n}\r\n\r\nexport const getPlayerStatus = (c, playerData, localPlayerData) => {\r\n    const ownColor = hexToRgb(playerData.playerColor.main);\r\n    \r\n    var context = c.getContext('2d');\r\n    var p = context.getImageData(playerData.playerPosition.x - 25, playerData.playerPosition.y - 25, 51, 51).data;\r\n\r\n    var own_color_count = 0;\r\n    var empty_color_count = 0;\r\n\r\n    for (var i = 0; i < 11; ++i) {\r\n        for (var j = 0; j < 11; ++j) {\r\n            if (p[(51 * i * 5 + j * 5) * 4 + 3] !== 0) {\r\n                // not empty\r\n                if (p[(51 * i * 5 + j * 5) * 4] === ownColor[0] && p[(51 * i * 5 + j * 5) * 4 + 1] === ownColor[1] && p[(51 * i * 5 + j * 5) * 4 + 2] === ownColor[2]) {\r\n                    own_color_count += 1;\r\n                }\r\n            } else {\r\n                empty_color_count += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    var field_property = 0;// 0 for in space, 1 for in enemy, 2 for in own\r\n    if (empty_color_count / 121 < 0.5) {\r\n        field_property = own_color_count < (121 - own_color_count - empty_color_count) ? 1 : 2;\r\n    }\r\n\r\n    switch (field_property) {\r\n        case 0:\r\n            if (localPlayerData.mouseDownState === 1) {\r\n                playerData.playerStatus = PLAYER_STATUS.ATTACKING_SPACE;\r\n            }\r\n            else if (localPlayerData.keyStrokeState.space === 0) {\r\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\r\n                    playerData.playerStatus = PLAYER_STATUS.STANDING_SPACE;\r\n                } else {\r\n                    playerData.playerStatus = PLAYER_STATUS.WALKING_SPACE;\r\n                }\r\n            } else {\r\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\r\n                    playerData.playerStatus = PLAYER_STATUS.DIVING_SPACE;\r\n                } else {\r\n                    playerData.playerStatus = PLAYER_STATUS.SWIMMING_SPACE;\r\n                }\r\n            }\r\n            break;\r\n        case 1:\r\n            if (localPlayerData.mouseDownState === 1) {\r\n                playerData.playerStatus = PLAYER_STATUS.ATTACKING_ENEMY;\r\n            }\r\n            else if (localPlayerData.keyStrokeState.space === 0) {\r\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\r\n                    playerData.playerStatus = PLAYER_STATUS.STANDING_ENEMY;\r\n                } else {\r\n                    playerData.playerStatus = PLAYER_STATUS.WALKING_ENEMY;\r\n                }\r\n            } else {\r\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\r\n                    playerData.playerStatus = PLAYER_STATUS.DIVING_ENEMY;\r\n                } else {\r\n                    playerData.playerStatus = PLAYER_STATUS.SWIMMING_ENEMY;\r\n                }\r\n            }\r\n            break;\r\n\r\n        case 2:\r\n            if (localPlayerData.mouseDownState === 1) {\r\n                playerData.playerStatus = PLAYER_STATUS.ATTACKING_OWN;\r\n            }\r\n            else if (localPlayerData.keyStrokeState.space === 0) {\r\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\r\n                    playerData.playerStatus = PLAYER_STATUS.STANDING_OWN;\r\n                } else {\r\n                    playerData.playerStatus = PLAYER_STATUS.WALKING_OWN;\r\n                }\r\n            } else {\r\n                if (localPlayerData.playerMoveDirection.x === 0 && localPlayerData.playerMoveDirection.y === 0) {\r\n                    playerData.playerStatus = PLAYER_STATUS.DIVING_OWN;\r\n                } else {\r\n                    playerData.playerStatus = PLAYER_STATUS.SWIMMING_OWN;\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\n// export const PLAYER_STATUS = {\r\n//     STANDING_OWN: 0,\r\n//     WALKING_OWN: 1,\r\n//     DIVING_OWN: 2,\r\n//     SWIMMING_OWN: 3,\r\n//     ATTACKING_OWN: 4,\r\n\r\n//     STANDING_SPACE: 5,\r\n//     WALKING_SPACE: 6,\r\n//     DIVING_SPACE: 7,\r\n//     SWIMMING_SPACE: 8,\r\n//     ATTACKING_SPACE: 9,\r\n\r\n//     STANDING_ENEMY: 10,\r\n//     WALKING_ENEMY: 11,\r\n//     DIVING_ENEMY: 12,\r\n//     SWIMMING_ENEMY: 13,\r\n//     ATTACKING_ENEMY: 14,\r\n//   };","import { GAME_STATE, PLAYER_STATUS } from '../enum'\r\nexport const getPlayerSpeed = (playerData, localPlayerData) => {\r\n    switch (playerData.playerStatus) {\r\n        case PLAYER_STATUS.STANDING_OWN: localPlayerData.playerMoveSpeed = 4; break;\r\n        case PLAYER_STATUS.WALKING_OWN: localPlayerData.playerMoveSpeed = 4; break;\r\n        case PLAYER_STATUS.DIVING_OWN: localPlayerData.playerMoveSpeed = 6; break;\r\n        case PLAYER_STATUS.SWIMMING_OWN: localPlayerData.playerMoveSpeed = 6; break;\r\n        case PLAYER_STATUS.ATTACKING_OWN: localPlayerData.playerMoveSpeed = 2.5; break;\r\n\r\n        case PLAYER_STATUS.STANDING_SPACE: localPlayerData.playerMoveSpeed = 3; break;\r\n        case PLAYER_STATUS.WALKING_SPACE: localPlayerData.playerMoveSpeed = 3; break;\r\n        case PLAYER_STATUS.DIVING_SPACE: localPlayerData.playerMoveSpeed = 1; break;\r\n        case PLAYER_STATUS.SWIMMING_SPACE: localPlayerData.playerMoveSpeed = 1; break;\r\n        case PLAYER_STATUS.ATTACKING_SPACE: localPlayerData.playerMoveSpeed = 1; break;\r\n\r\n        case PLAYER_STATUS.STANDING_ENEMY: localPlayerData.playerMoveSpeed = 1.5; break;\r\n        case PLAYER_STATUS.WALKING_ENEMY: localPlayerData.playerMoveSpeed = 1.5; break;\r\n        case PLAYER_STATUS.DIVING_ENEMY: localPlayerData.playerMoveSpeed = 1.5; break;\r\n        case PLAYER_STATUS.SWIMMING_ENEMY: localPlayerData.playerMoveSpeed = 1.5; break;\r\n        case PLAYER_STATUS.ATTACKING_ENEMY: localPlayerData.playerMoveSpeed = 0.5; break;\r\n        case PLAYER_STATUS.DEAD: localPlayerData.playerMoveSpeed = 0; break;\r\n        \r\n        default: localPlayerData.playerMoveSpeed = 0; break;\r\n    }\r\n    switch (playerData.gameState) {\r\n        case GAME_STATE.FREEZE: localPlayerData.playerMoveSpeed = 0; break;\r\n        case GAME_STATE.FINISH: localPlayerData.playerMoveSpeed = 0; break;\r\n        default: break;\r\n    }\r\n}","import { PLAYER_STATUS } from '../enum'\r\nexport const getInkAmount = (inkConsumption, playerData, localPlayerData) => {\r\n    var new_inkAmount = localPlayerData.inkAmount;\r\n    var new_playerHealth = localPlayerData.playerHealth;\r\n\r\n    new_inkAmount = new_inkAmount - inkConsumption;\r\n\r\n    var restoreInk = 0;\r\n    var restoreHP = 0;\r\n    switch (playerData.playerStatus) {\r\n        case PLAYER_STATUS.STANDING_OWN: restoreInk = 0.1; restoreHP = 0.2; break;\r\n        case PLAYER_STATUS.WALKING_OWN: restoreInk = 0.1; restoreHP = 0.2; break;\r\n        case PLAYER_STATUS.DIVING_OWN: restoreInk = 0.5; restoreHP = 0.8; break;\r\n        case PLAYER_STATUS.SWIMMING_OWN: restoreInk = 1; restoreHP = 1.5; break;\r\n        case PLAYER_STATUS.ATTACKING_OWN: restoreInk = 0.1; restoreHP = 0.2; break;\r\n\r\n        case PLAYER_STATUS.STANDING_SPACE: restoreInk = 0.1; restoreHP = 0.1; break;\r\n        case PLAYER_STATUS.WALKING_SPACE: restoreInk = 0.1; restoreHP = 0.1; break;\r\n        case PLAYER_STATUS.DIVING_SPACE: restoreInk = 0.1; restoreHP = 0.1; break;\r\n        case PLAYER_STATUS.SWIMMING_SPACE: restoreInk = 0.1; restoreHP = 0.1; break;\r\n        case PLAYER_STATUS.ATTACKING_SPACE: restoreInk = 0.1; restoreHP = 0.1; break;\r\n\r\n        case PLAYER_STATUS.STANDING_ENEMY: restoreInk = 0.1; restoreHP = 0; break;\r\n        case PLAYER_STATUS.WALKING_ENEMY: restoreInk = 0.1; restoreHP = 0; break;\r\n        case PLAYER_STATUS.DIVING_ENEMY: restoreInk = 0.1; restoreHP = 0; break;\r\n        case PLAYER_STATUS.SWIMMING_ENEMY: restoreInk = 0.1; restoreHP = 0; break;\r\n        case PLAYER_STATUS.ATTACKING_ENEMY: restoreInk = 0.1; restoreHP = 0; break;\r\n        default: restoreInk = 0; restoreHP = 0; break;\r\n    }\r\n\r\n    new_inkAmount = new_inkAmount + restoreInk;\r\n    new_inkAmount = Math.max(Math.min(new_inkAmount, 100), 0);\r\n\r\n    new_playerHealth = new_playerHealth + restoreHP;\r\n    new_playerHealth = Math.max(Math.min(new_playerHealth, 100), 0);\r\n\r\n    localPlayerData.inkAmount = new_inkAmount;\r\n    localPlayerData.playerHealth = new_playerHealth;\r\n\r\n    return [new_inkAmount, new_playerHealth];\r\n}","// export const getLineIntersection = (l1_x1, l1_y1, l1_x2, l1_y2, l2_x1, l2_y1, l2_x2, l2_y2) => {\r\n//     var l1_m = (l1_y2 - l1_y1) / (l1_x2 - l1_x1);\r\n//     var l2_m = (l2_y2 - l2_y1) / (l2_x2 - l2_x1);\r\n//     if (Number.isFinite(l1_m)) l1_m = 1e10;\r\n//     if (Number.isFinite(l2_m)) l2_m = 1e10;\r\n//     const cal_x = (l1_m * l1_x1 - l2_m * l2_x1 + l2_y1 - l1_y1) / (l1_m - l2_m);\r\n//     const cal_y = (l1_y1 / l1_m - l2_y1 / l2_m + l2_x1 - l1_x1) / (1 / l1_m - 1 / l2_m);\r\n\r\n//     // var cal_y = l1_m * (x - l1_x1) + l1_y1;\r\n//     // var cal_x = (y - l1_y1) / l1_m + l1_x1;\r\n\r\n//     // console.log(\"x:\", x);\r\n//     // console.log(\"y:\", y);\r\n\r\n//     // var cal_y = 0;\r\n//     // var cal_x = 0;\r\n\r\n//     var com_1_max = l1_x1 > l1_x2 ? l1_x1 : l1_x2;\r\n//     var com_1_min = l1_x1 < l1_x2 ? l1_x1 : l1_x2;\r\n//     var com_2_max = l1_y1 > l1_y2 ? l1_y1 : l1_y2;\r\n//     var com_2_min = l1_y1 < l1_y2 ? l1_y1 : l1_y2;\r\n//     if (cal_x <= com_1_max && cal_x >= com_1_min && cal_y <= com_2_max && cal_y >= com_2_min) {\r\n//         // in line 1\r\n//         com_1_max = l2_x1 > l2_x2 ? l2_x1 : l2_x2;\r\n//         com_1_min = l2_x1 < l2_x2 ? l2_x1 : l2_x2;\r\n//         com_2_max = l2_y1 > l2_y2 ? l2_y1 : l2_y2;\r\n//         com_2_min = l2_y1 < l2_y2 ? l2_y1 : l2_y2;\r\n//         if (cal_x <= com_1_max && cal_x >= com_1_min && cal_y <= com_2_max && cal_y >= com_2_min) {\r\n//             // in line 2\r\n//             return [cal_x, cal_y];\r\n//         }\r\n//     }\r\n//     // return [null, null];\r\n//     return [cal_x, cal_y];\r\n// }\r\n\r\nexport const getLineIntersection = (x1, y1, x2, y2, x3, y3, x4, y4) =>  {\r\n\r\n    // Check if none of the lines are of length 0\r\n      if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\r\n          return false;\r\n      }\r\n  \r\n      var denominator = ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\r\n  \r\n    // Lines are parallel\r\n      if (denominator === 0) {\r\n          return false;\r\n      }\r\n  \r\n      let ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\r\n      let ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator;\r\n  \r\n    // is the intersection along the segments\r\n      if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\r\n          return false;\r\n      }\r\n  \r\n    // Return a object with the x and y coordinates of the intersection\r\n      let x = x1 + ua * (x2 - x1);\r\n      let y = y1 + ua * (y2 - y1);\r\n  \r\n      return {x:x, y:y};\r\n  }","import { playerWidth, playerHeight } from '../draw'\r\nimport { getLineIntersection } from './getLineIntersection'\r\nimport { battleField_1 } from '../field'\r\nimport { GAME_STATE, PLAYER_STATUS } from '../enum'\r\n\r\nexport const checkFieldCollision = (p_x, p_y, d_x, d_y) => {\r\n    const field = battleField_1;\r\n\r\n\r\n    var c_x = d_x;\r\n    var c_y = d_y;\r\n\r\n    var realShootDistance = Math.pow(Math.pow(c_x - p_x, 2) + Math.pow(c_y - p_y, 2), 0.5);\r\n    var tempShootDistance;\r\n    // check rectobjects\r\n    var objects = field.rectObjects;\r\n    for (var j = 0; j < objects.length; ++j) {\r\n        const o_x1 = objects[j][1];\r\n        const o_y1 = objects[j][2];\r\n        const o_x2 = objects[j][1] + objects[j][3];\r\n        const o_y2 = objects[j][2] + objects[j][4];\r\n\r\n        var interSections = [];\r\n\r\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x1, o_y2));\r\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x2, o_y1));\r\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x2, o_y1, o_x2, o_y2));\r\n        interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y2, o_x2, o_y2));\r\n\r\n        for (var i = 0; i < interSections.length; ++i) {\r\n            if (interSections[i] !== false) {\r\n                tempShootDistance = Math.pow(Math.pow(interSections[i].x - p_x, 2) + Math.pow(interSections[i].y - p_y, 2), 0.5);\r\n                if (tempShootDistance < realShootDistance) {\r\n                    realShootDistance = tempShootDistance;\r\n                    c_x = interSections[i].x;\r\n                    c_y = interSections[i].y;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // check polyobjects\r\n    objects = field.polyObjects;\r\n    for (var j = 0; j < objects.length; ++j) {\r\n        const n = objects[j].length;\r\n        var interSection;\r\n\r\n        for (var i = 1; i < n; ++i) {\r\n            if (i === n - 1) {\r\n                interSection = getLineIntersection(p_x, p_y, c_x, c_y, objects[j][i][0], objects[j][i][1], objects[j][1][0], objects[j][1][1]);\r\n                if (interSection !== false) {\r\n                    tempShootDistance = Math.pow(Math.pow(interSection.x - p_x, 2) + Math.pow(interSection.y - p_y, 2), 0.5);\r\n                    if (tempShootDistance < realShootDistance) {\r\n                        realShootDistance = tempShootDistance;\r\n                        c_x = interSection.x;\r\n                        c_y = interSection.y;\r\n                    }\r\n                }\r\n            } else {\r\n                interSection = getLineIntersection(p_x, p_y, c_x, c_y, objects[j][i][0], objects[j][i][1], objects[j][i + 1][0], objects[j][i + 1][1]);\r\n                // console.log(interSection);\r\n\r\n                if (interSection !== false) {\r\n                    tempShootDistance = Math.pow(Math.pow(interSection.x - p_x, 2) + Math.pow(interSection.y - p_y, 2), 0.5);\r\n                    if (tempShootDistance < realShootDistance) {\r\n                        realShootDistance = tempShootDistance;\r\n                        c_x = interSection.x;\r\n                        c_y = interSection.y;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // check fieldRange\r\n    const o_x1 = field.fieldRange.xMin;\r\n    const o_y1 = field.fieldRange.yMin;\r\n    const o_x2 = field.fieldRange.xMax;\r\n    const o_y2 = field.fieldRange.yMax;\r\n\r\n    var interSections = [];\r\n\r\n    interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x1, o_y2));\r\n    interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x2, o_y1));\r\n    interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x2, o_y1, o_x2, o_y2));\r\n    interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y2, o_x2, o_y2));\r\n\r\n    for (var i = 0; i < interSections.length; ++i) {\r\n        if (interSections[i] !== false) {\r\n            const tempShootDistance = Math.pow(Math.pow(interSections[i].x - p_x, 2) + Math.pow(interSections[i].y - p_y, 2), 0.5);\r\n            if (tempShootDistance < realShootDistance) {\r\n                realShootDistance = tempShootDistance;\r\n                c_x = interSections[i].x;\r\n                c_y = interSections[i].y;\r\n            }\r\n        }\r\n    }\r\n\r\n    return [c_x, c_y];\r\n}\r\n\r\n// players = [..., [pos_x, pos_y], ...]\r\nexport const checkPlayerCollision = (p_x, p_y, c_x, c_y, players, own_uid) => {\r\n    for (var j = 0; j < players.length; ++j) {\r\n        if (players[j].playerUid !== own_uid && players[j].playerStatus !== PLAYER_STATUS.DEAD) {\r\n            const o_x1 = players[j].playerPosition.x - playerWidth / 2;\r\n            const o_y1 = players[j].playerPosition.y - playerHeight / 2;\r\n            const o_x2 = players[j].playerPosition.x + playerWidth / 2;\r\n            const o_y2 = players[j].playerPosition.y + playerHeight / 2;\r\n\r\n            var interSections = [];\r\n            interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x1, o_y2));\r\n            interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y1, o_x2, o_y1));\r\n            interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x2, o_y1, o_x2, o_y2));\r\n            interSections.push(getLineIntersection(p_x, p_y, c_x, c_y, o_x1, o_y2, o_x2, o_y2));\r\n\r\n            var realShootDistance = 10000;\r\n            for (var i = 0; i < interSections.length; ++i) {\r\n                if (interSections[i] !== false) {\r\n                    var tempShootDistance = Math.pow(Math.pow(interSections[i].x - p_x, 2) + Math.pow(interSections[i].y - p_y, 2), 0.5);\r\n                    if (tempShootDistance < realShootDistance) {\r\n                        realShootDistance = tempShootDistance;\r\n                        c_x = interSections[i].x;\r\n                        c_y = interSections[i].y;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return [c_x, c_y];\r\n}","import { battleField_1 } from '../field'\r\nimport { GAME_STATE } from '../enum'\r\n\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? [\r\n        parseInt(result[1], 16),\r\n        parseInt(result[2], 16),\r\n        parseInt(result[3], 16)\r\n    ] : null;\r\n}\r\n\r\n\r\nexport const getGameResult = (fieldRef, splatRef, playerData, localPlayerData) => {\r\n    if (localPlayerData.gameState === GAME_STATE.FREEZE) {\r\n\r\n        var sxt = splatRef.getContext('2d');\r\n        sxt.drawImage(fieldRef, 0, 0);\r\n\r\n        const fildWidth = battleField_1.fieldRange.xMax - battleField_1.fieldRange.xMin;\r\n        const fildHeight = battleField_1.fieldRange.yMax - battleField_1.fieldRange.yMin;\r\n        var result = sxt.getImageData(battleField_1.fieldRange.xMin, battleField_1.fieldRange.yMin, fildWidth, fildHeight).data;\r\n        var resultImage = new Image();\r\n        resultImage.src = splatRef.toDataURL();\r\n\r\n        var own_color = hexToRgb(playerData.playerColor.main);\r\n        var enemyColor = hexToRgb(localPlayerData.enemyColor.main);\r\n\r\n        var space_count = 0;\r\n        var own_field_count = 0;\r\n        var enemy_field_count = 0;\r\n\r\n        for (var i = 0; i < fildHeight; ++i) {\r\n            for (var j = 0; j < fildWidth; ++j) {\r\n                // console.log([result[(i*fildWidth+j)*4], result[(i*fildWidth+j)*4+1], result[(i*fildWidth+j)*4+2], result[(i*fildWidth+j)*4+3] ])\r\n                if (result[(i * fildWidth + j) * 4] === 0 && result[(i * fildWidth + j) * 4 + 1] === 0 && result[(i * fildWidth + j) * 4 + 2] === 0 && result[(i * fildWidth + j) * 4 + 3] === 0) {\r\n                    space_count += 1;\r\n                }\r\n                else if (result[(i * fildWidth + j) * 4] === own_color[0] && result[(i * fildWidth + j) * 4 + 1] === own_color[1] && result[(i * fildWidth + j) * 4 + 2] === own_color[2]) {\r\n                    own_field_count += 1;\r\n                } else if (result[(i * fildWidth + j) * 4] === enemyColor[0] && result[(i * fildWidth + j) * 4 + 1] === enemyColor[1] && result[(i * fildWidth + j) * 4 + 2] === enemyColor[2]) {\r\n                    enemy_field_count += 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        const own_result = own_field_count / (space_count + own_field_count + enemy_field_count);\r\n        const enem_result = enemy_field_count / (space_count + own_field_count + enemy_field_count);\r\n\r\n        const teamA_result = playerData.playerTeam === 'A' ? own_result : enem_result;\r\n        const teamB_result = playerData.playerTeam === 'B' ? own_result : enem_result;\r\n        return { A: teamA_result, B: teamB_result, resultImage: resultImage };\r\n    }\r\n}\r\n\r\n // var output = this.splatRef.toDataURL();\r\n        // var image = this.splatRef.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\"); ","import { playerWidth } from '../draw'\r\nimport {  PLAYER_STATUS } from '../enum'\r\n\r\nexport const getPlayerHealth = (playerData, localPlayerData, players) => {\r\n    if (playerData.playerStatus !== PLAYER_STATUS.DEAD) {\r\n        const p_x = playerData.playerPosition.x;\r\n        const p_y = playerData.playerPosition.y;\r\n\r\n        for (var p = 0; p < players.length; ++p) {\r\n            var splats = players[p].splats;\r\n            for (var s = 0; s < splats.length; ++s) {\r\n                // splat [splatShapeId, pos_x, pos_y, splatAngle, splatSize, splatDamage]\r\n                var distance = Math.pow(Math.pow(p_x - splats[s][1], 2) + Math.pow(p_y - splats[s][2], 2), 0.5);\r\n                var damage = 0;\r\n                const minDistance = Math.abs(splats[s][4] - playerWidth / 2)\r\n                const maxDistance = (splats[s][4] + playerWidth / 2);\r\n\r\n                if (distance > maxDistance) {\r\n                    damage = 0;\r\n                } else if (distance < minDistance) {\r\n                    damage = splats[s][5];\r\n                } else {\r\n                    damage = (distance - minDistance) / (maxDistance - minDistance) * splats[s][5];\r\n                }\r\n                localPlayerData.playerHealth = localPlayerData.playerHealth - damage;\r\n\r\n\r\n            }\r\n            if (localPlayerData.playerHealth <= 0) {\r\n                //killed\r\n                localPlayerData.playerHealth = 0;\r\n                playerData.playerStatus = PLAYER_STATUS.DEAD;\r\n\r\n                return { \r\n                    roomId: playerData.roomId,\r\n                    killerUid: players[p].playerUid, \r\n                    killerName: players[p].playerName, \r\n                    killedUid: playerData.playerUid, \r\n                    killedName: playerData.playerName };\r\n            }\r\n\r\n        }\r\n    }\r\n    return null;\r\n}","import React from 'react';\r\nimport './inkBar.css';\r\nimport inkBarSVG from '../images/inkBar.svg'\r\nimport ReactSVG from 'react-svg'\r\nimport { COLOR_ASSET } from './ColorAssets'\r\n\r\n\r\nclass InkBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inkColor: this.props.inkColor,\r\n            inkAmount: this.props.inkAmount,\r\n            inkBarPosition: { x: window.innerWidth-80, y: window.innerHeight - 400 },\r\n        }\r\n\r\n        console.log(this.state.inkColor)\r\n    }\r\n    hexToRgb(hex) {\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? [\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16)\r\n        ] : null;\r\n    }\r\n    render() {\r\n        const inkBarStyle = {\r\n            //fill: this.state.inkColor.main,\r\n            stroke: 'none',\r\n        };\r\n        const inkBarGlow = {\r\n            fill: this.state.inkColor.main,\r\n            filter: \"drop-shadow(0px 0px 5px \" + this.state.inkColor.glow + \")\"\r\n        }\r\n        const inkBarBaseStyle = {\r\n            fill: 'rgba(50,50,50,0.3)',\r\n            'stroke-width': 5,\r\n            stroke: '#888888',\r\n        };\r\n        return (\r\n            <g>\r\n                {/* <text className=\"inkBarNum\" x={this.state.inkBarPosition.x} y={this.state.inkBarPosition.y}>\r\n                    {this.props.inkAmount}\r\n                </text> */}\r\n                {/*<rect className=\"inkBarBase\" x={this.state.inkBarPosition.x} y={this.state.inkBarPosition.y}\r\n                    width=\"400\" height=\"50\" style={inkBarBaseStyle} />\r\n                */}\r\n                <rect className=\"inkBar\" x={this.state.inkBarPosition.x } y={this.state.inkBarPosition.y + 3.4*(100-this.props.inkAmount)}\r\n                    width=\"50\" height={3.4 * this.props.inkAmount} style={inkBarGlow} />\r\n                <svg width=\"1000\" height=\"1000\" style={inkBarStyle} x={this.state.inkBarPosition.x - 10} y={this.state.inkBarPosition.y-330}>\r\n                    <image href={inkBarSVG} width=\"70\" height=\"1000\" style={inkBarStyle}/>\r\n                </svg>\r\n            </g>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default InkBar;","import React, {Component} from 'react'\r\n\r\n\r\nclass HP extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            HPPosition: { x: window.innerWidth-140, y: window.innerHeight - 260 },\r\n        }\r\n    }\r\n    render(){\r\n        var Hpcolor = this.props.hp < 30? \"#CC0033\": \"#FFFFFF\"\r\n        var hp = parseInt(this.props.hp)\r\n        return(\r\n            <g>\r\n                <text x={this.state.HPPosition.x-10} y={this.state.HPPosition.y-30} width=\"45\"\r\n                    style={{fill: Hpcolor, fontSize: \"30px\"}}>\r\n                    {hp}\r\n                </text>\r\n                <text x={this.state.HPPosition.x} y={this.state.HPPosition.y-10} width=\"30\">\r\n                    /100\r\n                </text>\r\n                <rect x={this.state.HPPosition.x} y={this.state.HPPosition.y + 2 * (100 - hp)}\r\n                    width=\"30\" height={2 * hp + 5} style={{fill: Hpcolor}} />\r\n            </g>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HP","import React from 'react';\r\nimport './Game.css';\r\nimport { drawPlayer, drawField, drawSplat, drawAimPoint, drawBullet, drawAllPlayers, } from '../draw'\r\nimport { COLOR_ASSET } from './ColorAssets'\r\nimport { weapons } from '../weapons'\r\nimport { Redirect } from 'react-router'\r\nimport { battleField_1 } from '../field'\r\n\r\nimport { GAME_STATE, PLAYER_STATUS } from '../enum'\r\nimport {\r\n    getKeyUpState,\r\n    getKeyDownState,\r\n    getMousePos,\r\n    calculatePlayerAngle,\r\n    updatePlayerPosition,\r\n    getSplats,\r\n    getPlayerStatus,\r\n    getPlayerSpeed,\r\n    getInkAmount,\r\n    getGameResult,\r\n    getPlayerHealth,\r\n} from '../utils'\r\n\r\nimport InkBar from './inkBar';\r\nimport HP from './HP'\r\nimport fightSound from '../sounds/Fight.mp3'\r\nimport whistle from '../sounds/whistle.wav'\r\nimport { isJSXClosingFragment } from '@babel/types';\r\n\r\n\r\nlet audio = new Audio(fightSound);\r\naudio.volume = 0.5;\r\n\r\nlet audio2 = new Audio(whistle);\r\naudio.volume = 0.3;\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // data that most emit to server\r\n        const spawnPoint_x = this.props.team === 'A' ? battleField_1.spawnPoint.teamA.x : battleField_1.spawnPoint.teamB.x;\r\n        const spawnPoint_y = this.props.team === 'A' ? battleField_1.spawnPoint.teamA.y : battleField_1.spawnPoint.teamB.y;\r\n\r\n        this.playerData = {\r\n            roomId: this.props.roomId,\r\n            teamColor: this.props.teamColor,\r\n\r\n            playerName: this.props.name,\r\n            playerUid: this.props.uid,\r\n            playerTeam: this.props.team,\r\n\r\n            playerColor: COLOR_ASSET[this.props.teamColor[this.props.team]],\r\n            playerColorID: this.props.teamColor[this.props.team],\r\n\r\n            playerPosition: { x: spawnPoint_x, y: spawnPoint_y },\r\n            playerAngle: 0,\r\n            playerStatus: PLAYER_STATUS.STANDING_SPACE,\r\n            playerWeapon: weapons.splatterShot_v1,\r\n\r\n            bullets: [],\r\n            splats: [],\r\n        };\r\n\r\n        // data that only holded by local front end\r\n        this.localPlayerData = {\r\n            spawnPosition: { x: spawnPoint_x, y: spawnPoint_y },\r\n            respawnTime: 2000,\r\n            gameState: GAME_STATE.GAMING,\r\n            roomId: this.props.roomId,\r\n\r\n            playerMoveSpeed: 5,\r\n            playerMoveDirection: { x: 0, y: 0 },\r\n            inkAmount: 100,\r\n            playerHealth: 100,\r\n            keyStrokeState: { left: 0, right: 0, up: 0, down: 0, space: 0, g: 0 },\r\n            mousePosition: { x: 0, y: 0 },\r\n            mouseClient: { x: 0, y: 0 },\r\n            mouseDownState: 0,\r\n\r\n            timeStamp: Date.now(), // Date.now()\r\n            gameTime: Date.now(), // remaining time for the game\r\n\r\n            deadTime: 0, //record deadtime\r\n            timeColor: \"#FFFFFF\",\r\n\r\n            enemyColor: this.props.team === 'A' ? COLOR_ASSET[this.props.teamColor['B']] : COLOR_ASSET[this.props.teamColor['A']],\r\n            result: { teamA: 0, teamB: 0 },\r\n\r\n        }\r\n\r\n        //data that recieved from the server\r\n        this.otherPlayerData = [];\r\n\r\n        this.calculateResultFlag = 0;\r\n        this.mouseScale = 1;\r\n\r\n        this.updateIntervalId = 0;\r\n        this.anounceIntervalId = 0;\r\n\r\n        this.state = {\r\n            gameBoardWidth: 1600,\r\n            gameBoardHeight: 900,\r\n            cameraSize: 1000,\r\n\r\n            playerPosition: { x: 100, y: 100 }, // to update camera position \r\n            inkAmount: 100, // to update inkbar \r\n            healthAmount: 100,\r\n            anouncement: [],\r\n            gameResult: { A: 0, B: 0 },\r\n            winOrLose: \"Tie\",\r\n            resultImage: null,\r\n        }\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        this.props.socket.emit('enterGame', { ...this.playerData });\r\n\r\n        this.props.socket.on('updateGame', (data) => {\r\n            this.otherPlayerData = data.allPlayers.filter(p => p.playerUid !== this.playerData.playerUid);\r\n        })\r\n\r\n        this.props.socket.on('getGameTime', (data) => {\r\n            this.localPlayerData.gameTime = data.gameTime;\r\n        })\r\n\r\n        this.props.socket.on('killEvent', (data) => {\r\n            // console.log(data.killerName, data.killedName);\r\n\r\n            var temp = this.state.anouncement;\r\n            temp.push([data.killerName, data.killedName]);\r\n            this.setState({ anouncement: temp });\r\n\r\n            if (this.localPlayerData.gameState === GAME_STATE.GAMING) {\r\n                this.anounceIntervalId = setTimeout(() => {\r\n                    this.setState((prevState) => (\r\n                        { anouncement: prevState.anouncement.splice(1) }\r\n                    ))\r\n                }, 3000);\r\n            }\r\n        })\r\n\r\n        window.addEventListener(\"keyup\", this.onKeyUp);\r\n        window.addEventListener(\"keydown\", this.onKeyDown);\r\n        window.addEventListener(\"mousemove\", this.trackMouse);\r\n        window.addEventListener(\"mousedown\", this.mouseDown);\r\n        window.addEventListener(\"mouseup\", this.mouseUp);\r\n\r\n        audio.currentTime = 0;\r\n        audio.play();\r\n    }\r\n\r\n    onKeyDown = e => {\r\n        getKeyDownState(e, this.localPlayerData);\r\n    }\r\n\r\n    onKeyUp = e => {\r\n        getKeyUpState(e, this.localPlayerData);\r\n    }\r\n\r\n    trackMouse = e => {\r\n        getMousePos(e, this.localPlayerData);\r\n    }\r\n\r\n    mouseDown = e => {\r\n        this.localPlayerData.mouseDownState = 1;\r\n    }\r\n    mouseUp = e => {\r\n        this.localPlayerData.mouseDownState = 0;\r\n    }\r\n\r\n    updateGame = () => {\r\n        if (this.localPlayerData.gameState === GAME_STATE.GAMING || this.localPlayerData.gameState === GAME_STATE.FREEZE) {\r\n            // drawOtherPlayers(this.splatRef, this.bulletRef, this.playerRef, this.splatAnimationRef, this.otherPlayerData);\r\n\r\n            // measure and update screen scale\r\n            const windowHeight = window.innerHeight;\r\n            const windowWidth = window.innerWidth;\r\n            this.mouseScale = windowWidth > windowHeight ? this.state.cameraSize / windowWidth : this.state.cameraSize / windowHeight;\r\n\r\n            // get and update mouse position\r\n            let canvas = this.groundRef;\r\n            let rect = canvas.getBoundingClientRect();\r\n            this.localPlayerData.mousePosition = {\r\n                x: (this.localPlayerData.mouseClient.x - rect.left) * this.mouseScale,\r\n                y: (this.localPlayerData.mouseClient.y - rect.top) * this.mouseScale\r\n            };\r\n\r\n            // get and update player angle\r\n            this.playerData.playerAngle = calculatePlayerAngle(\r\n                this.playerData.playerPosition.x, this.playerData.playerPosition.y,\r\n                this.localPlayerData.mousePosition.x, this.localPlayerData.mousePosition.y\r\n            );\r\n\r\n            // get and update new player status according field property\r\n            if (this.playerData.playerStatus !== PLAYER_STATUS.DEAD) {\r\n                getPlayerStatus(this.splatRef, this.playerData, this.localPlayerData);\r\n            }\r\n            // get and update player health according to \r\n            let killed_msg = getPlayerHealth(this.playerData, this.localPlayerData, this.otherPlayerData);\r\n            if (killed_msg !== null) {\r\n                // console.log(killed_msg);\r\n                this.props.socket.emit('killEvent', killed_msg);\r\n                this.localPlayerData.deadTime = this.localPlayerData.timeStamp;\r\n            }\r\n\r\n            //if dead, wait to respawn\r\n            // console.log(this.playerData.playerStatus)\r\n            if (this.playerData.playerStatus === PLAYER_STATUS.DEAD && this.localPlayerData.timeStamp - this.localPlayerData.deadTime >= this.localPlayerData.respawnTime) {\r\n                // respawn \r\n                this.playerData.playerStatus = PLAYER_STATUS.STANDING_SPACE;\r\n                this.playerData.playerPosition = this.localPlayerData.spawnPosition;\r\n                this.localPlayerData.inkAmount = 100;\r\n                this.localPlayerData.playerHealth = 100;\r\n            }\r\n\r\n            // update player speed \r\n            getPlayerSpeed(this.playerData, this.localPlayerData);\r\n\r\n            // get player position\r\n            const new_playerPosition = updatePlayerPosition(this.playerData, this.localPlayerData);\r\n\r\n            if (this.localPlayerData.gameState === GAME_STATE.FREEZE) {\r\n                let filedWidth = this.state.gameBoardWidth;\r\n                let filedHeight = this.state.gameBoardHeight;\r\n\r\n                this.setState({ cameraSize: filedWidth > filedHeight ? filedWidth : filedHeight });\r\n                this.setState({ playerPosition: { x: filedWidth / 2, y: filedHeight / 2 } });\r\n                audio.pause();\r\n                \r\n\r\n            } else {\r\n                this.setState({ playerPosition: new_playerPosition });\r\n            }\r\n\r\n            // get splat (include draw bullet)\r\n            let [aimPoints, inkConsumption] = getSplats(this.playerData, this.localPlayerData, this.otherPlayerData);\r\n\r\n            //get and update ink amount  ******* and health \r\n            const new_inkAmountNhealth = getInkAmount(inkConsumption, this.playerData, this.localPlayerData);\r\n            this.setState({ inkAmount: new_inkAmountNhealth[0], healthAmount: new_inkAmountNhealth[1] });\r\n\r\n            this.otherPlayerData.push(this.playerData);\r\n            //console.log(this.otherPlayerData);\r\n            drawAllPlayers(this.splatRef, this.bulletRef, this.playerRef, this.splatAnimationRef, this.otherPlayerData,\r\n                this.playerData.playerPosition.x, this.playerData.playerPosition.y, this.playerData.playerTeam);\r\n\r\n            // draw aim point\r\n            drawAimPoint(this.aimPointRef, this.playerData.playerPosition, this.localPlayerData.mousePosition, this.playerData.playerAngle, aimPoints);\r\n\r\n\r\n        }\r\n        else {\r\n            this.setState({ cameraSize: 2000 });\r\n        }\r\n        // update time\r\n        this.localPlayerData.timeStamp = Date.now();\r\n        if (this.localPlayerData.gameTime < 10) this.localPlayerData.timeColor = \"#c71585\";\r\n        if (this.localPlayerData.gameTime === 0){\r\n            audio2.play()\r\n        }\r\n        if (this.localPlayerData.gameTime <= 0) {\r\n            this.localPlayerData.gameState = GAME_STATE.FREEZE;\r\n\r\n            if (this.localPlayerData.gameTime <= -5) {\r\n                this.localPlayerData.gameState = GAME_STATE.FINISH;\r\n            }\r\n        }\r\n\r\n        this.props.socket.emit('updateGame', { ...this.playerData });\r\n\r\n        if (this.localPlayerData.gameState === GAME_STATE.FREEZE && this.calculateResultFlag === 0) {\r\n            let gameResult = getGameResult(this.fieldRef, this.splatRef, this.playerData, this.localPlayerData);\r\n\r\n            var Afloat = parseInt(gameResult.A * 1000) / 10;\r\n            var Bfloat = parseInt(gameResult.B * 1000) / 10;\r\n\r\n            this.setState({ gameResult: { A: Afloat, B: Bfloat } });\r\n            this.setState({ resultImage: gameResult.resultImage });\r\n\r\n            if (Afloat === Bfloat) {\r\n                this.setState({ winOrLose: \"Tie\" });\r\n            } else if (Afloat > Bfloat) {\r\n                if (this.playerData.playerTeam === 'A') {\r\n                    this.setState({ winOrLose: \"You Win!!\" });\r\n                } else {\r\n                    this.setState({ winOrLose: \"You Loss...\" });\r\n                }\r\n            } else if (Afloat < Bfloat) {\r\n                if (this.playerData.playerTeam === 'B') {\r\n                    this.setState({ winOrLose: \"You Win!!\" });\r\n                } else {\r\n                    this.setState({ winOrLose: \"You Loss...\" });\r\n                }\r\n            }\r\n            this.calculateResultFlag = 1;\r\n\r\n            // console.log(this.state.gameResult);\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.updateIntervalId = setInterval(() => {\r\n            this.updateGame();\r\n        }, 20);\r\n        drawField(this.fieldRef);\r\n\r\n        window.addEventListener(\"keyup\", this.onKeyUp);\r\n        window.addEventListener(\"keydown\", this.onKeyDown);\r\n        window.addEventListener(\"mousemove\", this.trackMouse);\r\n        window.addEventListener(\"mousedown\", this.mouseDown);\r\n        window.addEventListener(\"mouseup\", this.mouseUp);\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.resultImage)\r\n        let gameTime = this.localPlayerData.gameTime > 0 ? this.localPlayerData.gameTime : 0;\r\n        let anouncement = [];\r\n        for (let i = 0; i < this.state.anouncement.length; ++i) {\r\n            anouncement.push(\r\n                // needs some improvement\r\n                <text id=\"anouncement\" x=\"50\" y={40 + 30 * i} width=\"300\" height=\"200\" key={i}>\r\n                    {this.state.anouncement[i][0] + ' killed ' + this.state.anouncement[i][1]}\r\n                </text>\r\n            )\r\n        }\r\n\r\n        let timesUp = ''\r\n\r\n        if (this.localPlayerData.gameState === GAME_STATE.FREEZE) {\r\n            timesUp = (\r\n                <div id='timesUp'>\r\n                    <h1>Time's Up!</h1>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.localPlayerData.gameState === GAME_STATE.GAMING || this.localPlayerData.gameState === GAME_STATE.FREEZE) {\r\n            return (\r\n                <div id=\"game-container\">\r\n\r\n                    <svg id=\"svg-container\"\r\n                        width={Math.max(window.innerWidth, window.innerHeight)}\r\n                        height={Math.max(window.innerWidth, window.innerHeight)}\r\n                        preserveAspectRatio=\"xMidYMid slice\"\r\n                        viewBox={\r\n                            [this.state.cameraSize / -2 + this.state.playerPosition.x,\r\n                            this.state.cameraSize / -4 + this.state.playerPosition.y,\r\n                            this.state.cameraSize,\r\n                            this.state.cameraSize]}>\r\n                        <foreignObject x=\"0\" y=\"0\" width=\"10000\" height=\"10000\">\r\n                            <canvas id=\"groundLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.groundRef = el} />\r\n                            <canvas id=\"splatLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.splatRef = el} />\r\n                            <canvas id=\"splatAnimationLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.splatAnimationRef = el} />\r\n                            <canvas id=\"fieldLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.fieldRef = el} />\r\n                            <canvas id=\"playerLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.playerRef = el} />\r\n                            <canvas id=\"itemLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.itemRef = el} />\r\n                            <canvas id=\"bulletLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.bulletRef = el} />\r\n                            <canvas id=\"aimPointLayer\" width={this.state.gameBoardWidth} height={this.state.gameBoardHeight} ref={el => this.aimPointRef = el} />\r\n                        </foreignObject>\r\n                    </svg>\r\n                    <svg id=\"info-container\"\r\n                        x=\"0\" y=\"0\"\r\n                        width={window.innerWidth}\r\n                        height={window.innerHeight} >\r\n                        <InkBar inkColor={this.playerData.playerColor} inkAmount={this.localPlayerData.inkAmount} />\r\n                        <text id=\"timer\" x=\"600\" y=\"80\" width=\"300\" height=\"100\" style={{ fill: this.localPlayerData.timeColor }}>{gameTime}</text>\r\n                        <HP hp={this.localPlayerData.playerHealth} />\r\n                        {anouncement}\r\n                    </svg>\r\n                    {timesUp}\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            // this.props.socket.disconnect();\r\n            // this.props.socket.open();\r\n            return (\r\n                <Redirect to={{\r\n                    pathname: `/result/${this.props.roomId}`,\r\n                    state: {\r\n                        result: this.state.gameResult,\r\n                        teamColor: this.playerData.teamColor,\r\n                        winOrLose: this.state.winOrLose,\r\n                        // resultImage: this.state.resultImage,\r\n                    }\r\n                }}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        window.removeEventListener(\"keyup\", this.onKeyUp);\r\n        window.removeEventListener(\"keydown\", this.onKeyDown);\r\n        window.removeEventListener(\"mousemove\", this.trackMouse);\r\n        window.removeEventListener(\"mousedown\", this.mouseDown);\r\n        window.removeEventListener(\"mouseup\", this.mouseUp);\r\n        this.props.socket.off('updateGame');\r\n        this.props.socket.off('getGameTime');\r\n        this.props.socket.off('killEvent');\r\n        clearInterval(this.updateIntervalId);\r\n        clearInterval(this.anounceIntervalId);\r\n    }\r\n}\r\n\r\nexport default Game;\r\n\r\n","import React, {Component} from 'react'\r\nimport './JumpOutWindow.css'\r\n\r\n\r\nfunction myForm(e){\r\n    return(\r\n        <div className='Jump-component' key={e}>\r\n            <h3>{e}</h3>\r\n            <input></input>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nclass JumpOutWindow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            show: this.props.display,\r\n            list: this.props.list,\r\n            form: this.props.form,\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.display !== prevProps.display) {\r\n          this.setState({show: this.props.display})\r\n        }\r\n    }\r\n\r\n    closeJumpOut = () => {\r\n        console.log(this.state.show)\r\n        this.setState({show: {display: \"none\"}})\r\n    }\r\n\r\n    handleInputChange(event, el){\r\n        var formTemp = this.state.form\r\n        formTemp[el] = event.target.value\r\n        this.setState({form: formTemp})\r\n    }\r\n\r\n    handleSubmit(id) {\r\n        console.log(id)\r\n        this.props.socket.emit(id, {\r\n            form: this.state.form\r\n        })\r\n\r\n        this.props.socket.once('recieved' + id, (data) => {\r\n            console.log(\"recieved \",data)\r\n            if(data.message === 'OK') \r\n                this.closeJumpOut()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.state.form)\r\n        return(\r\n            <div style={this.state.show} className='Jump-bg'>\r\n                <div className=\"Jump-container\">\r\n                    <button onClick={this.closeJumpOut} className='Jump-closeButton'>\r\n                        X\r\n                    </button>\r\n                    <h2>{this.props.title}</h2>\r\n                    {this.props.list.map( el => \r\n                        <div className='Jump-component' key={el}>\r\n                            <h3>{el}</h3>\r\n                            <input onChange={(e) => this.handleInputChange(e, el)}></input>\r\n                        </div>\r\n                    )}\r\n                    <button className='App_button' \r\n                            onClick={() => this.handleSubmit(this.props.id)}>\r\n                        {this.props.submit}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default JumpOutWindow","import React, {Component} from 'react'\r\nimport temp from '../images/temp.gif'\r\nimport logo from '../images/logo.png'\r\nimport JumpOutWindow from '../components/JumpoutWindow'\r\nimport './Home.css'\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            login_display : {display: \"none\"},\r\n            signup_display: {display: \"none\"},\r\n            isLoggedin: false,\r\n            userName: 'Player',\r\n            userStatus: 'Guest'\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.socket.once('recievedlogin', (data) => {\r\n            console.log(\"home\", data)\r\n            if (data.message === 'OK'){\r\n                this.setState({\r\n                    isLoggedin: true,\r\n                    userName: data.userName,\r\n                    userStatus: data.userStatus\r\n                })\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    handleInputName = (e) => {\r\n        if (e.target.value !== '') { this.props.setName(e.target.value); }\r\n        if (e.key === 'Enter') { this.handlePlay() }\r\n    }\r\n\r\n    handlePlay = () => {\r\n        this.props.socket.emit('newPlayer', {\r\n            name: this.props.name\r\n        })\r\n        this.props.socket.once('getFirstInInfo', (data) => {\r\n            this.props.setRoomId(data.roomId);\r\n            this.props.setUid(data.uid);\r\n            this.props.setTeam(data.team);\r\n            this.props.setTeamColor(data.teamColor);\r\n            this.props.history.push(`/wait/${this.props.roomId}`);\r\n        })\r\n    }\r\n\r\n    handleDisplay(id) {\r\n        if(id === 'login'){\r\n            this.setState({login_display: {display: \"block\"}})\r\n        }\r\n        else if(id === 'signup') {\r\n            this.setState({signup_display: {display: \"block\"}})\r\n        } \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='Home_container'>\r\n                \r\n                <button className='App_button top-button' onClick={() => this.handleDisplay('signup')}>\r\n                    Sign up\r\n                </button>\r\n                <button className='App_button top-button' onClick={() => this.handleDisplay('login')}>\r\n                    Log in\r\n                </button>\r\n                <h3  id='hiMessage'>Hi, {this.state.userName}</h3>\r\n                \r\n                <JumpOutWindow \r\n                    display={this.state.login_display} \r\n                    title=\"Log in\" form={{id: '', pw: ''}} list={[\"id\", \"pw\"]}\r\n                    submit=\"Log in!\" id=\"login\"\r\n                    socket={this.props.socket}\r\n                    />\r\n                <JumpOutWindow \r\n                    display={this.state.signup_display}\r\n                    title='Sign up' form={{email:'',id: '', pw: '', pw_again:''}} list={[\"email\", \"id\", \"pw\", \"pw again\"]}\r\n                    submit=\"Sign up!\" id='signup'\r\n                    socket={this.props.socket}\r\n                    />\r\n                <div className='Home_main'>\r\n                    <img src={logo}></img>\r\n                    <input \r\n                        id=\"Name\"\r\n                        autoComplete=\"off\"\r\n                        spellCheck=\"false\"\r\n                        onKeyUp={this.handleInputName}\r\n                    />\r\n                    <button className='App_button' onClick={this.handlePlay}>\r\n                        Play!\r\n                    </button>\r\n                </div>\r\n                <div className='Home_mask'></div>\r\n                <div id='bg_wrapper'>\r\n                    <img src={temp} id='bg_img'></img>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n// import green from '../images/player/green/p-01.svg'\r\n// import orange from '../images/player/orange/p-01.svg'\r\nimport { COLOR_ASSET } from './ColorAssets'\r\n\r\nimport greenPlayer from '../images/player/green/p-01.svg'\r\nimport purplePlayer from '../images/player/purple/p-01.svg'\r\nimport bluePlayer from '../images/player/blue/p-01.svg'\r\nimport pinkPlayer from '../images/player/pink/p-01.svg'\r\n\r\nimport './UserBlock.css'\r\n\r\nclass UserBlock extends React.Component {\r\n\r\n    render() {\r\n        var img_src = \"\";\r\n        switch (this.props.color) {\r\n            case COLOR_ASSET[0].main:\r\n                img_src = pinkPlayer;\r\n                break;\r\n            case COLOR_ASSET[1].main:\r\n                img_src = bluePlayer\r\n                break;\r\n            case COLOR_ASSET[2].main:\r\n                img_src = greenPlayer;\r\n                break;\r\n            case COLOR_ASSET[3].main:\r\n                img_src = purplePlayer;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        console.log(this.props.status)\r\n        var style = {}\r\n        if(this.props.isSelf){\r\n            style = {filter: \"drop-shadow(0px 0px 3px rgb(0,0,0,0.7))\", border: \"solid 2px\"}\r\n        }\r\n        return (\r\n            <div className='UserBlock-container' style={style}>\r\n                <img src={img_src} alt={this.props.userName} />\r\n                <h3>{this.props.userName}   <i id =\"record\">{this.props.playerRecord || 'guest'}</i> </h3>\r\n                \r\n                <h4>{this.props.status? 'Online!':'Waiting...' }</h4>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserBlock","import React, { Component } from 'react'\r\nimport './Wait.css'\r\nimport UserBlock from '../components/UserBlock'\r\nimport { COLOR_ASSET } from '../components/ColorAssets'\r\n\r\nclass Wait extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            teamA: [],\r\n            teamB: [],\r\n            isRoomFull: [],\r\n            teamAColor: COLOR_ASSET[this.props.teamColor['A']],\r\n            teamBColor: COLOR_ASSET[this.props.teamColor['B']],\r\n            waitingMessage: '',\r\n            currentPlayers: {}\r\n        }\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        this.props.socket.emit('getRoomPlayers', {\r\n            roomId: this.props.roomId,\r\n            uid: this.props.uid\r\n        });\r\n\r\n        this.props.socket.on('getRoomPlayers', (data) => {\r\n            let waitingForPlayer = data.maxPlayers - data.teamA.length - data.teamB.length;\r\n            if (waitingForPlayer < 0) waitingForPlayer = 0;\r\n\r\n            this.setState({\r\n                teamA: data.teamA, //.map(p => p.name),\r\n                teamB: data.teamB, //.map(p => p.name),\r\n                isRoomFull: data.isRoomFull,\r\n                maxPlayers: data.maxPlayers,\r\n                waitingMessage: `waiting for ${waitingForPlayer} more players to join...`\r\n            });\r\n            if(waitingForPlayer === 0){\r\n                this.setState({waitingMessage: \"Waiting... press back and re-enter if you don't wanna wait\"})\r\n            }\r\n        });\r\n        \r\n        this.props.socket.on('getWaitTime', (data) => {\r\n            this.setState({\r\n                waitTime: data.waitTime,\r\n                waitingMessage: `${data.waitTime} seconds before starts...`\r\n            })\r\n            if (data.waitTime <= 0) {\r\n                this.props.socket.off('getWaitTime');\r\n            }\r\n        })\r\n\r\n        this.props.socket.on('startGaming', () => {\r\n            this.props.history.push(`/game/${this.props.roomId}`);\r\n        })\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.props.socket.disconnect();\r\n        this.props.socket.open()\r\n        this.props.history.push('/home');\r\n        this.props.setName();\r\n    }\r\n\r\n    //61,67 playerRecord 的部分，如果有登入就送他的紀錄，不然就送個''，UserBlock物件裡面得到''就會印出guest\r\n\r\n    render() {\r\n        let teamA = this.state.teamA.map(e =>\r\n            <li key={e.name}>\r\n                <UserBlock userName={e.name} playerRecord=''/*playerRecord={ isLoggin? this.props.playerRecord : ''}*/ \r\n                status={e.inWaitingRoom} team='A' color = {this.state.teamAColor.main}\r\n                isSelf={e.uid === this.props.uid}\r\n                />\r\n            </li>\r\n        );\r\n\r\n        let teamB = this.state.teamB.map(e =>\r\n            <li key={e.name}>\r\n                <UserBlock userName={e.name}  playerRecord=''\r\n                 status={e.inWaitingRoom}  team='B'  color = {this.state.teamBColor.main}\r\n                 isSelf={e.uid === this.props.uid}\r\n                 />\r\n            </li>\r\n        );\r\n\r\n        console.log(this.state.teamA)\r\n\r\n        return (\r\n            <div className='Wait_container'>\r\n                <h1>Game Lobby</h1>\r\n                <h3 id='Wait_message'>{this.state.waitingMessage}</h3>\r\n                <div id='Wait_wrapper'>\r\n                    <div className='Wait_group' style={{background: this.state.teamAColor.shadow}} >\r\n                        <h3 className='Wait_grouptitle' >TEAM A</h3>\r\n                        <ul>\r\n                            {teamA}\r\n                        </ul>\r\n                    </div>\r\n                    <div className='Wait_group' style={{background: this.state.teamBColor.shadow}}>\r\n                        <h3>TEAM B</h3>\r\n                        <ul>\r\n                            {teamB}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div id='Wait_button'>\r\n                    <button className='App_button' id=\"back\" onClick={this.handleBack}>\r\n                        {\"<\"} Back\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.socket.off('getRoomPlayers');\r\n        this.props.socket.off('getWaitTime');\r\n        this.props.socket.off('startGaming');\r\n    }\r\n}\r\n\r\nexport default Wait","import React, { Component } from 'react'\r\nimport './Result.css'\r\nimport { COLOR_ASSET } from '../components/ColorAssets'\r\nimport resultBarSVG from '../images/resultBar.svg'\r\n\r\n\r\nclass Result extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        console.log(this.props.location.state)\r\n        this.state = {\r\n            teamAColor: COLOR_ASSET[this.props.location.state.teamColor['A']], //把[]裡面的數字換成teamColorA,\r\n            teamBColor: COLOR_ASSET[this.props.location.state.teamColor['B']],\r\n            teamAarea: this.props.location.state.result['A'],\r\n            teamBarea: this.props.location.state.result['B'],\r\n            winOrLose: this.props.location.state.winOrLose,\r\n            resultImage: this.props.resultImage,\r\n        }\r\n    }\r\n\r\n    handleOK = () => {\r\n        this.props.history.push(`/wait/${this.props.roomId}`);\r\n    }\r\n\r\n    render() {\r\n        const inkStyleA = {\r\n            fill: this.state.teamAColor.main,\r\n            filter: \"drop-shadow(0px 0px 5px \" + this.state.teamAColor.glow + \")\"\r\n        }\r\n        const inkStyleB = {\r\n            fill: this.state.teamBColor.main,\r\n            filter: \"drop-shadow(0px 0px 5px \" + this.state.teamBColor.glow + \")\"\r\n        }\r\n        var Afloat = this.state.teamAarea;\r\n        //Afloat = Afloat === NaN ? 0 : Afloat\r\n        var Bfloat = this.state.teamBarea;\r\n        //Bfloat = Bfloat === NaN ? 0 : Bfloat\r\n        var Whitefloat = 1 - Afloat - Bfloat;\r\n\r\n        return (\r\n            <div className='Result-container'>\r\n                <h1>Result: {this.state.winOrLose}</h1>\r\n                <div className='Result-number-container'>\r\n                    <div className='Result-number' style={{ color: this.state.teamAColor }}>\r\n                        <h2>Team A</h2>\r\n                        <h3>{Afloat}%</h3>\r\n                    </div>\r\n                    <div className='Result-number' style={{ color: this.state.teamBColor }}>\r\n                        <h2>Team B</h2>\r\n                        <h3>{Bfloat}%</h3>\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n                    <svg width=\"1200\" height=\"100\" x=\"200\" y=\"200\">\r\n                        <rect className=\"inkBar\"\r\n                            x=\"40\" y=\"20\" width={1120 * Afloat / (Afloat + Bfloat + 0.0001)} height=\"60\" style={inkStyleA} />\r\n\r\n                        <rect className=\"inkBar\"\r\n                            x={40 + 1120 * Afloat / (Afloat + Bfloat + 0.0001)} y=\"20\" width={1120 * Bfloat / (Afloat + Bfloat + 0.0001)} height=\"60\" style={inkStyleB} />\r\n\r\n                        <rect className=\"inkBar\"\r\n                            x={40 + 1120 * Afloat / (Afloat + Bfloat + 0.0001)} y=\"20\" width=\"5\" height=\"60\" style={{ fill: \"#FFFFFF\" }} />\r\n\r\n                        <image href={resultBarSVG} width=\"1200\" height=\"100\" />\r\n                    </svg>\r\n                </div>\r\n\r\n                <div className = 'result-image'>\r\n                    {this.state.resultImage}}\r\n                </div>\r\n                <button className='App_button' onClick={this.handleOK}>OK!</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Result;","import React, {Component} from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport {Redirect} from 'react-router'\r\nimport io from 'socket.io-client';\r\nimport Game from '../components/Game'\r\nimport Home from './Home'\r\nimport Wait from './Wait'\r\nimport Result from './Result'\r\n\r\n//let host = '140.112.244.155:8080' // server ip (andyh0913 for temporary use)\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.socket = io(host);\r\n        // this.socket = io('http://localhost:8080');\r\n        this.socket = io('http://192.168.0.175:8080');\r\n        this.state = {\r\n            roomId: null,\r\n            name: 'Player',\r\n            uid: null,\r\n            team: null,\r\n            teamColor: [],\r\n        }\r\n    }\r\n\r\n    changeStatus = {\r\n        setRoomId: (roomId) => { this.setState( {roomId: roomId} ); },\r\n        setName: (name) => { \r\n            if (name) this.setState( {name: name} ); \r\n            else this.setState( {name: 'Player'})\r\n        },\r\n        setUid: (uid) => { this.setState( {uid: uid} ); },\r\n        setTeam: (team) => { this.setState( {team: team} ); },\r\n        setTeamColor: (teamColor) => { this.setState( {teamColor: teamColor} ); }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Switch>\r\n                <Route exact path='/' render={() => \r\n                    <Redirect to='/home' />} \r\n                />\r\n                <Route path='/home' render={(props) => <Home {...props} {...this.state}\r\n                    {...this.changeStatus}\r\n                    socket={this.socket} />}\r\n                />\r\n                <Route path={`/wait/${this.state.roomId}`} render={(props) => {\r\n                    if (this.state.socket)\r\n                        console.log(this.state.socket.id)\r\n                    return <Wait {...props} {...this.state}\r\n                    socket={this.socket}\r\n                    setName={this.changeStatus.setName} />}\r\n                    }\r\n                />\r\n                <Route path={`/game/${this.state.roomId}`} render={(props) => <Game {...props} {...this.state}\r\n                    socket={this.socket}\r\n                    setRoomId={this.changeStatus.setRoomId} />}\r\n                />\r\n                <Route path={`/result/${this.state.roomId}`} render={(props) => <Result {...props} {...this.state}\r\n                    socket={this.socket} />}\r\n                />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index","import React from 'react';\r\nimport './App.css';\r\nimport Index from './Index'\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Index></Index>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/p-01.54c2f306.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-01.e1ee8701.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-01.22deb91f.svg\";","module.exports = __webpack_public_path__ + \"static/media/p-01.180d22f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/HitEffectiveCommon02.bb9ea272.wav\";","module.exports = __webpack_public_path__ + \"static/media/BulletHitNoDamage.6e0d3ed4.wav\";"],"sourceRoot":""}